{
    "kind": "discovery#restDescription",
    "etag": "",
    "discoveryVersion": "v1",
    "id": "classroom:v1",
    "name": "classroom",
    "version": "v1",
    "title": "Google Classroom API",
    "description": "Manages classes, rosters, and invitations in Google Classroom.",
    "documentationLink": "https://developers.google.com/classroom/",
    "protocol": "rest",
    "rootUrl": "https://classroom.googleapis.com/",
    "servicePath": "",
    "auth": {
        "oauth2": [
            "https://www.googleapis.com/auth/classroom.courses.readonly",
            "https://www.googleapis.com/auth/classroom.courses",
            "https://www.googleapis.com/auth/classroom.coursework.me",
            "https://www.googleapis.com/auth/classroom.rosters.readonly",
            "https://www.googleapis.com/auth/classroom.student-submissions.me.readonly",
            "https://www.googleapis.com/auth/classroom.coursework.students.readonly",
            "https://www.googleapis.com/auth/classroom.student-submissions.students.readonly",
            "https://www.googleapis.com/auth/classroom.rosters",
            "https://www.googleapis.com/auth/classroom.profile.emails",
            "https://www.googleapis.com/auth/classroom.coursework.me.readonly",
            "https://www.googleapis.com/auth/classroom.coursework.students",
            "https://www.googleapis.com/auth/classroom.profile.photos"
        ]
    },
    "parameters": [
        {
            "name": "quotaUser",
            "desc": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
            "type": "string"
        },
        {
            "name": "pp",
            "desc": "Pretty-print response.",
            "type": "bool",
            "default": "true"
        },
        {
            "name": "fields",
            "desc": "Selector specifying which fields to include in a partial response.",
            "type": "string"
        },
        {
            "name": "$.xgafv",
            "desc": "V1 error format.",
            "type": "string",
            "enum": [
                {
                    "name": "1",
                    "desc": "v1 error format"
                },
                {
                    "name": "2",
                    "desc": "v2 error format"
                }
            ]
        },
        {
            "name": "oauth_token",
            "desc": "OAuth 2.0 token for the current user.",
            "type": "string"
        },
        {
            "name": "prettyPrint",
            "desc": "Returns response with indentations and line breaks.",
            "type": "bool",
            "default": "true"
        },
        {
            "name": "key",
            "desc": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
            "type": "string"
        },
        {
            "name": "callback",
            "desc": "JSONP",
            "type": "string"
        },
        {
            "name": "uploadType",
            "desc": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
            "type": "string"
        },
        {
            "name": "bearer_token",
            "desc": "OAuth bearer token.",
            "type": "string"
        },
        {
            "name": "upload_protocol",
            "desc": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
            "type": "string"
        },
        {
            "name": "access_token",
            "desc": "OAuth access token.",
            "type": "string"
        },
        {
            "name": "alt",
            "desc": "Data format for response.",
            "type": "string",
            "default": "json",
            "enum": [
                {
                    "name": "json",
                    "desc": "Responses with Content-Type of application/json"
                },
                {
                    "name": "media",
                    "desc": "Media download with context-dependent Content-Type"
                },
                {
                    "name": "proto",
                    "desc": "Responses with Content-Type of application/x-protobuf"
                }
            ]
        }
    ],
    "schemas": [
        {
            "name": "CourseWork",
            "desc": "Course work created by a teacher for students of the course.",
            "type": "object",
            "fields": [
                {
                    "name": "associatedWithDeveloper",
                    "desc": "Whether this course work item is associated with the Developer Console\nproject making the request.\n\nSee google.classroom.Work.CreateCourseWork for more\ndetails.\n\nRead-only.",
                    "type": "bool"
                },
                {
                    "name": "updateTime",
                    "desc": "Timestamp of the most recent change to this course work.\n\nRead-only.",
                    "type": "datetime"
                },
                {
                    "name": "workType",
                    "desc": "Type of this course work.\n\nThe type is set when the course work is created and cannot be changed.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "COURSE_WORK_TYPE_UNSPECIFIED",
                            "desc": "No work type specified. This is never returned."
                        },
                        {
                            "name": "ASSIGNMENT",
                            "desc": "An assignment."
                        },
                        {
                            "name": "SHORT_ANSWER_QUESTION",
                            "desc": "A short answer question."
                        },
                        {
                            "name": "MULTIPLE_CHOICE_QUESTION",
                            "desc": "A multiple-choice question."
                        }
                    ]
                },
                {
                    "name": "multipleChoiceQuestion",
                    "desc": "Multiple choice question details.\nFor read operations, this field is populated only when `work_type` is\n`MULTIPLE_CHOICE_QUESTION`.\nFor write operations, this field must be specified when creating course\nwork with a `work_type` of `MULTIPLE_CHOICE_QUESTION`, and it must not be\nset otherwise.",
                    "type": "ref",
                    "refType": "MultipleChoiceQuestion"
                },
                {
                    "name": "courseId",
                    "desc": "Identifier of the course.\n\nRead-only.",
                    "type": "string"
                },
                {
                    "name": "assignment",
                    "desc": "Assignment details.\nThis is populated only when `work_type` is `ASSIGNMENT`.\n\nRead-only.",
                    "type": "ref",
                    "refType": "Assignment"
                },
                {
                    "name": "dueTime",
                    "desc": "Optional time of day, in UTC, that submissions for this this course work\nare due.\nThis must be specified if `due_date` is specified.",
                    "type": "ref",
                    "refType": "TimeOfDay"
                },
                {
                    "name": "materials",
                    "desc": "Additional materials.\n\nCourseWork must have no more than 20 material items.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Material"
                },
                {
                    "name": "dueDate",
                    "desc": "Optional date, in UTC, that submissions for this this course work are due.\nThis must be specified if `due_time` is specified.",
                    "type": "ref",
                    "refType": "Date"
                },
                {
                    "name": "creationTime",
                    "desc": "Timestamp when this course work was created.\n\nRead-only.",
                    "type": "datetime"
                },
                {
                    "name": "maxPoints",
                    "desc": "Maximum grade for this course work.\nIf zero or unspecified, this assignment is considered ungraded.\nThis must be a non-negative integer value.",
                    "type": "float64"
                },
                {
                    "name": "id",
                    "desc": "Classroom-assigned identifier of this course work, unique per course.\n\nRead-only.",
                    "type": "string"
                },
                {
                    "name": "description",
                    "desc": "Optional description of this course work.\nIf set, the description must be a valid UTF-8 string containing no more\nthan 30,000 characters.",
                    "type": "string"
                },
                {
                    "name": "submissionModificationMode",
                    "desc": "Setting to determine when students are allowed to modify submissions.\nIf unspecified, the default value is `MODIFIABLE_UNTIL_TURNED_IN`.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "SUBMISSION_MODIFICATION_MODE_UNSPECIFIED",
                            "desc": "No modification mode specified. This is never returned."
                        },
                        {
                            "name": "MODIFIABLE_UNTIL_TURNED_IN",
                            "desc": "Submisisons can be modified before being turned in."
                        },
                        {
                            "name": "MODIFIABLE",
                            "desc": "Submisisons can be modified at any time."
                        }
                    ]
                },
                {
                    "name": "title",
                    "desc": "Title of this course work.\nThe title must be a valid UTF-8 string containing between 1 and 3000\ncharacters.",
                    "type": "string"
                },
                {
                    "name": "alternateLink",
                    "desc": "Absolute link to this course work in the Classroom web UI.\nThis is only populated if `state` is `PUBLISHED`.\n\nRead-only.",
                    "type": "string"
                },
                {
                    "name": "state",
                    "desc": "Status of this course work.\nIf unspecified, the default state is `DRAFT`.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "COURSE_WORK_STATE_UNSPECIFIED",
                            "desc": "No state specified. This is never returned."
                        },
                        {
                            "name": "PUBLISHED",
                            "desc": "Status for work that has been published.\nThis is the default state."
                        },
                        {
                            "name": "DRAFT",
                            "desc": "Status for work that is not yet published.\nWork in this state is visible only to course teachers and domain\nadministrators."
                        },
                        {
                            "name": "DELETED",
                            "desc": "Status for work that was published but is now deleted.\nWork in this state is visible only to course teachers and domain\nadministrators.\nWork in this state is deleted after some time."
                        }
                    ]
                }
            ]
        },
        {
            "name": "ShortAnswerSubmission",
            "desc": "Student work for a short answer question.",
            "type": "object",
            "fields": [
                {
                    "name": "answer",
                    "desc": "Student response to a short-answer question.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "Invitation",
            "desc": "An invitation to join a course.",
            "type": "object",
            "fields": [
                {
                    "name": "id",
                    "desc": "Identifier assigned by Classroom.\n\nRead-only.",
                    "type": "string"
                },
                {
                    "name": "courseId",
                    "desc": "Identifier of the course to invite the user to.",
                    "type": "string"
                },
                {
                    "name": "role",
                    "desc": "Role to invite the user to have.\nMust not be `COURSE_ROLE_UNSPECIFIED`.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "COURSE_ROLE_UNSPECIFIED",
                            "desc": "No course role."
                        },
                        {
                            "name": "STUDENT",
                            "desc": "Student in the course."
                        },
                        {
                            "name": "TEACHER",
                            "desc": "Teacher of the course."
                        }
                    ]
                },
                {
                    "name": "userId",
                    "desc": "Identifier of the invited user.\n\nWhen specified as a parameter of a request, this identifier can be set to\none of the following:\n\n* the numeric identifier for the user\n* the email address of the user\n* the string literal `\"me\"`, indicating the requesting user",
                    "type": "string"
                }
            ]
        },
        {
            "name": "Material",
            "desc": "Material attached to course work.\n\nWhen creating attachments, setting the `form` field is not supported.",
            "type": "object",
            "fields": [
                {
                    "name": "driveFile",
                    "desc": "Google Drive file material.",
                    "type": "ref",
                    "refType": "SharedDriveFile"
                },
                {
                    "name": "link",
                    "desc": "Link material. On creation, will be upgraded to a more appropriate type\nif possible, and this will be reflected in the response.",
                    "type": "ref",
                    "refType": "Link"
                },
                {
                    "name": "youtubeVideo",
                    "desc": "YouTube video material.",
                    "type": "ref",
                    "refType": "YouTubeVideo"
                },
                {
                    "name": "form",
                    "desc": "Google Forms material.",
                    "type": "ref",
                    "refType": "Form"
                }
            ]
        },
        {
            "name": "ListStudentsResponse",
            "desc": "Response when listing students.",
            "type": "object",
            "fields": [
                {
                    "name": "nextPageToken",
                    "desc": "Token identifying the next page of results to return. If empty, no further\nresults are available.",
                    "type": "string"
                },
                {
                    "name": "students",
                    "desc": "Students who match the list request.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Student"
                }
            ]
        },
        {
            "name": "DriveFolder",
            "desc": "Representation of a Google Drive folder.",
            "type": "object",
            "fields": [
                {
                    "name": "title",
                    "desc": "Title of the Drive folder.\n\nRead-only.",
                    "type": "string"
                },
                {
                    "name": "alternateLink",
                    "desc": "URL that can be used to access the Drive folder.\n\nRead-only.",
                    "type": "string"
                },
                {
                    "name": "id",
                    "desc": "Drive API resource ID.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "Teacher",
            "desc": "Teacher of a course.",
            "type": "object",
            "fields": [
                {
                    "name": "courseId",
                    "desc": "Identifier of the course.\n\nRead-only.",
                    "type": "string"
                },
                {
                    "name": "profile",
                    "desc": "Global user information for the teacher.\n\nRead-only.",
                    "type": "ref",
                    "refType": "UserProfile"
                },
                {
                    "name": "userId",
                    "desc": "Identifier of the user.\n\nWhen specified as a parameter of a request, this identifier can be one of\nthe following:\n\n* the numeric identifier for the user\n* the email address of the user\n* the string literal `\"me\"`, indicating the requesting user",
                    "type": "string"
                }
            ]
        },
        {
            "name": "UserProfile",
            "desc": "Global information for a user.",
            "type": "object",
            "fields": [
                {
                    "name": "emailAddress",
                    "desc": "Email address of the user.\n\nRead-only.",
                    "type": "string"
                },
                {
                    "name": "permissions",
                    "desc": "Global permissions of the user.\n\nRead-only.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "GlobalPermission"
                },
                {
                    "name": "id",
                    "desc": "Identifier of the user.\n\nRead-only.",
                    "type": "string"
                },
                {
                    "name": "name",
                    "desc": "Name of the user.\n\nRead-only.",
                    "type": "ref",
                    "refType": "Name"
                },
                {
                    "name": "photoUrl",
                    "desc": "URL of user's profile photo.\n\nRead-only.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "GuardianInvitation",
            "desc": "An invitation to become the guardian of a specified user, sent to a specified\nemail address.",
            "type": "object",
            "fields": [
                {
                    "name": "invitedEmailAddress",
                    "desc": "Email address that the invitation was sent to.\nThis field is only visible to domain administrators.",
                    "type": "string"
                },
                {
                    "name": "studentId",
                    "desc": "ID of the student (in standard format)",
                    "type": "string"
                },
                {
                    "name": "creationTime",
                    "desc": "The time that this invitation was created.\n\nRead-only.",
                    "type": "datetime"
                },
                {
                    "name": "invitationId",
                    "desc": "Unique identifier for this invitation.\n\nRead-only.",
                    "type": "string"
                },
                {
                    "name": "state",
                    "desc": "The state that this invitation is in.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "GUARDIAN_INVITATION_STATE_UNSPECIFIED",
                            "desc": "Should never be returned."
                        },
                        {
                            "name": "PENDING",
                            "desc": "The invitation is active and awaiting a response."
                        },
                        {
                            "name": "COMPLETE",
                            "desc": "The invitation is no longer active. It may have been accepted, declined,\nwithdrawn or it may have expired."
                        }
                    ]
                }
            ]
        },
        {
            "name": "YouTubeVideo",
            "desc": "YouTube video item.",
            "type": "object",
            "fields": [
                {
                    "name": "thumbnailUrl",
                    "desc": "URL of a thumbnail image of the YouTube video.\n\nRead-only.",
                    "type": "string"
                },
                {
                    "name": "title",
                    "desc": "Title of the YouTube video.\n\nRead-only.",
                    "type": "string"
                },
                {
                    "name": "alternateLink",
                    "desc": "URL that can be used to view the YouTube video.\n\nRead-only.",
                    "type": "string"
                },
                {
                    "name": "id",
                    "desc": "YouTube API resource ID.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "Empty",
            "desc": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
            "type": "object"
        },
        {
            "name": "ListInvitationsResponse",
            "desc": "Response when listing invitations.",
            "type": "object",
            "fields": [
                {
                    "name": "nextPageToken",
                    "desc": "Token identifying the next page of results to return. If empty, no further\nresults are available.",
                    "type": "string"
                },
                {
                    "name": "invitations",
                    "desc": "Invitations that match the list request.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Invitation"
                }
            ]
        },
        {
            "name": "ModifyAttachmentsRequest",
            "desc": "Request to modify the attachments of a student submission.",
            "type": "object",
            "fields": [
                {
                    "name": "addAttachments",
                    "desc": "Attachments to add.\nA student submission may not have more than 20 attachments.\n\nForm attachments are not supported.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Attachment"
                }
            ]
        },
        {
            "name": "TimeOfDay",
            "desc": "Represents a time of day. The date and time zone are either not significant\nor are specified elsewhere. An API may choose to allow leap seconds. Related\ntypes are google.type.Date and `google.protobuf.Timestamp`.",
            "type": "object",
            "fields": [
                {
                    "name": "nanos",
                    "desc": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.",
                    "type": "int32"
                },
                {
                    "name": "hours",
                    "desc": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose\nto allow the value \"24:00:00\" for scenarios like business closing time.",
                    "type": "int32"
                },
                {
                    "name": "minutes",
                    "desc": "Minutes of hour of day. Must be from 0 to 59.",
                    "type": "int32"
                },
                {
                    "name": "seconds",
                    "desc": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may\nallow the value 60 if it allows leap-seconds.",
                    "type": "int32"
                }
            ]
        },
        {
            "name": "MultipleChoiceQuestion",
            "desc": "Additional details for multiple-choice questions.",
            "type": "object",
            "fields": [
                {
                    "name": "choices",
                    "desc": "Possible choices.",
                    "collection": "array",
                    "type": "string"
                }
            ]
        },
        {
            "name": "ReclaimStudentSubmissionRequest",
            "desc": "Request to reclaim a student submission.",
            "type": "object"
        },
        {
            "name": "ReturnStudentSubmissionRequest",
            "desc": "Request to return a student submission.",
            "type": "object"
        },
        {
            "name": "Date",
            "desc": "Represents a whole calendar date, e.g. date of birth. The time of day and\ntime zone are either specified elsewhere or are not significant. The date\nis relative to the Proleptic Gregorian Calendar. The day may be 0 to\nrepresent a year and month where the day is not significant, e.g. credit card\nexpiration date. The year may be 0 to represent a month and day independent\nof year, e.g. anniversary date. Related types are google.type.TimeOfDay\nand `google.protobuf.Timestamp`.",
            "type": "object",
            "fields": [
                {
                    "name": "month",
                    "desc": "Month of year. Must be from 1 to 12.",
                    "type": "int32"
                },
                {
                    "name": "year",
                    "desc": "Year of date. Must be from 1 to 9999, or 0 if specifying a date without\na year.",
                    "type": "int32"
                },
                {
                    "name": "day",
                    "desc": "Day of month. Must be from 1 to 31 and valid for the year and month, or 0\nif specifying a year/month where the day is not significant.",
                    "type": "int32"
                }
            ]
        },
        {
            "name": "Assignment",
            "desc": "Additional details for assignments.",
            "type": "object",
            "fields": [
                {
                    "name": "studentWorkFolder",
                    "desc": "Drive folder where attachments from student submissions are placed.\nThis is only populated for course teachers.",
                    "type": "ref",
                    "refType": "DriveFolder"
                }
            ]
        },
        {
            "name": "Name",
            "desc": "Details of the user's name.",
            "type": "object",
            "fields": [
                {
                    "name": "givenName",
                    "desc": "The user's first name.\n\nRead-only.",
                    "type": "string"
                },
                {
                    "name": "familyName",
                    "desc": "The user's last name.\n\nRead-only.",
                    "type": "string"
                },
                {
                    "name": "fullName",
                    "desc": "The user's full name formed by concatenating the first and last name\nvalues.\n\nRead-only.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "ListGuardianInvitationsResponse",
            "desc": "Response when listing guardian invitations.",
            "type": "object",
            "fields": [
                {
                    "name": "nextPageToken",
                    "desc": "Token identifying the next page of results to return. If empty, no further\nresults are available.",
                    "type": "string"
                },
                {
                    "name": "guardianInvitations",
                    "desc": "Guardian invitations that matched the list request.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "GuardianInvitation"
                }
            ]
        },
        {
            "name": "CourseAlias",
            "desc": "Alternative identifier for a course.\n\nAn alias uniquely identifies a course. It must be unique within one of the\nfollowing scopes:\n\n* domain: A domain-scoped alias is visible to all users within the alias\ncreator's domain and can be created only by a domain admin. A domain-scoped\nalias is often used when a course has an identifier external to Classroom.\n\n* project: A project-scoped alias is visible to any request from an\napplication using the Developer Console project ID that created the alias\nand can be created by any project. A project-scoped alias is often used when\nan application has alternative identifiers. A random value can also be used\nto avoid duplicate courses in the event of transmission failures, as retrying\na request will return `ALREADY_EXISTS` if a previous one has succeeded.",
            "type": "object",
            "fields": [
                {
                    "name": "alias",
                    "desc": "Alias string. The format of the string indicates the desired alias scoping.\n\n* `d:\u003cname\u003e` indicates a domain-scoped alias.\n  Example: `d:math_101`\n* `p:\u003cname\u003e` indicates a project-scoped alias.\n  Example: `p:abc123`\n\nThis field has a maximum length of 256 characters.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "ListTeachersResponse",
            "desc": "Response when listing teachers.",
            "type": "object",
            "fields": [
                {
                    "name": "teachers",
                    "desc": "Teachers who match the list request.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Teacher"
                },
                {
                    "name": "nextPageToken",
                    "desc": "Token identifying the next page of results to return. If empty, no further\nresults are available.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "Course",
            "desc": "A Course in Classroom.",
            "type": "object",
            "fields": [
                {
                    "name": "courseMaterialSets",
                    "desc": "Sets of materials that appear on the \"about\" page of this course.\n\nRead-only.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "CourseMaterialSet"
                },
                {
                    "name": "id",
                    "desc": "Identifier for this course assigned by Classroom.\n\nWhen\ncreating a course,\nyou may optionally set this identifier to an\nalias string in the\nrequest to create a corresponding alias. The `id` is still assigned by\nClassroom and cannot be updated after the course is created.\n\nSpecifying this field in a course update mask results in an error.",
                    "type": "string"
                },
                {
                    "name": "section",
                    "desc": "Section of the course.\nFor example, \"Period 2\".\nIf set, this field must be a valid UTF-8 string and no longer than 2800\ncharacters.",
                    "type": "string"
                },
                {
                    "name": "creationTime",
                    "desc": "Creation time of the course.\nSpecifying this field in a course update mask results in an error.\n\nRead-only.",
                    "type": "datetime"
                },
                {
                    "name": "ownerId",
                    "desc": "The identifier of the owner of a course.\n\nWhen specified as a parameter of a\ncreate course request, this\nfield is required.\nThe identifier can be one of the following:\n\n* the numeric identifier for the user\n* the email address of the user\n* the string literal `\"me\"`, indicating the requesting user\n\nThis must be set in a create request. Specifying this field in a course\nupdate mask results in an `INVALID_ARGUMENT` error.",
                    "type": "string"
                },
                {
                    "name": "courseGroupEmail",
                    "desc": "The email address of a Google group containing all members of the course.\nThis group does not accept email and can only be used for permissions.\n\nRead-only.",
                    "type": "string"
                },
                {
                    "name": "courseState",
                    "desc": "State of the course.\nIf unspecified, the default state is `PROVISIONED`.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "COURSE_STATE_UNSPECIFIED",
                            "desc": "No course state. No returned Course message will use this value."
                        },
                        {
                            "name": "ACTIVE",
                            "desc": "The course is active."
                        },
                        {
                            "name": "ARCHIVED",
                            "desc": "The course has been archived. You cannot modify it except to change it\nto a different state."
                        },
                        {
                            "name": "PROVISIONED",
                            "desc": "The course has been created, but not yet activated. It is accessible by\nthe primary teacher and domain administrators, who may modify it or\nchange it to the `ACTIVE` or `DECLINED` states.\nA course may only be changed to `PROVISIONED` if it is in the `DECLINED`\nstate."
                        },
                        {
                            "name": "DECLINED",
                            "desc": "The course has been created, but declined. It is accessible by the\ncourse owner and domain administrators, though it will not be\ndisplayed in the web UI. You cannot modify the course except to change it\nto the `PROVISIONED` state.\nA course may only be changed to `DECLINED` if it is in the `PROVISIONED`\nstate."
                        },
                        {
                            "name": "SUSPENDED",
                            "desc": "The course has been suspended. You cannot modify the course, and only the\nuser identified by the `owner_id` can view the course.\nA course may be placed in this state if it potentially violates the\nTerms of Service."
                        }
                    ]
                },
                {
                    "name": "room",
                    "desc": "Optional room location.\nFor example, \"301\".\nIf set, this field must be a valid UTF-8 string and no longer than 650\ncharacters.",
                    "type": "string"
                },
                {
                    "name": "enrollmentCode",
                    "desc": "Enrollment code to use when joining this course.\nSpecifying this field in a course update mask results in an error.\n\nRead-only.",
                    "type": "string"
                },
                {
                    "name": "updateTime",
                    "desc": "Time of the most recent update to this course.\nSpecifying this field in a course update mask results in an error.\n\nRead-only.",
                    "type": "datetime"
                },
                {
                    "name": "teacherGroupEmail",
                    "desc": "The email address of a Google group containing all teachers of the course.\nThis group does not accept email and can only be used for permissions.\n\nRead-only.",
                    "type": "string"
                },
                {
                    "name": "guardiansEnabled",
                    "desc": "Whether or not guardian notifications are enabled for this course.\n\nRead-only.",
                    "type": "bool"
                },
                {
                    "name": "description",
                    "desc": "Optional description.\nFor example, \"We'll be learning about the structure of living\ncreatures from a combination of textbooks, guest lectures, and lab work.\nExpect to be excited!\"\nIf set, this field must be a valid UTF-8 string and no longer than 30,000\ncharacters.",
                    "type": "string"
                },
                {
                    "name": "alternateLink",
                    "desc": "Absolute link to this course in the Classroom web UI.\n\nRead-only.",
                    "type": "string"
                },
                {
                    "name": "teacherFolder",
                    "desc": "Information about a Drive Folder that is shared with all teachers of the\ncourse.\n\nThis field will only be set for teachers of the course and domain administrators.\n\nRead-only.",
                    "type": "ref",
                    "refType": "DriveFolder"
                },
                {
                    "name": "descriptionHeading",
                    "desc": "Optional heading for the description.\nFor example, \"Welcome to 10th Grade Biology.\"\nIf set, this field must be a valid UTF-8 string and no longer than 3600\ncharacters.",
                    "type": "string"
                },
                {
                    "name": "name",
                    "desc": "Name of the course.\nFor example, \"10th Grade Biology\".\nThe name is required. It must be between 1 and 750 characters and a valid\nUTF-8 string.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "ListCoursesResponse",
            "desc": "Response when listing courses.",
            "type": "object",
            "fields": [
                {
                    "name": "nextPageToken",
                    "desc": "Token identifying the next page of results to return. If empty, no further\nresults are available.",
                    "type": "string"
                },
                {
                    "name": "courses",
                    "desc": "Courses that match the list request.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Course"
                }
            ]
        },
        {
            "name": "Student",
            "desc": "Student in a course.",
            "type": "object",
            "fields": [
                {
                    "name": "courseId",
                    "desc": "Identifier of the course.\n\nRead-only.",
                    "type": "string"
                },
                {
                    "name": "profile",
                    "desc": "Global user information for the student.\n\nRead-only.",
                    "type": "ref",
                    "refType": "UserProfile"
                },
                {
                    "name": "studentWorkFolder",
                    "desc": "Information about a Drive Folder for this student's work in this course.\nOnly visible to the student and domain administrators.\n\nRead-only.",
                    "type": "ref",
                    "refType": "DriveFolder"
                },
                {
                    "name": "userId",
                    "desc": "Identifier of the user.\n\nWhen specified as a parameter of a request, this identifier can be one of\nthe following:\n\n* the numeric identifier for the user\n* the email address of the user\n* the string literal `\"me\"`, indicating the requesting user",
                    "type": "string"
                }
            ]
        },
        {
            "name": "GlobalPermission",
            "desc": "Global user permission description.",
            "type": "object",
            "fields": [
                {
                    "name": "permission",
                    "desc": "Permission value.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "PERMISSION_UNSPECIFIED",
                            "desc": "No permission is specified. This is not returned and is not a\nvalid value."
                        },
                        {
                            "name": "CREATE_COURSE",
                            "desc": "User is permitted to create a course."
                        }
                    ]
                }
            ]
        },
        {
            "name": "DriveFile",
            "desc": "Representation of a Google Drive file.",
            "type": "object",
            "fields": [
                {
                    "name": "alternateLink",
                    "desc": "URL that can be used to access the Drive item.\n\nRead-only.",
                    "type": "string"
                },
                {
                    "name": "id",
                    "desc": "Drive API resource ID.",
                    "type": "string"
                },
                {
                    "name": "thumbnailUrl",
                    "desc": "URL of a thumbnail image of the Drive item.\n\nRead-only.",
                    "type": "string"
                },
                {
                    "name": "title",
                    "desc": "Title of the Drive item.\n\nRead-only.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "ListCourseAliasesResponse",
            "desc": "Response when listing course aliases.",
            "type": "object",
            "fields": [
                {
                    "name": "nextPageToken",
                    "desc": "Token identifying the next page of results to return. If empty, no further\nresults are available.",
                    "type": "string"
                },
                {
                    "name": "aliases",
                    "desc": "The course aliases.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "CourseAlias"
                }
            ]
        },
        {
            "name": "CourseMaterial",
            "desc": "A material attached to a course as part of a material set.",
            "type": "object",
            "fields": [
                {
                    "name": "driveFile",
                    "desc": "Google Drive file attachment.",
                    "type": "ref",
                    "refType": "DriveFile"
                },
                {
                    "name": "youTubeVideo",
                    "desc": "Youtube video attachment.",
                    "type": "ref",
                    "refType": "YouTubeVideo"
                },
                {
                    "name": "link",
                    "desc": "Link atatchment.",
                    "type": "ref",
                    "refType": "Link"
                },
                {
                    "name": "form",
                    "desc": "Google Forms attachment.",
                    "type": "ref",
                    "refType": "Form"
                }
            ]
        },
        {
            "name": "StudentSubmission",
            "desc": "Student submission for course work.\n\nStudentSubmission items are generated when a CourseWork item is created.\n\nStudentSubmissions that have never been accessed (i.e. with `state` = NEW)\nmay not have a creation time or update time.",
            "type": "object",
            "fields": [
                {
                    "name": "associatedWithDeveloper",
                    "desc": "Whether this student submission is associated with the Developer Console\nproject making the request.\n\nSee google.classroom.Work.CreateCourseWork for more\ndetails.\n\nRead-only.",
                    "type": "bool"
                },
                {
                    "name": "alternateLink",
                    "desc": "Absolute link to the submission in the Classroom web UI.\n\nRead-only.",
                    "type": "string"
                },
                {
                    "name": "multipleChoiceSubmission",
                    "desc": "Submission content when course_work_type is MULTIPLE_CHOICE_QUESTION.",
                    "type": "ref",
                    "refType": "MultipleChoiceSubmission"
                },
                {
                    "name": "courseWorkId",
                    "desc": "Identifier for the course work this corresponds to.\n\nRead-only.",
                    "type": "string"
                },
                {
                    "name": "updateTime",
                    "desc": "Last update time of this submission.\nThis may be unset if the student has not accessed this item.\n\nRead-only.",
                    "type": "datetime"
                },
                {
                    "name": "draftGrade",
                    "desc": "Optional pending grade. If unset, no grade was set.\nThis must be a non-negative integer value.\n\nThis is only visible to and modifiable by course teachers.",
                    "type": "float64"
                },
                {
                    "name": "creationTime",
                    "desc": "Creation time of this submission.\nThis may be unset if the student has not accessed this item.\n\nRead-only.",
                    "type": "datetime"
                },
                {
                    "name": "late",
                    "desc": "Whether this submission is late.\n\nRead-only.",
                    "type": "bool"
                },
                {
                    "name": "id",
                    "desc": "Classroom-assigned Identifier for the student submission.\nThis is unique among submissions for the relevant course work.\n\nRead-only.",
                    "type": "string"
                },
                {
                    "name": "courseWorkType",
                    "desc": "Type of course work this submission is for.\n\nRead-only.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "COURSE_WORK_TYPE_UNSPECIFIED",
                            "desc": "No work type specified. This is never returned."
                        },
                        {
                            "name": "ASSIGNMENT",
                            "desc": "An assignment."
                        },
                        {
                            "name": "SHORT_ANSWER_QUESTION",
                            "desc": "A short answer question."
                        },
                        {
                            "name": "MULTIPLE_CHOICE_QUESTION",
                            "desc": "A multiple-choice question."
                        }
                    ]
                },
                {
                    "name": "courseId",
                    "desc": "Identifier of the course.\n\nRead-only.",
                    "type": "string"
                },
                {
                    "name": "assignmentSubmission",
                    "desc": "Submission content when course_work_type is ASSIGNMENT .",
                    "type": "ref",
                    "refType": "AssignmentSubmission"
                },
                {
                    "name": "shortAnswerSubmission",
                    "desc": "Submission content when course_work_type is SHORT_ANSWER_QUESTION.",
                    "type": "ref",
                    "refType": "ShortAnswerSubmission"
                },
                {
                    "name": "assignedGrade",
                    "desc": "Optional grade. If unset, no grade was set.\nThis must be a non-negative integer value.\n\nThis may be modified only by course teachers.",
                    "type": "float64"
                },
                {
                    "name": "userId",
                    "desc": "Identifier for the student that owns this submission.\n\nRead-only.",
                    "type": "string"
                },
                {
                    "name": "state",
                    "desc": "State of this submission.\n\nRead-only.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "SUBMISSION_STATE_UNSPECIFIED",
                            "desc": "No state specified. This should never be returned."
                        },
                        {
                            "name": "NEW",
                            "desc": "The student has never accessed this submission. Attachments are not\nreturned and timestamps is not set."
                        },
                        {
                            "name": "CREATED",
                            "desc": "Has been created."
                        },
                        {
                            "name": "TURNED_IN",
                            "desc": "Has been turned in to the teacher."
                        },
                        {
                            "name": "RETURNED",
                            "desc": "Has been returned to the student."
                        },
                        {
                            "name": "RECLAIMED_BY_STUDENT",
                            "desc": "Student chose to \"unsubmit\" the assignment."
                        }
                    ]
                }
            ]
        },
        {
            "name": "ListGuardiansResponse",
            "desc": "Response when listing guardians.",
            "type": "object",
            "fields": [
                {
                    "name": "guardians",
                    "desc": "Guardians on this page of results that met the criteria specified in\nthe request.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Guardian"
                },
                {
                    "name": "nextPageToken",
                    "desc": "Token identifying the next page of results to return. If empty, no further\nresults are available.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "Attachment",
            "desc": "Attachment added to student assignment work.\n\nWhen creating attachments, setting the `form` field is not supported.",
            "type": "object",
            "fields": [
                {
                    "name": "driveFile",
                    "desc": "Google Drive file attachment.",
                    "type": "ref",
                    "refType": "DriveFile"
                },
                {
                    "name": "youTubeVideo",
                    "desc": "Youtube video attachment.",
                    "type": "ref",
                    "refType": "YouTubeVideo"
                },
                {
                    "name": "link",
                    "desc": "Link attachment.",
                    "type": "ref",
                    "refType": "Link"
                },
                {
                    "name": "form",
                    "desc": "Google Forms attachment.",
                    "type": "ref",
                    "refType": "Form"
                }
            ]
        },
        {
            "name": "MultipleChoiceSubmission",
            "desc": "Student work for a multiple-choice question.",
            "type": "object",
            "fields": [
                {
                    "name": "answer",
                    "desc": "Student's select choice.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "CourseMaterialSet",
            "desc": "A set of materials that appears on the \"About\" page of the course.\nThese materials might include a syllabus, schedule, or other background\ninformation relating to the course as a whole.",
            "type": "object",
            "fields": [
                {
                    "name": "title",
                    "desc": "Title for this set.",
                    "type": "string"
                },
                {
                    "name": "materials",
                    "desc": "Materials attached to this set.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "CourseMaterial"
                }
            ]
        },
        {
            "name": "TurnInStudentSubmissionRequest",
            "desc": "Request to turn in a student submission.",
            "type": "object"
        },
        {
            "name": "ListStudentSubmissionsResponse",
            "desc": "Response when listing student submissions.",
            "type": "object",
            "fields": [
                {
                    "name": "nextPageToken",
                    "desc": "Token identifying the next page of results to return. If empty, no further\nresults are available.",
                    "type": "string"
                },
                {
                    "name": "studentSubmissions",
                    "desc": "Student work that matches the request.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "StudentSubmission"
                }
            ]
        },
        {
            "name": "AssignmentSubmission",
            "desc": "Student work for an assignment.",
            "type": "object",
            "fields": [
                {
                    "name": "attachments",
                    "desc": "Attachments added by the student.\nDrive files that correspond to materials with a share mode of\nSTUDENT_COPY may not exist yet if the student has not accessed the\nassignment in Classroom.\n\nSome attachment metadata is only populated if the requesting user has\npermission to access it. Identifier and alternate_link fields are always\navailable, but others (e.g. title) may not be.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Attachment"
                }
            ]
        },
        {
            "name": "Link",
            "desc": "URL item.",
            "type": "object",
            "fields": [
                {
                    "name": "url",
                    "desc": "URL to link to.\nThis must be a valid UTF-8 string containing between 1 and 2024 characters.",
                    "type": "string"
                },
                {
                    "name": "thumbnailUrl",
                    "desc": "URL of a thumbnail image of the target URL.\n\nRead-only.",
                    "type": "string"
                },
                {
                    "name": "title",
                    "desc": "Title of the target of the URL.\n\nRead-only.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "Form",
            "desc": "Google Forms item.",
            "type": "object",
            "fields": [
                {
                    "name": "thumbnailUrl",
                    "desc": "URL of a thumbnail image of the Form.\n\nRead-only.",
                    "type": "string"
                },
                {
                    "name": "formUrl",
                    "desc": "URL of the form.",
                    "type": "string"
                },
                {
                    "name": "title",
                    "desc": "Title of the Form.\n\nRead-only.",
                    "type": "string"
                },
                {
                    "name": "responseUrl",
                    "desc": "URL of the form responses document.\nOnly set if respsonses have been recorded and only when the\nrequesting user is an editor of the form.\n\nRead-only.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "Guardian",
            "desc": "Association between a student and a guardian of that student. The guardian\nmay receive information about the student's course work.",
            "type": "object",
            "fields": [
                {
                    "name": "guardianId",
                    "desc": "Identifier for the guardian.",
                    "type": "string"
                },
                {
                    "name": "guardianProfile",
                    "desc": "User profile for the guardian.",
                    "type": "ref",
                    "refType": "UserProfile"
                },
                {
                    "name": "invitedEmailAddress",
                    "desc": "The email address to which the initial guardian invitation was sent.\nThis field is only visible to domain administrators.",
                    "type": "string"
                },
                {
                    "name": "studentId",
                    "desc": "Identifier for the student to whom the guardian relationship applies.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "ListCourseWorkResponse",
            "desc": "Response when listing course work.",
            "type": "object",
            "fields": [
                {
                    "name": "courseWork",
                    "desc": "Course work items that match the request.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "CourseWork"
                },
                {
                    "name": "nextPageToken",
                    "desc": "Token identifying the next page of results to return. If empty, no further\nresults are available.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "SharedDriveFile",
            "desc": "Drive file that is used as material for course work.",
            "type": "object",
            "fields": [
                {
                    "name": "driveFile",
                    "desc": "Drive file details.",
                    "type": "ref",
                    "refType": "DriveFile"
                },
                {
                    "name": "shareMode",
                    "desc": "Mechanism by which students access the Drive item.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "UNKNOWN_SHARE_MODE",
                            "desc": "No sharing mode specified. This should never be returned."
                        },
                        {
                            "name": "VIEW",
                            "desc": "Students can view the shared file."
                        },
                        {
                            "name": "EDIT",
                            "desc": "Students can edit the shared file."
                        },
                        {
                            "name": "STUDENT_COPY",
                            "desc": "Students have a personal copy of the shared file."
                        }
                    ]
                }
            ]
        }
    ],
    "resources": [
        {
            "name": "invitations",
            "methods": [
                {
                    "path": "v1/invitations",
                    "httpMethod": "POST",
                    "name": "create",
                    "desc": "Creates an invitation. Only one invitation for a user and course may exist\nat a time. Delete and re-create an invitation to make changes.\n\nThis method returns the following error codes:\n\n* `PERMISSION_DENIED` if the requesting user is not permitted to create\ninvitations for this course or for access errors.\n* `NOT_FOUND` if the course or the user does not exist.\n* `FAILED_PRECONDITION` if the requested user's account is disabled or if\nthe user already has this role or a role with greater permissions.\n* `ALREADY_EXISTS` if an invitation for the specified user and course\nalready exists.",
                    "scopes": [
                        "https://www.googleapis.com/auth/classroom.rosters"
                    ],
                    "request": "Invitation",
                    "response": "Invitation"
                },
                {
                    "path": "v1/invitations/{id}",
                    "httpMethod": "GET",
                    "name": "get",
                    "desc": "Returns an invitation.\n\nThis method returns the following error codes:\n\n* `PERMISSION_DENIED` if the requesting user is not permitted to view the\nrequested invitation or for access errors.\n* `NOT_FOUND` if no invitation exists with the requested ID.",
                    "scopes": [
                        "https://www.googleapis.com/auth/classroom.rosters",
                        "https://www.googleapis.com/auth/classroom.rosters.readonly"
                    ],
                    "pathParams": [
                        {
                            "name": "id",
                            "desc": "Identifier of the invitation to return.",
                            "required": true,
                            "type": "string"
                        }
                    ],
                    "response": "Invitation"
                },
                {
                    "path": "v1/invitations",
                    "httpMethod": "GET",
                    "name": "list",
                    "desc": "Returns a list of invitations that the requesting user is permitted to\nview, restricted to those that match the list request.\n\n*Note:* At least one of `user_id` or `course_id` must be supplied. Both\nfields can be supplied.\n\nThis method returns the following error codes:\n\n* `PERMISSION_DENIED` for access errors.",
                    "scopes": [
                        "https://www.googleapis.com/auth/classroom.rosters",
                        "https://www.googleapis.com/auth/classroom.rosters.readonly"
                    ],
                    "optionalQueryParams": [
                        {
                            "name": "courseId",
                            "desc": "Restricts returned invitations to those for a course with the specified\nidentifier.",
                            "type": "string"
                        },
                        {
                            "name": "pageSize",
                            "desc": "Maximum number of items to return. Zero means no maximum.\n\nThe server may return fewer than the specified number of results.",
                            "type": "int32"
                        },
                        {
                            "name": "userId",
                            "desc": "Restricts returned invitations to those for a specific user. The identifier\ncan be one of the following:\n\n* the numeric identifier for the user\n* the email address of the user\n* the string literal `\"me\"`, indicating the requesting user",
                            "type": "string"
                        },
                        {
                            "name": "pageToken",
                            "desc": "nextPageToken\nvalue returned from a previous\nlist call, indicating\nthat the subsequent page of results should be returned.\n\nThe list request must be\notherwise identical to the one that resulted in this token.",
                            "type": "string"
                        }
                    ],
                    "response": "ListInvitationsResponse"
                },
                {
                    "path": "v1/invitations/{id}",
                    "httpMethod": "DELETE",
                    "name": "delete",
                    "desc": "Deletes an invitation.\n\nThis method returns the following error codes:\n\n* `PERMISSION_DENIED` if the requesting user is not permitted to delete the\nrequested invitation or for access errors.\n* `NOT_FOUND` if no invitation exists with the requested ID.",
                    "scopes": [
                        "https://www.googleapis.com/auth/classroom.rosters"
                    ],
                    "pathParams": [
                        {
                            "name": "id",
                            "desc": "Identifier of the invitation to delete.",
                            "required": true,
                            "type": "string"
                        }
                    ],
                    "response": "Empty"
                },
                {
                    "path": "v1/invitations/{id}:accept",
                    "httpMethod": "POST",
                    "name": "accept",
                    "desc": "Accepts an invitation, removing it and adding the invited user to the\nteachers or students (as appropriate) of the specified course. Only the\ninvited user may accept an invitation.\n\nThis method returns the following error codes:\n\n* `PERMISSION_DENIED` if the requesting user is not permitted to accept the\nrequested invitation or for access errors.\n* `FAILED_PRECONDITION` for the following request errors:\n    * CourseMemberLimitReached\n    * CourseNotModifiable\n    * CourseTeacherLimitReached\n    * UserGroupsMembershipLimitReached\n* `NOT_FOUND` if no invitation exists with the requested ID.",
                    "scopes": [
                        "https://www.googleapis.com/auth/classroom.rosters"
                    ],
                    "pathParams": [
                        {
                            "name": "id",
                            "desc": "Identifier of the invitation to accept.",
                            "required": true,
                            "type": "string"
                        }
                    ],
                    "response": "Empty"
                }
            ]
        },
        {
            "name": "courses",
            "methods": [
                {
                    "path": "v1/courses/{id}",
                    "httpMethod": "GET",
                    "name": "get",
                    "desc": "Returns a course.\n\nThis method returns the following error codes:\n\n* `PERMISSION_DENIED` if the requesting user is not permitted to access the\nrequested course or for access errors.\n* `NOT_FOUND` if no course exists with the requested ID.",
                    "scopes": [
                        "https://www.googleapis.com/auth/classroom.courses",
                        "https://www.googleapis.com/auth/classroom.courses.readonly"
                    ],
                    "pathParams": [
                        {
                            "name": "id",
                            "desc": "Identifier of the course to return.\nThis identifier can be either the Classroom-assigned identifier or an\nalias.",
                            "required": true,
                            "type": "string"
                        }
                    ],
                    "response": "Course"
                },
                {
                    "path": "v1/courses",
                    "httpMethod": "POST",
                    "name": "create",
                    "desc": "Creates a course.\n\nThe user specified in `ownerId` is the owner of the created course\nand added as a teacher.\n\nThis method returns the following error codes:\n\n* `PERMISSION_DENIED` if the requesting user is not permitted to create\ncourses or for access errors.\n* `NOT_FOUND` if the primary teacher is not a valid user.\n* `FAILED_PRECONDITION` if the course owner's account is disabled or for\nthe following request errors:\n    * UserGroupsMembershipLimitReached\n* `ALREADY_EXISTS` if an alias was specified in the `id` and\nalready exists.",
                    "scopes": [
                        "https://www.googleapis.com/auth/classroom.courses"
                    ],
                    "request": "Course",
                    "response": "Course"
                },
                {
                    "path": "v1/courses/{id}",
                    "httpMethod": "PUT",
                    "name": "update",
                    "desc": "Updates a course.\n\nThis method returns the following error codes:\n\n* `PERMISSION_DENIED` if the requesting user is not permitted to modify the\nrequested course or for access errors.\n* `NOT_FOUND` if no course exists with the requested ID.\n* `FAILED_PRECONDITION` for the following request errors:\n    * CourseNotModifiable",
                    "scopes": [
                        "https://www.googleapis.com/auth/classroom.courses"
                    ],
                    "pathParams": [
                        {
                            "name": "id",
                            "desc": "Identifier of the course to update.\nThis identifier can be either the Classroom-assigned identifier or an\nalias.",
                            "required": true,
                            "type": "string"
                        }
                    ],
                    "request": "Course",
                    "response": "Course"
                },
                {
                    "path": "v1/courses/{id}",
                    "httpMethod": "PATCH",
                    "name": "patch",
                    "desc": "Updates one or more fields in a course.\n\nThis method returns the following error codes:\n\n* `PERMISSION_DENIED` if the requesting user is not permitted to modify the\nrequested course or for access errors.\n* `NOT_FOUND` if no course exists with the requested ID.\n* `INVALID_ARGUMENT` if invalid fields are specified in the update mask or\nif no update mask is supplied.\n* `FAILED_PRECONDITION` for the following request errors:\n    * CourseNotModifiable",
                    "scopes": [
                        "https://www.googleapis.com/auth/classroom.courses"
                    ],
                    "pathParams": [
                        {
                            "name": "id",
                            "desc": "Identifier of the course to update.\nThis identifier can be either the Classroom-assigned identifier or an\nalias.",
                            "required": true,
                            "type": "string"
                        }
                    ],
                    "optionalQueryParams": [
                        {
                            "name": "updateMask",
                            "desc": "Mask that identifies which fields on the course to update.\nThis field is required to do an update. The update will fail if invalid\nfields are specified. The following fields are valid:\n\n* `name`\n* `section`\n* `descriptionHeading`\n* `description`\n* `room`\n* `courseState`\n\nWhen set in a query parameter, this field should be specified as\n\n`updateMask=\u003cfield1\u003e,\u003cfield2\u003e,...`",
                            "type": "string"
                        }
                    ],
                    "request": "Course",
                    "response": "Course"
                },
                {
                    "path": "v1/courses/{id}",
                    "httpMethod": "DELETE",
                    "name": "delete",
                    "desc": "Deletes a course.\n\nThis method returns the following error codes:\n\n* `PERMISSION_DENIED` if the requesting user is not permitted to delete the\nrequested course or for access errors.\n* `NOT_FOUND` if no course exists with the requested ID.",
                    "scopes": [
                        "https://www.googleapis.com/auth/classroom.courses"
                    ],
                    "pathParams": [
                        {
                            "name": "id",
                            "desc": "Identifier of the course to delete.\nThis identifier can be either the Classroom-assigned identifier or an\nalias.",
                            "required": true,
                            "type": "string"
                        }
                    ],
                    "response": "Empty"
                },
                {
                    "path": "v1/courses",
                    "httpMethod": "GET",
                    "name": "list",
                    "desc": "Returns a list of courses that the requesting user is permitted to view,\nrestricted to those that match the request.\n\nThis method returns the following error codes:\n\n* `PERMISSION_DENIED` for access errors.\n* `INVALID_ARGUMENT` if the query argument is malformed.\n* `NOT_FOUND` if any users specified in the query arguments do not exist.",
                    "scopes": [
                        "https://www.googleapis.com/auth/classroom.courses",
                        "https://www.googleapis.com/auth/classroom.courses.readonly"
                    ],
                    "optionalQueryParams": [
                        {
                            "name": "pageSize",
                            "desc": "Maximum number of items to return. Zero or unspecified indicates that the\nserver may assign a maximum.\n\nThe server may return fewer than the specified number of results.",
                            "type": "int32"
                        },
                        {
                            "name": "teacherId",
                            "desc": "Restricts returned courses to those having a teacher with the specified\nidentifier. The identifier can be one of the following:\n\n* the numeric identifier for the user\n* the email address of the user\n* the string literal `\"me\"`, indicating the requesting user",
                            "type": "string"
                        },
                        {
                            "name": "studentId",
                            "desc": "Restricts returned courses to those having a student with the specified\nidentifier. The identifier can be one of the following:\n\n* the numeric identifier for the user\n* the email address of the user\n* the string literal `\"me\"`, indicating the requesting user",
                            "type": "string"
                        },
                        {
                            "name": "pageToken",
                            "desc": "nextPageToken\nvalue returned from a previous\nlist call,\nindicating that the subsequent page of results should be returned.\n\nThe list request must be\notherwise identical to the one that resulted in this token.",
                            "type": "string"
                        },
                        {
                            "name": "courseStates",
                            "desc": "Restricts returned courses to those in one of the specified states\nThe default value is ACTIVE, ARCHIVED, PROVISIONED, DECLINED.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "COURSE_STATE_UNSPECIFIED"
                                },
                                {
                                    "name": "ACTIVE"
                                },
                                {
                                    "name": "ARCHIVED"
                                },
                                {
                                    "name": "PROVISIONED"
                                },
                                {
                                    "name": "DECLINED"
                                },
                                {
                                    "name": "SUSPENDED"
                                }
                            ]
                        }
                    ],
                    "response": "ListCoursesResponse"
                }
            ],
            "resources": [
                {
                    "name": "students",
                    "methods": [
                        {
                            "path": "v1/courses/{courseId}/students",
                            "httpMethod": "POST",
                            "name": "create",
                            "desc": "Adds a user as a student of a course.\n\nThis method returns the following error codes:\n\n* `PERMISSION_DENIED` if the requesting user is not permitted to create\nstudents in this course or for access errors.\n* `NOT_FOUND` if the requested course ID does not exist.\n* `FAILED_PRECONDITION` if the requested user's account is disabled,\nfor the following request errors:\n    * CourseMemberLimitReached\n    * CourseNotModifiable\n    * UserGroupsMembershipLimitReached\n* `ALREADY_EXISTS` if the user is already a student or teacher in the\ncourse.",
                            "scopes": [
                                "https://www.googleapis.com/auth/classroom.profile.emails",
                                "https://www.googleapis.com/auth/classroom.profile.photos",
                                "https://www.googleapis.com/auth/classroom.rosters"
                            ],
                            "pathParams": [
                                {
                                    "name": "courseId",
                                    "desc": "Identifier of the course to create the student in.\nThis identifier can be either the Classroom-assigned identifier or an\nalias.",
                                    "required": true,
                                    "type": "string"
                                }
                            ],
                            "optionalQueryParams": [
                                {
                                    "name": "enrollmentCode",
                                    "desc": "Enrollment code of the course to create the student in.\nThis code is required if userId\ncorresponds to the requesting user; it may be omitted if the requesting\nuser has administrative permissions to create students for any user.",
                                    "type": "string"
                                }
                            ],
                            "request": "Student",
                            "response": "Student"
                        },
                        {
                            "path": "v1/courses/{courseId}/students/{userId}",
                            "httpMethod": "GET",
                            "name": "get",
                            "desc": "Returns a student of a course.\n\nThis method returns the following error codes:\n\n* `PERMISSION_DENIED` if the requesting user is not permitted to view\nstudents of this course or for access errors.\n* `NOT_FOUND` if no student of this course has the requested ID or if the\ncourse does not exist.",
                            "scopes": [
                                "https://www.googleapis.com/auth/classroom.profile.emails",
                                "https://www.googleapis.com/auth/classroom.profile.photos",
                                "https://www.googleapis.com/auth/classroom.rosters",
                                "https://www.googleapis.com/auth/classroom.rosters.readonly"
                            ],
                            "pathParams": [
                                {
                                    "name": "courseId",
                                    "desc": "Identifier of the course.\nThis identifier can be either the Classroom-assigned identifier or an\nalias.",
                                    "required": true,
                                    "type": "string"
                                },
                                {
                                    "name": "userId",
                                    "desc": "Identifier of the student to return. The identifier can be one of the\nfollowing:\n\n* the numeric identifier for the user\n* the email address of the user\n* the string literal `\"me\"`, indicating the requesting user",
                                    "required": true,
                                    "type": "string"
                                }
                            ],
                            "response": "Student"
                        },
                        {
                            "path": "v1/courses/{courseId}/students",
                            "httpMethod": "GET",
                            "name": "list",
                            "desc": "Returns a list of students of this course that the requester\nis permitted to view.\n\nThis method returns the following error codes:\n\n* `NOT_FOUND` if the course does not exist.\n* `PERMISSION_DENIED` for access errors.",
                            "scopes": [
                                "https://www.googleapis.com/auth/classroom.profile.emails",
                                "https://www.googleapis.com/auth/classroom.profile.photos",
                                "https://www.googleapis.com/auth/classroom.rosters",
                                "https://www.googleapis.com/auth/classroom.rosters.readonly"
                            ],
                            "pathParams": [
                                {
                                    "name": "courseId",
                                    "desc": "Identifier of the course.\nThis identifier can be either the Classroom-assigned identifier or an\nalias.",
                                    "required": true,
                                    "type": "string"
                                }
                            ],
                            "optionalQueryParams": [
                                {
                                    "name": "pageSize",
                                    "desc": "Maximum number of items to return. Zero means no maximum.\n\nThe server may return fewer than the specified number of results.",
                                    "type": "int32"
                                },
                                {
                                    "name": "pageToken",
                                    "desc": "nextPageToken\nvalue returned from a previous\nlist call, indicating that\nthe subsequent page of results should be returned.\n\nThe list request must be\notherwise identical to the one that resulted in this token.",
                                    "type": "string"
                                }
                            ],
                            "response": "ListStudentsResponse"
                        },
                        {
                            "path": "v1/courses/{courseId}/students/{userId}",
                            "httpMethod": "DELETE",
                            "name": "delete",
                            "desc": "Deletes a student of a course.\n\nThis method returns the following error codes:\n\n* `PERMISSION_DENIED` if the requesting user is not permitted to delete\nstudents of this course or for access errors.\n* `NOT_FOUND` if no student of this course has the requested ID or if the\ncourse does not exist.",
                            "scopes": [
                                "https://www.googleapis.com/auth/classroom.rosters"
                            ],
                            "pathParams": [
                                {
                                    "name": "courseId",
                                    "desc": "Identifier of the course.\nThis identifier can be either the Classroom-assigned identifier or an\nalias.",
                                    "required": true,
                                    "type": "string"
                                },
                                {
                                    "name": "userId",
                                    "desc": "Identifier of the student to delete. The identifier can be one of the\nfollowing:\n\n* the numeric identifier for the user\n* the email address of the user\n* the string literal `\"me\"`, indicating the requesting user",
                                    "required": true,
                                    "type": "string"
                                }
                            ],
                            "response": "Empty"
                        }
                    ]
                },
                {
                    "name": "courseWork",
                    "methods": [
                        {
                            "path": "v1/courses/{courseId}/courseWork/{id}",
                            "httpMethod": "DELETE",
                            "name": "delete",
                            "desc": "Deletes a course work.\n\nThis request must be made by the Developer Console project of the\n[OAuth client ID](https://support.google.com/cloud/answer/6158849) used to\ncreate the corresponding course work item.\n\nThis method returns the following error codes:\n\n* `PERMISSION_DENIED` if the requesting developer project did not create\nthe corresponding course work, if the requesting user is not permitted\nto delete the requested course or for access errors.\n* `FAILED_PRECONDITION` if the requested course work has already been\ndeleted.\n* `NOT_FOUND` if no course exists with the requested ID.",
                            "scopes": [
                                "https://www.googleapis.com/auth/classroom.coursework.students"
                            ],
                            "pathParams": [
                                {
                                    "name": "courseId",
                                    "desc": "Identifier of the course.\nThis identifier can be either the Classroom-assigned identifier or an\nalias.",
                                    "required": true,
                                    "type": "string"
                                },
                                {
                                    "name": "id",
                                    "desc": "Identifier of the course work to delete.\nThis identifier is a Classroom-assigned identifier.",
                                    "required": true,
                                    "type": "string"
                                }
                            ],
                            "response": "Empty"
                        },
                        {
                            "path": "v1/courses/{courseId}/courseWork",
                            "httpMethod": "POST",
                            "name": "create",
                            "desc": "Creates course work.\n\nThe resulting course work (and corresponding student submissions) are\nassociated with the Developer Console project of the\n[OAuth client ID](https://support.google.com/cloud/answer/6158849) used to\nmake the request. Classroom API requests to modify course work and student\nsubmissions must be made with an OAuth client ID from the associated\nDeveloper Console project.\n\nThis method returns the following error codes:\n\n* `PERMISSION_DENIED` if the requesting user is not permitted to access the\nrequested course, create course work in the requested course, share a\nDrive attachment, or for access errors.\n* `INVALID_ARGUMENT` if the request is malformed.\n* `NOT_FOUND` if the requested course does not exist.\n* `FAILED_PRECONDITION` for the following request error:\n    * AttachmentNotVisible",
                            "scopes": [
                                "https://www.googleapis.com/auth/classroom.coursework.students"
                            ],
                            "pathParams": [
                                {
                                    "name": "courseId",
                                    "desc": "Identifier of the course.\nThis identifier can be either the Classroom-assigned identifier or an\nalias.",
                                    "required": true,
                                    "type": "string"
                                }
                            ],
                            "request": "CourseWork",
                            "response": "CourseWork"
                        },
                        {
                            "path": "v1/courses/{courseId}/courseWork/{id}",
                            "httpMethod": "GET",
                            "name": "get",
                            "desc": "Returns course work.\n\nThis method returns the following error codes:\n\n* `PERMISSION_DENIED` if the requesting user is not permitted to access the\nrequested course or course work, or for access errors.\n* `INVALID_ARGUMENT` if the request is malformed.\n* `NOT_FOUND` if the requested course or course work does not exist.",
                            "scopes": [
                                "https://www.googleapis.com/auth/classroom.coursework.me",
                                "https://www.googleapis.com/auth/classroom.coursework.me.readonly",
                                "https://www.googleapis.com/auth/classroom.coursework.students",
                                "https://www.googleapis.com/auth/classroom.coursework.students.readonly"
                            ],
                            "pathParams": [
                                {
                                    "name": "courseId",
                                    "desc": "Identifier of the course.\nThis identifier can be either the Classroom-assigned identifier or an\nalias.",
                                    "required": true,
                                    "type": "string"
                                },
                                {
                                    "name": "id",
                                    "desc": "Identifier of the course work.",
                                    "required": true,
                                    "type": "string"
                                }
                            ],
                            "response": "CourseWork"
                        },
                        {
                            "path": "v1/courses/{courseId}/courseWork",
                            "httpMethod": "GET",
                            "name": "list",
                            "desc": "Returns a list of course work that the requester is permitted to view.\n\nCourse students may only view `PUBLISHED` course work. Course teachers\nand domain administrators may view all course work.\n\nThis method returns the following error codes:\n\n* `PERMISSION_DENIED` if the requesting user is not permitted to access\nthe requested course or for access errors.\n* `INVALID_ARGUMENT` if the request is malformed.\n* `NOT_FOUND` if the requested course does not exist.",
                            "scopes": [
                                "https://www.googleapis.com/auth/classroom.coursework.me",
                                "https://www.googleapis.com/auth/classroom.coursework.me.readonly",
                                "https://www.googleapis.com/auth/classroom.coursework.students",
                                "https://www.googleapis.com/auth/classroom.coursework.students.readonly"
                            ],
                            "pathParams": [
                                {
                                    "name": "courseId",
                                    "desc": "Identifier of the course.\nThis identifier can be either the Classroom-assigned identifier or an\nalias.",
                                    "required": true,
                                    "type": "string"
                                }
                            ],
                            "optionalQueryParams": [
                                {
                                    "name": "pageSize",
                                    "desc": "Maximum number of items to return. Zero or unspecified indicates that the\nserver may assign a maximum.\n\nThe server may return fewer than the specified number of results.",
                                    "type": "int32"
                                },
                                {
                                    "name": "orderBy",
                                    "desc": "Optional sort ordering for results. A comma-separated list of fields with\nan optional sort direction keyword. Supported fields are `updateTime`\nand `dueDate`. Supported direction keywords are `asc` and `desc`.\nIf not specified, `updateTime desc` is the default behavior.\nExamples: `dueDate asc,updateTime desc`, `updateTime,dueDate desc`",
                                    "type": "string"
                                },
                                {
                                    "name": "pageToken",
                                    "desc": "nextPageToken\nvalue returned from a previous\nlist call,\nindicating that the subsequent page of results should be returned.\n\nThe list request\nmust be otherwise identical to the one that resulted in this token.",
                                    "type": "string"
                                },
                                {
                                    "name": "courseWorkStates",
                                    "desc": "Restriction on the work status to return. Only courseWork that matches\nis returned. If unspecified, items with a work status of `PUBLISHED`\nis returned.",
                                    "type": "string",
                                    "enum": [
                                        {
                                            "name": "COURSE_WORK_STATE_UNSPECIFIED"
                                        },
                                        {
                                            "name": "PUBLISHED"
                                        },
                                        {
                                            "name": "DRAFT"
                                        },
                                        {
                                            "name": "DELETED"
                                        }
                                    ]
                                }
                            ],
                            "response": "ListCourseWorkResponse"
                        },
                        {
                            "path": "v1/courses/{courseId}/courseWork/{id}",
                            "httpMethod": "PATCH",
                            "name": "patch",
                            "desc": "Updates one or more fields of a course work.\n\nSee google.classroom.v1.CourseWork for details\nof which fields may be updated and who may change them.\n\nThis request must be made by the Developer Console project of the\n[OAuth client ID](https://support.google.com/cloud/answer/6158849) used to\ncreate the corresponding course work item.\n\nThis method returns the following error codes:\n\n* `PERMISSION_DENIED` if the requesting developer project did not create\nthe corresponding course work, if the user is not permitted to make the\nrequested modification to the student submission, or for\naccess errors.\n* `INVALID_ARGUMENT` if the request is malformed.\n* `FAILED_PRECONDITION` if the requested course work has already been\ndeleted.\n* `NOT_FOUND` if the requested course, course work, or student submission\ndoes not exist.",
                            "scopes": [
                                "https://www.googleapis.com/auth/classroom.coursework.students"
                            ],
                            "pathParams": [
                                {
                                    "name": "courseId",
                                    "desc": "Identifier of the course.\nThis identifier can be either the Classroom-assigned identifier or an\nalias.",
                                    "required": true,
                                    "type": "string"
                                },
                                {
                                    "name": "id",
                                    "desc": "Identifier of the course work.",
                                    "required": true,
                                    "type": "string"
                                }
                            ],
                            "optionalQueryParams": [
                                {
                                    "name": "updateMask",
                                    "desc": "Mask that identifies which fields on the course work to update.\nThis field is required to do an update. The update fails if invalid\nfields are specified. If a field supports empty values, it can be cleared\nby specifying it in the update mask and not in the CourseWork object. If a\nfield that does not support empty values is included in the update mask and\nnot set in the CourseWork object, an `INVALID_ARGUMENT` error will be\nreturned.\n\nThe following fields may be specified by teachers:\n* `title`\n* `description`\n* `state`\n* `due_date`\n* `due_time`\n* `max_points`\n* `submission_modification_mode`",
                                    "type": "string"
                                }
                            ],
                            "request": "CourseWork",
                            "response": "CourseWork"
                        }
                    ],
                    "resources": [
                        {
                            "name": "studentSubmissions",
                            "methods": [
                                {
                                    "path": "v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:reclaim",
                                    "httpMethod": "POST",
                                    "name": "reclaim",
                                    "desc": "Reclaims a student submission on behalf of the student that owns it.\n\nReclaiming a student submission transfers ownership of attached Drive\nfiles to the student and update the submission state.\n\nOnly the student that owns the requested student submission may call this\nmethod, and only for a student submission that has been turned in.\n\nThis request must be made by the Developer Console project of the\n[OAuth client ID](https://support.google.com/cloud/answer/6158849) used to\ncreate the corresponding course work item.\n\nThis method returns the following error codes:\n\n* `PERMISSION_DENIED` if the requesting user is not permitted to access the\nrequested course or course work, unsubmit the requested student submission,\nor for access errors.\n* `FAILED_PRECONDITION` if the student submission has not been turned in.\n* `INVALID_ARGUMENT` if the request is malformed.\n* `NOT_FOUND` if the requested course, course work, or student submission\ndoes not exist.",
                                    "scopes": [
                                        "https://www.googleapis.com/auth/classroom.coursework.me"
                                    ],
                                    "pathParams": [
                                        {
                                            "name": "courseId",
                                            "desc": "Identifier of the course.\nThis identifier can be either the Classroom-assigned identifier or an\nalias.",
                                            "required": true,
                                            "type": "string"
                                        },
                                        {
                                            "name": "courseWorkId",
                                            "desc": "Identifier of the course work.",
                                            "required": true,
                                            "type": "string"
                                        },
                                        {
                                            "name": "id",
                                            "desc": "Identifier of the student submission.",
                                            "required": true,
                                            "type": "string"
                                        }
                                    ],
                                    "request": "ReclaimStudentSubmissionRequest",
                                    "response": "Empty"
                                },
                                {
                                    "path": "v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:turnIn",
                                    "httpMethod": "POST",
                                    "name": "turnIn",
                                    "desc": "Turns in a student submission.\n\nTurning in a student submission transfers ownership of attached Drive\nfiles to the teacher and may also update the submission state.\n\nThis may only be called by the student that owns the specified student\nsubmission.\n\nThis request must be made by the Developer Console project of the\n[OAuth client ID](https://support.google.com/cloud/answer/6158849) used to\ncreate the corresponding course work item.\n\nThis method returns the following error codes:\n\n* `PERMISSION_DENIED` if the requesting user is not permitted to access the\nrequested course or course work, turn in the requested student submission,\nor for access errors.\n* `INVALID_ARGUMENT` if the request is malformed.\n* `NOT_FOUND` if the requested course, course work, or student submission\ndoes not exist.",
                                    "scopes": [
                                        "https://www.googleapis.com/auth/classroom.coursework.me"
                                    ],
                                    "pathParams": [
                                        {
                                            "name": "courseId",
                                            "desc": "Identifier of the course.\nThis identifier can be either the Classroom-assigned identifier or an\nalias.",
                                            "required": true,
                                            "type": "string"
                                        },
                                        {
                                            "name": "courseWorkId",
                                            "desc": "Identifier of the course work.",
                                            "required": true,
                                            "type": "string"
                                        },
                                        {
                                            "name": "id",
                                            "desc": "Identifier of the student submission.",
                                            "required": true,
                                            "type": "string"
                                        }
                                    ],
                                    "request": "TurnInStudentSubmissionRequest",
                                    "response": "Empty"
                                },
                                {
                                    "path": "v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions",
                                    "httpMethod": "GET",
                                    "name": "list",
                                    "desc": "Returns a list of student submissions that the requester is permitted to\nview, factoring in the OAuth scopes of the request.\n`-` may be specified as the `course_work_id` to include student\nsubmissions for multiple course work items.\n\nCourse students may only view their own work. Course teachers\nand domain administrators may view all student submissions.\n\nThis method returns the following error codes:\n\n* `PERMISSION_DENIED` if the requesting user is not permitted to access the\nrequested course or course work, or for access errors.\n* `INVALID_ARGUMENT` if the request is malformed.\n* `NOT_FOUND` if the requested course does not exist.",
                                    "scopes": [
                                        "https://www.googleapis.com/auth/classroom.coursework.me",
                                        "https://www.googleapis.com/auth/classroom.coursework.me.readonly",
                                        "https://www.googleapis.com/auth/classroom.coursework.students",
                                        "https://www.googleapis.com/auth/classroom.coursework.students.readonly",
                                        "https://www.googleapis.com/auth/classroom.student-submissions.me.readonly",
                                        "https://www.googleapis.com/auth/classroom.student-submissions.students.readonly"
                                    ],
                                    "pathParams": [
                                        {
                                            "name": "courseId",
                                            "desc": "Identifier of the course.\nThis identifier can be either the Classroom-assigned identifier or an\nalias.",
                                            "required": true,
                                            "type": "string"
                                        },
                                        {
                                            "name": "courseWorkId",
                                            "desc": "Identifer of the student work to request.\nThis may be set to the string literal `\"-\"` to request student work for\nall course work in the specified course.",
                                            "required": true,
                                            "type": "string"
                                        }
                                    ],
                                    "optionalQueryParams": [
                                        {
                                            "name": "pageSize",
                                            "desc": "Maximum number of items to return. Zero or unspecified indicates that the\nserver may assign a maximum.\n\nThe server may return fewer than the specified number of results.",
                                            "type": "int32"
                                        },
                                        {
                                            "name": "late",
                                            "desc": "Requested lateness value. If specified, returned student submissions are\nrestricted by the requested value.\nIf unspecified, submissions are returned regardless of `late` value.",
                                            "type": "string",
                                            "enum": [
                                                {
                                                    "name": "LATE_VALUES_UNSPECIFIED"
                                                },
                                                {
                                                    "name": "LATE_ONLY"
                                                },
                                                {
                                                    "name": "NOT_LATE_ONLY"
                                                }
                                            ]
                                        },
                                        {
                                            "name": "pageToken",
                                            "desc": "nextPageToken\nvalue returned from a previous\nlist call,\nindicating that the subsequent page of results should be returned.\n\nThe list request\nmust be otherwise identical to the one that resulted in this token.",
                                            "type": "string"
                                        },
                                        {
                                            "name": "states",
                                            "desc": "Requested submission states. If specified, returned student submissions\nmatch one of the specified submission states.",
                                            "type": "string",
                                            "enum": [
                                                {
                                                    "name": "SUBMISSION_STATE_UNSPECIFIED"
                                                },
                                                {
                                                    "name": "NEW"
                                                },
                                                {
                                                    "name": "CREATED"
                                                },
                                                {
                                                    "name": "TURNED_IN"
                                                },
                                                {
                                                    "name": "RETURNED"
                                                },
                                                {
                                                    "name": "RECLAIMED_BY_STUDENT"
                                                }
                                            ]
                                        },
                                        {
                                            "name": "userId",
                                            "desc": "Optional argument to restrict returned student work to those owned by the\nstudent with the specified identifier. The identifier can be one of the\nfollowing:\n\n* the numeric identifier for the user\n* the email address of the user\n* the string literal `\"me\"`, indicating the requesting user",
                                            "type": "string"
                                        }
                                    ],
                                    "response": "ListStudentSubmissionsResponse"
                                },
                                {
                                    "path": "v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}",
                                    "httpMethod": "GET",
                                    "name": "get",
                                    "desc": "Returns a student submission.\n\n* `PERMISSION_DENIED` if the requesting user is not permitted to access the\nrequested course, course work, or student submission or for\naccess errors.\n* `INVALID_ARGUMENT` if the request is malformed.\n* `NOT_FOUND` if the requested course, course work, or student submission\ndoes not exist.",
                                    "scopes": [
                                        "https://www.googleapis.com/auth/classroom.coursework.me",
                                        "https://www.googleapis.com/auth/classroom.coursework.me.readonly",
                                        "https://www.googleapis.com/auth/classroom.coursework.students",
                                        "https://www.googleapis.com/auth/classroom.coursework.students.readonly",
                                        "https://www.googleapis.com/auth/classroom.student-submissions.me.readonly",
                                        "https://www.googleapis.com/auth/classroom.student-submissions.students.readonly"
                                    ],
                                    "pathParams": [
                                        {
                                            "name": "courseId",
                                            "desc": "Identifier of the course.\nThis identifier can be either the Classroom-assigned identifier or an\nalias.",
                                            "required": true,
                                            "type": "string"
                                        },
                                        {
                                            "name": "courseWorkId",
                                            "desc": "Identifier of the course work.",
                                            "required": true,
                                            "type": "string"
                                        },
                                        {
                                            "name": "id",
                                            "desc": "Identifier of the student submission.",
                                            "required": true,
                                            "type": "string"
                                        }
                                    ],
                                    "response": "StudentSubmission"
                                },
                                {
                                    "path": "v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:return",
                                    "httpMethod": "POST",
                                    "name": "return",
                                    "desc": "Returns a student submission.\n\nReturning a student submission transfers ownership of attached Drive\nfiles to the student and may also update the submission state.\nUnlike the Classroom application, returning a student submission does not\nset assignedGrade to the draftGrade value.\n\nOnly a teacher of the course that contains the requested student submission\nmay call this method.\n\nThis request must be made by the Developer Console project of the\n[OAuth client ID](https://support.google.com/cloud/answer/6158849) used to\ncreate the corresponding course work item.\n\nThis method returns the following error codes:\n\n* `PERMISSION_DENIED` if the requesting user is not permitted to access the\nrequested course or course work, return the requested student submission,\nor for access errors.\n* `INVALID_ARGUMENT` if the request is malformed.\n* `NOT_FOUND` if the requested course, course work, or student submission\ndoes not exist.",
                                    "scopes": [
                                        "https://www.googleapis.com/auth/classroom.coursework.students"
                                    ],
                                    "pathParams": [
                                        {
                                            "name": "courseId",
                                            "desc": "Identifier of the course.\nThis identifier can be either the Classroom-assigned identifier or an\nalias.",
                                            "required": true,
                                            "type": "string"
                                        },
                                        {
                                            "name": "courseWorkId",
                                            "desc": "Identifier of the course work.",
                                            "required": true,
                                            "type": "string"
                                        },
                                        {
                                            "name": "id",
                                            "desc": "Identifier of the student submission.",
                                            "required": true,
                                            "type": "string"
                                        }
                                    ],
                                    "request": "ReturnStudentSubmissionRequest",
                                    "response": "Empty"
                                },
                                {
                                    "path": "v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}",
                                    "httpMethod": "PATCH",
                                    "name": "patch",
                                    "desc": "Updates one or more fields of a student submission.\n\nSee google.classroom.v1.StudentSubmission for details\nof which fields may be updated and who may change them.\n\nThis request must be made by the Developer Console project of the\n[OAuth client ID](https://support.google.com/cloud/answer/6158849) used to\ncreate the corresponding course work item.\n\nThis method returns the following error codes:\n\n* `PERMISSION_DENIED` if the requesting developer project did not create\nthe corresponding course work, if the user is not permitted to make the\nrequested modification to the student submission, or for\naccess errors.\n* `INVALID_ARGUMENT` if the request is malformed.\n* `NOT_FOUND` if the requested course, course work, or student submission\ndoes not exist.",
                                    "scopes": [
                                        "https://www.googleapis.com/auth/classroom.coursework.me",
                                        "https://www.googleapis.com/auth/classroom.coursework.students"
                                    ],
                                    "pathParams": [
                                        {
                                            "name": "courseId",
                                            "desc": "Identifier of the course.\nThis identifier can be either the Classroom-assigned identifier or an\nalias.",
                                            "required": true,
                                            "type": "string"
                                        },
                                        {
                                            "name": "courseWorkId",
                                            "desc": "Identifier of the course work.",
                                            "required": true,
                                            "type": "string"
                                        },
                                        {
                                            "name": "id",
                                            "desc": "Identifier of the student submission.",
                                            "required": true,
                                            "type": "string"
                                        }
                                    ],
                                    "optionalQueryParams": [
                                        {
                                            "name": "updateMask",
                                            "desc": "Mask that identifies which fields on the student submission to update.\nThis field is required to do an update. The update fails if invalid\nfields are specified.\n\nThe following fields may be specified by teachers:\n* `draft_grade`\n* `assigned_grade`",
                                            "type": "string"
                                        }
                                    ],
                                    "request": "StudentSubmission",
                                    "response": "StudentSubmission"
                                },
                                {
                                    "path": "v1/courses/{courseId}/courseWork/{courseWorkId}/studentSubmissions/{id}:modifyAttachments",
                                    "httpMethod": "POST",
                                    "name": "modifyAttachments",
                                    "desc": "Modifies attachments of student submission.\n\nAttachments may only be added to student submissions belonging to course\nwork objects with a `workType` of `ASSIGNMENT`.\n\nThis request must be made by the Developer Console project of the\n[OAuth client ID](https://support.google.com/cloud/answer/6158849) used to\ncreate the corresponding course work item.\n\nThis method returns the following error codes:\n\n* `PERMISSION_DENIED` if the requesting user is not permitted to access the\nrequested course or course work, if the user is not permitted to modify\nattachments on the requested student submission, or for\naccess errors.\n* `INVALID_ARGUMENT` if the request is malformed.\n* `NOT_FOUND` if the requested course, course work, or student submission\ndoes not exist.",
                                    "scopes": [
                                        "https://www.googleapis.com/auth/classroom.coursework.me",
                                        "https://www.googleapis.com/auth/classroom.coursework.students"
                                    ],
                                    "pathParams": [
                                        {
                                            "name": "courseId",
                                            "desc": "Identifier of the course.\nThis identifier can be either the Classroom-assigned identifier or an\nalias.",
                                            "required": true,
                                            "type": "string"
                                        },
                                        {
                                            "name": "courseWorkId",
                                            "desc": "Identifier of the course work.",
                                            "required": true,
                                            "type": "string"
                                        },
                                        {
                                            "name": "id",
                                            "desc": "Identifier of the student submission.",
                                            "required": true,
                                            "type": "string"
                                        }
                                    ],
                                    "request": "ModifyAttachmentsRequest",
                                    "response": "StudentSubmission"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "teachers",
                    "methods": [
                        {
                            "path": "v1/courses/{courseId}/teachers",
                            "httpMethod": "POST",
                            "name": "create",
                            "desc": "Creates a teacher of a course.\n\nThis method returns the following error codes:\n\n* `PERMISSION_DENIED` if the requesting user is not  permitted to create\nteachers in this course or for access errors.\n* `NOT_FOUND` if the requested course ID does not exist.\n* `FAILED_PRECONDITION` if the requested user's account is disabled,\nfor the following request errors:\n    * CourseMemberLimitReached\n    * CourseNotModifiable\n    * CourseTeacherLimitReached\n    * UserGroupsMembershipLimitReached\n* `ALREADY_EXISTS` if the user is already a teacher or student in the\ncourse.",
                            "scopes": [
                                "https://www.googleapis.com/auth/classroom.profile.emails",
                                "https://www.googleapis.com/auth/classroom.profile.photos",
                                "https://www.googleapis.com/auth/classroom.rosters"
                            ],
                            "pathParams": [
                                {
                                    "name": "courseId",
                                    "desc": "Identifier of the course.\nThis identifier can be either the Classroom-assigned identifier or an\nalias.",
                                    "required": true,
                                    "type": "string"
                                }
                            ],
                            "request": "Teacher",
                            "response": "Teacher"
                        },
                        {
                            "path": "v1/courses/{courseId}/teachers/{userId}",
                            "httpMethod": "GET",
                            "name": "get",
                            "desc": "Returns a teacher of a course.\n\nThis method returns the following error codes:\n\n* `PERMISSION_DENIED` if the requesting user is not permitted to view\nteachers of this course or for access errors.\n* `NOT_FOUND` if no teacher of this course has the requested ID or if the\ncourse does not exist.",
                            "scopes": [
                                "https://www.googleapis.com/auth/classroom.profile.emails",
                                "https://www.googleapis.com/auth/classroom.profile.photos",
                                "https://www.googleapis.com/auth/classroom.rosters",
                                "https://www.googleapis.com/auth/classroom.rosters.readonly"
                            ],
                            "pathParams": [
                                {
                                    "name": "courseId",
                                    "desc": "Identifier of the course.\nThis identifier can be either the Classroom-assigned identifier or an\nalias.",
                                    "required": true,
                                    "type": "string"
                                },
                                {
                                    "name": "userId",
                                    "desc": "Identifier of the teacher to return. The identifier can be one of the\nfollowing:\n\n* the numeric identifier for the user\n* the email address of the user\n* the string literal `\"me\"`, indicating the requesting user",
                                    "required": true,
                                    "type": "string"
                                }
                            ],
                            "response": "Teacher"
                        },
                        {
                            "path": "v1/courses/{courseId}/teachers",
                            "httpMethod": "GET",
                            "name": "list",
                            "desc": "Returns a list of teachers of this course that the requester\nis permitted to view.\n\nThis method returns the following error codes:\n\n* `NOT_FOUND` if the course does not exist.\n* `PERMISSION_DENIED` for access errors.",
                            "scopes": [
                                "https://www.googleapis.com/auth/classroom.profile.emails",
                                "https://www.googleapis.com/auth/classroom.profile.photos",
                                "https://www.googleapis.com/auth/classroom.rosters",
                                "https://www.googleapis.com/auth/classroom.rosters.readonly"
                            ],
                            "pathParams": [
                                {
                                    "name": "courseId",
                                    "desc": "Identifier of the course.\nThis identifier can be either the Classroom-assigned identifier or an\nalias.",
                                    "required": true,
                                    "type": "string"
                                }
                            ],
                            "optionalQueryParams": [
                                {
                                    "name": "pageSize",
                                    "desc": "Maximum number of items to return. Zero means no maximum.\n\nThe server may return fewer than the specified number of results.",
                                    "type": "int32"
                                },
                                {
                                    "name": "pageToken",
                                    "desc": "nextPageToken\nvalue returned from a previous\nlist call, indicating that\nthe subsequent page of results should be returned.\n\nThe list request must be\notherwise identical to the one that resulted in this token.",
                                    "type": "string"
                                }
                            ],
                            "response": "ListTeachersResponse"
                        },
                        {
                            "path": "v1/courses/{courseId}/teachers/{userId}",
                            "httpMethod": "DELETE",
                            "name": "delete",
                            "desc": "Deletes a teacher of a course.\n\nThis method returns the following error codes:\n\n* `PERMISSION_DENIED` if the requesting user is not permitted to delete\nteachers of this course or for access errors.\n* `NOT_FOUND` if no teacher of this course has the requested ID or if the\ncourse does not exist.\n* `FAILED_PRECONDITION` if the requested ID belongs to the primary teacher\nof this course.",
                            "scopes": [
                                "https://www.googleapis.com/auth/classroom.rosters"
                            ],
                            "pathParams": [
                                {
                                    "name": "courseId",
                                    "desc": "Identifier of the course.\nThis identifier can be either the Classroom-assigned identifier or an\nalias.",
                                    "required": true,
                                    "type": "string"
                                },
                                {
                                    "name": "userId",
                                    "desc": "Identifier of the teacher to delete. The identifier can be one of the\nfollowing:\n\n* the numeric identifier for the user\n* the email address of the user\n* the string literal `\"me\"`, indicating the requesting user",
                                    "required": true,
                                    "type": "string"
                                }
                            ],
                            "response": "Empty"
                        }
                    ]
                },
                {
                    "name": "aliases",
                    "methods": [
                        {
                            "path": "v1/courses/{courseId}/aliases",
                            "httpMethod": "POST",
                            "name": "create",
                            "desc": "Creates an alias for a course.\n\nThis method returns the following error codes:\n\n* `PERMISSION_DENIED` if the requesting user is not permitted to create the\nalias or for access errors.\n* `NOT_FOUND` if the course does not exist.\n* `ALREADY_EXISTS` if the alias already exists.\n* `FAILED_PRECONDITION` if the alias requested does not make sense for the\n  requesting user or course (for example, if a user not in a domain\n  attempts to access a domain-scoped alias).",
                            "scopes": [
                                "https://www.googleapis.com/auth/classroom.courses"
                            ],
                            "pathParams": [
                                {
                                    "name": "courseId",
                                    "desc": "Identifier of the course to alias.\nThis identifier can be either the Classroom-assigned identifier or an\nalias.",
                                    "required": true,
                                    "type": "string"
                                }
                            ],
                            "request": "CourseAlias",
                            "response": "CourseAlias"
                        },
                        {
                            "path": "v1/courses/{courseId}/aliases",
                            "httpMethod": "GET",
                            "name": "list",
                            "desc": "Returns a list of aliases for a course.\n\nThis method returns the following error codes:\n\n* `PERMISSION_DENIED` if the requesting user is not permitted to access the\ncourse or for access errors.\n* `NOT_FOUND` if the course does not exist.",
                            "scopes": [
                                "https://www.googleapis.com/auth/classroom.courses",
                                "https://www.googleapis.com/auth/classroom.courses.readonly"
                            ],
                            "pathParams": [
                                {
                                    "name": "courseId",
                                    "desc": "The identifier of the course.\nThis identifier can be either the Classroom-assigned identifier or an\nalias.",
                                    "required": true,
                                    "type": "string"
                                }
                            ],
                            "optionalQueryParams": [
                                {
                                    "name": "pageSize",
                                    "desc": "Maximum number of items to return. Zero or unspecified indicates that the\nserver may assign a maximum.\n\nThe server may return fewer than the specified number of results.",
                                    "type": "int32"
                                },
                                {
                                    "name": "pageToken",
                                    "desc": "nextPageToken\nvalue returned from a previous\nlist call,\nindicating that the subsequent page of results should be returned.\n\nThe list request\nmust be otherwise identical to the one that resulted in this token.",
                                    "type": "string"
                                }
                            ],
                            "response": "ListCourseAliasesResponse"
                        },
                        {
                            "path": "v1/courses/{courseId}/aliases/{alias}",
                            "httpMethod": "DELETE",
                            "name": "delete",
                            "desc": "Deletes an alias of a course.\n\nThis method returns the following error codes:\n\n* `PERMISSION_DENIED` if the requesting user is not permitted to remove the\nalias or for access errors.\n* `NOT_FOUND` if the alias does not exist.\n* `FAILED_PRECONDITION` if the alias requested does not make sense for the\n  requesting user or course (for example, if a user not in a domain\n  attempts to delete a domain-scoped alias).",
                            "scopes": [
                                "https://www.googleapis.com/auth/classroom.courses"
                            ],
                            "pathParams": [
                                {
                                    "name": "courseId",
                                    "desc": "Identifier of the course whose alias should be deleted.\nThis identifier can be either the Classroom-assigned identifier or an\nalias.",
                                    "required": true,
                                    "type": "string"
                                },
                                {
                                    "name": "alias",
                                    "desc": "Alias to delete.\nThis may not be the Classroom-assigned identifier.",
                                    "required": true,
                                    "type": "string"
                                }
                            ],
                            "response": "Empty"
                        }
                    ]
                }
            ]
        },
        {
            "name": "userProfiles",
            "methods": [
                {
                    "path": "v1/userProfiles/{userId}",
                    "httpMethod": "GET",
                    "name": "get",
                    "desc": "Returns a user profile.\n\nThis method returns the following error codes:\n\n* `PERMISSION_DENIED` if the requesting user is not permitted to access\nthis user profile, if no profile exists with the requested ID, or for\naccess errors.",
                    "scopes": [
                        "https://www.googleapis.com/auth/classroom.profile.emails",
                        "https://www.googleapis.com/auth/classroom.profile.photos",
                        "https://www.googleapis.com/auth/classroom.rosters",
                        "https://www.googleapis.com/auth/classroom.rosters.readonly"
                    ],
                    "pathParams": [
                        {
                            "name": "userId",
                            "desc": "Identifier of the profile to return. The identifier can be one of the\nfollowing:\n\n* the numeric identifier for the user\n* the email address of the user\n* the string literal `\"me\"`, indicating the requesting user",
                            "required": true,
                            "type": "string"
                        }
                    ],
                    "response": "UserProfile"
                }
            ],
            "resources": [
                {
                    "name": "guardians",
                    "methods": [
                        {
                            "path": "v1/userProfiles/{studentId}/guardians",
                            "httpMethod": "GET",
                            "name": "list",
                            "desc": "Returns a list of guardians that the requesting user is permitted to\nview, restricted to those that match the request.\n\nTo list guardians for any student that the requesting user may view\nguardians for, use the literal character `-` for the student ID.\n\nThis method returns the following error codes:\n\n* `PERMISSION_DENIED` if a `student_id` is specified, and the requesting\n  user is not permitted to view guardian information for that student, if\n  `\"-\"` is specified as the `student_id` and the user is not a domain\n  administrator, if guardians are not enabled for the domain in question,\n  if the `invited_email_address` filter is set by a user who is not a\n  domain administrator, or for other access errors.\n* `INVALID_ARGUMENT` if a `student_id` is specified, but its format cannot\n  be recognized (it is not an email address, nor a `student_id` from the\n  API, nor the literal string `me`). May also be returned if an invalid\n  `page_token` is provided.\n* `NOT_FOUND` if a `student_id` is specified, and its format can be\n  recognized, but Classroom has no record of that student.",
                            "pathParams": [
                                {
                                    "name": "studentId",
                                    "desc": "Filter results by the student who the guardian is linked to.\nThe identifier can be one of the following:\n\n* the numeric identifier for the user\n* the email address of the user\n* the string literal `\"me\"`, indicating the requesting user\n* the string literal `\"-\"`, indicating that results should be returned for\n  all students that the requesting user has access to view.",
                                    "required": true,
                                    "type": "string"
                                }
                            ],
                            "optionalQueryParams": [
                                {
                                    "name": "pageSize",
                                    "desc": "Maximum number of items to return. Zero or unspecified indicates that the\nserver may assign a maximum.\n\nThe server may return fewer than the specified number of results.",
                                    "type": "int32"
                                },
                                {
                                    "name": "invitedEmailAddress",
                                    "desc": "Filter results by the email address that the original invitation was sent\nto, resulting in this guardian link.\nThis filter can only be used by domain administrators.",
                                    "type": "string"
                                },
                                {
                                    "name": "pageToken",
                                    "desc": "nextPageToken\nvalue returned from a previous\nlist call,\nindicating that the subsequent page of results should be returned.\n\nThe list request\nmust be otherwise identical to the one that resulted in this token.",
                                    "type": "string"
                                }
                            ],
                            "response": "ListGuardiansResponse"
                        },
                        {
                            "path": "v1/userProfiles/{studentId}/guardians/{guardianId}",
                            "httpMethod": "DELETE",
                            "name": "delete",
                            "desc": "Deletes a guardian.\n\nThe guardian will no longer receive guardian notifications and the guardian\nwill no longer be accessible via the API.\n\nThis method returns the following error codes:\n\n* `PERMISSION_DENIED` if no user that matches the provided `student_id`\n  is visible to the requesting user, if the requesting user is not\n  permitted to manage guardians for the student identified by the\n  `student_id`, if guardians are not enabled for the domain in question,\n  or for other access errors.\n* `INVALID_ARGUMENT` if a `student_id` is specified, but its format cannot\n  be recognized (it is not an email address, nor a `student_id` from the\n  API).\n* `NOT_FOUND` if the requesting user is permitted to modify guardians for\n  the requested `student_id`, but no `Guardian` record exists for that\n  student with the provided `guardian_id`.",
                            "pathParams": [
                                {
                                    "name": "studentId",
                                    "desc": "The student whose guardian is to be deleted. One of the following:\n\n* the numeric identifier for the user\n* the email address of the user\n* the string literal `\"me\"`, indicating the requesting user",
                                    "required": true,
                                    "type": "string"
                                },
                                {
                                    "name": "guardianId",
                                    "desc": "The `id` field from a `Guardian`.",
                                    "required": true,
                                    "type": "string"
                                }
                            ],
                            "response": "Empty"
                        },
                        {
                            "path": "v1/userProfiles/{studentId}/guardians/{guardianId}",
                            "httpMethod": "GET",
                            "name": "get",
                            "desc": "Returns a specific guardian.\n\nThis method returns the following error codes:\n\n* `PERMISSION_DENIED` if no user that matches the provided `student_id`\n  is visible to the requesting user, if the requesting user is not\n  permitted to view guardian information for the student identified by the\n  `student_id`, if guardians are not enabled for the domain in question,\n  or for other access errors.\n* `INVALID_ARGUMENT` if a `student_id` is specified, but its format cannot\n  be recognized (it is not an email address, nor a `student_id` from the\n  API, nor the literal string `me`).\n* `NOT_FOUND` if the requesting user is permitted to view guardians for\n  the requested `student_id`, but no `Guardian` record exists for that\n  student that matches the provided `guardian_id`.",
                            "pathParams": [
                                {
                                    "name": "studentId",
                                    "desc": "The student whose guardian is being requested. One of the following:\n\n* the numeric identifier for the user\n* the email address of the user\n* the string literal `\"me\"`, indicating the requesting user",
                                    "required": true,
                                    "type": "string"
                                },
                                {
                                    "name": "guardianId",
                                    "desc": "The `id` field from a `Guardian`.",
                                    "required": true,
                                    "type": "string"
                                }
                            ],
                            "response": "Guardian"
                        }
                    ]
                },
                {
                    "name": "guardianInvitations",
                    "methods": [
                        {
                            "path": "v1/userProfiles/{studentId}/guardianInvitations/{invitationId}",
                            "httpMethod": "GET",
                            "name": "get",
                            "desc": "Returns a specific guardian invitation.\n\nThis method returns the following error codes:\n\n* `PERMISSION_DENIED` if the requesting user is not permitted to view\n  guardian invitations for the student identified by the `student_id`, if\n  guardians are not enabled for the domain in question, or for other\n  access errors.\n* `INVALID_ARGUMENT` if a `student_id` is specified, but its format cannot\n  be recognized (it is not an email address, nor a `student_id` from the\n  API, nor the literal string `me`).\n* `NOT_FOUND` if Classroom cannot find any record of the given student or\n  `invitation_id`. May also be returned if the student exists, but the\n  requesting user does not have access to see that student.",
                            "pathParams": [
                                {
                                    "name": "studentId",
                                    "desc": "The ID of the student whose guardian invitation is being requested.",
                                    "required": true,
                                    "type": "string"
                                },
                                {
                                    "name": "invitationId",
                                    "desc": "The `id` field of the `GuardianInvitation` being requested.",
                                    "required": true,
                                    "type": "string"
                                }
                            ],
                            "response": "GuardianInvitation"
                        },
                        {
                            "path": "v1/userProfiles/{studentId}/guardianInvitations",
                            "httpMethod": "POST",
                            "name": "create",
                            "desc": "Creates a guardian invitation, and sends an email to the guardian asking\nthem to confirm that they are the student's guardian.\n\nOnce the guardian accepts the invitation, their `state` will change to\n`COMPLETED` and they will start receiving guardian notifications. A\n`Guardian` resource will also be created to represent the active guardian.\n\nThe request object must have the `student_id` and\n`invited_email_address` fields set. Failing to set these fields, or\nsetting any other fields in the request, will result in an error.\n\nThis method returns the following error codes:\n\n* `PERMISSION_DENIED` if the current user does not have permission to\n  manage guardians, if the guardian in question has already rejected\n  too many requests for that student, if guardians are not enabled for the\n  domain in question, or for other access errors.\n* `RESOURCE_EXHAUSTED` if the student or guardian has exceeded the guardian\n  link limit.\n* `INVALID_ARGUMENT` if the guardian email address is not valid (for\n  example, if it is too long), or if the format of the student ID provided\n  cannot be recognized (it is not an email address, nor a `user_id` from\n  this API). This error will also be returned if read-only fields are set,\n  or if the `state` field is set to to a value other than `PENDING`.\n* `NOT_FOUND` if the student ID provided is a valid student ID, but\n  Classroom has no record of that student.\n* `ALREADY_EXISTS` if there is already a pending guardian invitation for\n  the student and `invited_email_address` provided, or if the provided\n  `invited_email_address` matches the Google account of an existing\n  `Guardian` for this user.",
                            "pathParams": [
                                {
                                    "name": "studentId",
                                    "desc": "ID of the student (in standard format)",
                                    "required": true,
                                    "type": "string"
                                }
                            ],
                            "request": "GuardianInvitation",
                            "response": "GuardianInvitation"
                        },
                        {
                            "path": "v1/userProfiles/{studentId}/guardianInvitations",
                            "httpMethod": "GET",
                            "name": "list",
                            "desc": "Returns a list of guardian invitations that the requesting user is\npermitted to view, filtered by the parameters provided.\n\nThis method returns the following error codes:\n\n* `PERMISSION_DENIED` if a `student_id` is specified, and the requesting\n  user is not permitted to view guardian invitations for that student, if\n  `\"-\"` is specified as the `student_id` and the user is not a domain\n  administrator, if guardians are not enabled for the domain in question,\n  or for other access errors.\n* `INVALID_ARGUMENT` if a `student_id` is specified, but its format cannot\n  be recognized (it is not an email address, nor a `student_id` from the\n  API, nor the literal string `me`). May also be returned if an invalid\n  `page_token` or `state` is provided.\n* `NOT_FOUND` if a `student_id` is specified, and its format can be\n  recognized, but Classroom has no record of that student.",
                            "pathParams": [
                                {
                                    "name": "studentId",
                                    "desc": "The ID of the student whose guardian invitations are to be returned.\nThe identifier can be one of the following:\n\n* the numeric identifier for the user\n* the email address of the user\n* the string literal `\"me\"`, indicating the requesting user\n* the string literal `\"-\"`, indicating that results should be returned for\n  all students that the requesting user is permitted to view guardian\n  invitations.",
                                    "required": true,
                                    "type": "string"
                                }
                            ],
                            "optionalQueryParams": [
                                {
                                    "name": "pageSize",
                                    "desc": "Maximum number of items to return. Zero or unspecified indicates that the\nserver may assign a maximum.\n\nThe server may return fewer than the specified number of results.",
                                    "type": "int32"
                                },
                                {
                                    "name": "invitedEmailAddress",
                                    "desc": "If specified, only results with the specified `invited_email_address`\nwill be returned.",
                                    "type": "string"
                                },
                                {
                                    "name": "states",
                                    "desc": "If specified, only results with the specified `state` values will be\nreturned. Otherwise, results with a `state` of `PENDING` will be returned.",
                                    "type": "string",
                                    "enum": [
                                        {
                                            "name": "GUARDIAN_INVITATION_STATE_UNSPECIFIED"
                                        },
                                        {
                                            "name": "PENDING"
                                        },
                                        {
                                            "name": "COMPLETE"
                                        }
                                    ]
                                },
                                {
                                    "name": "pageToken",
                                    "desc": "nextPageToken\nvalue returned from a previous\nlist call,\nindicating that the subsequent page of results should be returned.\n\nThe list request\nmust be otherwise identical to the one that resulted in this token.",
                                    "type": "string"
                                }
                            ],
                            "response": "ListGuardianInvitationsResponse"
                        },
                        {
                            "path": "v1/userProfiles/{studentId}/guardianInvitations/{invitationId}",
                            "httpMethod": "PATCH",
                            "name": "patch",
                            "desc": "Modifies a guardian invitation.\n\nCurrently, the only valid modification is to change the `state` from\n`PENDING` to `COMPLETE`. This has the effect of withdrawing the invitation.\n\nThis method returns the following error codes:\n\n* `PERMISSION_DENIED` if the current user does not have permission to\n  manage guardians, if guardians are not enabled for the domain in question\n  or for other access errors.\n* `FAILED_PRECONDITION` if the guardian link is not in the `PENDING` state.\n* `INVALID_ARGUMENT` if the format of the student ID provided\n  cannot be recognized (it is not an email address, nor a `user_id` from\n  this API), or if the passed `GuardianInvitation` has a `state` other than\n  `COMPLETE`, or if it modifies fields other than `state`.\n* `NOT_FOUND` if the student ID provided is a valid student ID, but\n  Classroom has no record of that student, or if the `id` field does not\n  refer to a guardian invitation known to Classroom.",
                            "pathParams": [
                                {
                                    "name": "studentId",
                                    "desc": "The ID of the student whose guardian invitation is to be modified.",
                                    "required": true,
                                    "type": "string"
                                },
                                {
                                    "name": "invitationId",
                                    "desc": "The `id` field of the `GuardianInvitation` to be modified.",
                                    "required": true,
                                    "type": "string"
                                }
                            ],
                            "optionalQueryParams": [
                                {
                                    "name": "updateMask",
                                    "desc": "Mask that identifies which fields on the course to update.\nThis field is required to do an update. The update will fail if invalid\nfields are specified. The following fields are valid:\n\n* `state`\n\nWhen set in a query parameter, this field should be specified as\n\n`updateMask=\u003cfield1\u003e,\u003cfield2\u003e,...`",
                                    "type": "string"
                                }
                            ],
                            "request": "GuardianInvitation",
                            "response": "GuardianInvitation"
                        }
                    ]
                }
            ]
        }
    ]
}