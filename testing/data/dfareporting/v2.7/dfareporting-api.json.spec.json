{
    "kind": "discovery#restDescription",
    "etag": "\"tbys6C40o18GZwyMen5GMkdK-3s/OBUnP-P7ni-fogNkVJMH8BP7EG8\"",
    "discoveryVersion": "v1",
    "id": "dfareporting:v2.7",
    "name": "dfareporting",
    "version": "v2.7",
    "title": "DCM/DFA Reporting And Trafficking API",
    "description": "Manages your DoubleClick Campaign Manager ad campaigns and reports.",
    "documentationLink": "https://developers.google.com/doubleclick-advertisers/",
    "protocol": "rest",
    "rootUrl": "https://www.googleapis.com/",
    "servicePath": "dfareporting/v2.7/",
    "auth": {
        "oauth2": [
            "https://www.googleapis.com/auth/ddmconversions",
            "https://www.googleapis.com/auth/dfareporting",
            "https://www.googleapis.com/auth/dfatrafficking"
        ]
    },
    "parameters": [
        {
            "name": "key",
            "desc": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
            "type": "string"
        },
        {
            "name": "oauth_token",
            "desc": "OAuth 2.0 token for the current user.",
            "type": "string"
        },
        {
            "name": "prettyPrint",
            "desc": "Returns response with indentations and line breaks.",
            "type": "bool",
            "default": "true"
        },
        {
            "name": "quotaUser",
            "desc": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
            "type": "string"
        },
        {
            "name": "userIp",
            "desc": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
            "type": "string"
        },
        {
            "name": "alt",
            "desc": "Data format for the response.",
            "type": "string",
            "default": "json",
            "enum": [
                {
                    "name": "json",
                    "desc": "Responses with Content-Type of application/json"
                }
            ]
        },
        {
            "name": "fields",
            "desc": "Selector specifying which fields to include in a partial response.",
            "type": "string"
        }
    ],
    "schemas": [
        {
            "name": "TagSetting",
            "desc": "Tag Settings",
            "type": "object",
            "fields": [
                {
                    "name": "additionalKeyValues",
                    "desc": "Additional key-values to be included in tags. Each key-value pair must be of the form key=value, and pairs must be separated by a semicolon (;). Keys and values must not contain commas. For example, id=2;color=red is a valid value for this field.",
                    "type": "string"
                },
                {
                    "name": "includeClickThroughUrls",
                    "desc": "Whether static landing page URLs should be included in the tags. This setting applies only to placements.",
                    "type": "bool"
                },
                {
                    "name": "includeClickTracking",
                    "desc": "Whether click-tracking string should be included in the tags.",
                    "type": "bool"
                },
                {
                    "name": "keywordOption",
                    "desc": "Option specifying how keywords are embedded in ad tags. This setting can be used to specify whether keyword placeholders are inserted in placement tags for this site. Publishers can then add keywords to those placeholders.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "GENERATE_SEPARATE_TAG_FOR_EACH_KEYWORD"
                        },
                        {
                            "name": "IGNORE"
                        },
                        {
                            "name": "PLACEHOLDER_WITH_LIST_OF_KEYWORDS"
                        }
                    ]
                }
            ]
        },
        {
            "name": "ChangeLog",
            "desc": "Describes a change that a user has made to a resource.",
            "type": "object",
            "fields": [
                {
                    "name": "subaccountId",
                    "desc": "Subaccount ID of the modified object.",
                    "type": "int64"
                },
                {
                    "name": "userProfileId",
                    "desc": "ID of the user who modified the object.",
                    "type": "int64"
                },
                {
                    "name": "action",
                    "desc": "Action which caused the change.",
                    "type": "string"
                },
                {
                    "name": "changeTime",
                    "desc": "Time when the object was modified.",
                    "type": "datetime"
                },
                {
                    "name": "fieldName",
                    "desc": "Field name of the object which changed.",
                    "type": "string"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#changeLog\".",
                    "type": "string",
                    "default": "dfareporting#changeLog"
                },
                {
                    "name": "id",
                    "desc": "ID of this change log.",
                    "type": "int64"
                },
                {
                    "name": "newValue",
                    "desc": "New value of the object field.",
                    "type": "string"
                },
                {
                    "name": "oldValue",
                    "desc": "Old value of the object field.",
                    "type": "string"
                },
                {
                    "name": "userProfileName",
                    "desc": "User profile name of the user who modified the object.",
                    "type": "string"
                },
                {
                    "name": "accountId",
                    "desc": "Account ID of the modified object.",
                    "type": "int64"
                },
                {
                    "name": "objectId",
                    "desc": "ID of the object of this change log. The object could be a campaign, placement, ad, or other type.",
                    "type": "int64"
                },
                {
                    "name": "objectType",
                    "desc": "Object type of the change log.",
                    "type": "string"
                },
                {
                    "name": "transactionId",
                    "desc": "Transaction ID of this change log. When a single API call results in many changes, each change will have a separate ID in the change log but will share the same transactionId.",
                    "type": "int64"
                }
            ]
        },
        {
            "name": "City",
            "desc": "Contains information about a city that can be targeted by ads.",
            "type": "object",
            "fields": [
                {
                    "name": "dartId",
                    "desc": "DART ID of this city. This is the ID used for targeting and generating reports.",
                    "type": "int64"
                },
                {
                    "name": "metroDmaId",
                    "desc": "ID of the metro region (DMA) to which this city belongs.",
                    "type": "int64"
                },
                {
                    "name": "regionCode",
                    "desc": "Region code of the region to which this city belongs.",
                    "type": "string"
                },
                {
                    "name": "regionDartId",
                    "desc": "DART ID of the region to which this city belongs.",
                    "type": "int64"
                },
                {
                    "name": "countryCode",
                    "desc": "Country code of the country to which this city belongs.",
                    "type": "string"
                },
                {
                    "name": "countryDartId",
                    "desc": "DART ID of the country to which this city belongs.",
                    "type": "int64"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#city\".",
                    "type": "string",
                    "default": "dfareporting#city"
                },
                {
                    "name": "metroCode",
                    "desc": "Metro region code of the metro region (DMA) to which this city belongs.",
                    "type": "string"
                },
                {
                    "name": "name",
                    "desc": "Name of this city.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "Creative",
            "desc": "Contains properties of a Creative.",
            "type": "object",
            "fields": [
                {
                    "name": "backupImageTargetWindow",
                    "desc": "Target window for backup image. Applicable to the following creative types: FLASH_INPAGE and HTML5_BANNER. Applicable to DISPLAY when the primary asset type is not HTML_IMAGE.",
                    "type": "ref",
                    "refType": "TargetWindow"
                },
                {
                    "name": "compatibility",
                    "desc": "Compatibilities associated with this creative. This is a read-only field. DISPLAY and DISPLAY_INTERSTITIAL refer to rendering either on desktop or on mobile devices or in mobile apps for regular or interstitial ads, respectively. APP and APP_INTERSTITIAL are for rendering in mobile apps. Only pre-existing creatives may have these compatibilities since new creatives will either be assigned DISPLAY or DISPLAY_INTERSTITIAL instead. IN_STREAM_VIDEO refers to rendering in in-stream video ads developed with the VAST standard. Applicable to all creative types.\n\nAcceptable values are:\n- \"APP\"\n- \"APP_INTERSTITIAL\"\n- \"IN_STREAM_VIDEO\"\n- \"DISPLAY\"\n- \"DISPLAY_INTERSTITIAL\"",
                    "collection": "array",
                    "type": "string"
                },
                {
                    "name": "htmlCodeLocked",
                    "desc": "Whether HTML code is DCM-generated or manually entered. Set to true to ignore changes to htmlCode. Applicable to the following creative types: FLASH_INPAGE and HTML5_BANNER.",
                    "type": "bool"
                },
                {
                    "name": "skipOffset",
                    "desc": "Amount of time to play the video before the skip button appears. Applicable to the following creative types: all INSTREAM_VIDEO.",
                    "type": "ref",
                    "refType": "VideoOffset"
                },
                {
                    "name": "studioCreativeId",
                    "desc": "Studio creative ID associated with rich media and VPAID creatives. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA, and all VPAID.",
                    "type": "int64"
                },
                {
                    "name": "thirdPartyRichMediaImpressionsUrl",
                    "desc": "Third-party URL used to record rich media impressions. Applicable to the following creative types: all RICH_MEDIA.",
                    "type": "string"
                },
                {
                    "name": "artworkType",
                    "desc": "Type of artwork used for the creative. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA, and all VPAID.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "ARTWORK_TYPE_FLASH"
                        },
                        {
                            "name": "ARTWORK_TYPE_HTML5"
                        },
                        {
                            "name": "ARTWORK_TYPE_IMAGE"
                        },
                        {
                            "name": "ARTWORK_TYPE_MIXED"
                        }
                    ]
                },
                {
                    "name": "requiredFlashPluginVersion",
                    "desc": "The minimum required Flash plugin version for this creative. For example, 11.2.202.235. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA, and all VPAID.",
                    "type": "string"
                },
                {
                    "name": "subaccountId",
                    "desc": "Subaccount ID of this creative. This field, if left unset, will be auto-generated for both insert and update operations. Applicable to all creative types.",
                    "type": "int64"
                },
                {
                    "name": "name",
                    "desc": "Name of the creative. This is a required field and must be less than 256 characters long. Applicable to all creative types.",
                    "type": "string"
                },
                {
                    "name": "creativeAssets",
                    "desc": "Assets associated with a creative. Applicable to all but the following creative types: INTERNAL_REDIRECT, INTERSTITIAL_INTERNAL_REDIRECT, and REDIRECT",
                    "collection": "array",
                    "type": "ref",
                    "refType": "CreativeAsset"
                },
                {
                    "name": "customKeyValues",
                    "desc": "Custom key-values for a Rich Media creative. Key-values let you customize the creative settings of a Rich Media ad running on your site without having to contact the advertiser. You can use key-values to dynamically change the look or functionality of a creative. Applicable to the following creative types: all RICH_MEDIA, and all VPAID.",
                    "collection": "array",
                    "type": "string"
                },
                {
                    "name": "size",
                    "desc": "Size associated with this creative. When inserting or updating a creative either the size ID field or size width and height fields can be used. This is a required field when applicable; however for IMAGE, FLASH_INPAGE creatives, and for DISPLAY creatives with a primary asset of type HTML_IMAGE, if left blank, this field will be automatically set using the actual size of the associated image assets. Applicable to the following creative types: DISPLAY, DISPLAY_IMAGE_GALLERY, FLASH_INPAGE, HTML5_BANNER, IMAGE, and all RICH_MEDIA.",
                    "type": "ref",
                    "refType": "Size"
                },
                {
                    "name": "studioAdvertiserId",
                    "desc": "Studio advertiser ID associated with rich media and VPAID creatives. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA, and all VPAID.",
                    "type": "int64"
                },
                {
                    "name": "adParameters",
                    "desc": "Ad parameters user for VPAID creative. This is a read-only field. Applicable to the following creative types: all VPAID.",
                    "type": "string"
                },
                {
                    "name": "backupImageClickThroughUrl",
                    "desc": "Click-through URL for backup image. Applicable to the following creative types: FLASH_INPAGE and HTML5_BANNER. Applicable to DISPLAY when the primary asset type is not HTML_IMAGE.",
                    "type": "string"
                },
                {
                    "name": "timerCustomEvents",
                    "desc": "List of timer events configured for the creative. For DISPLAY_IMAGE_GALLERY creatives, these are read-only and auto-generated from clickTags. Applicable to the following creative types: DISPLAY_IMAGE_GALLERY, all RICH_MEDIA, and all VPAID. Applicable to DISPLAY when the primary asset is not HTML_IMAGE.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "CreativeCustomEvent"
                },
                {
                    "name": "active",
                    "desc": "Whether the creative is active. Applicable to all creative types.",
                    "type": "bool"
                },
                {
                    "name": "creativeFieldAssignments",
                    "desc": "Creative field assignments for this creative. Applicable to all creative types.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "CreativeFieldAssignment"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#creative\".",
                    "type": "string",
                    "default": "dfareporting#creative"
                },
                {
                    "name": "overrideCss",
                    "desc": "Override CSS value for rich media creatives. Applicable to the following creative types: all RICH_MEDIA.",
                    "type": "string"
                },
                {
                    "name": "videoDescription",
                    "desc": "Description of the video ad. Applicable to the following creative types: all INSTREAM_VIDEO and all VPAID.",
                    "type": "string"
                },
                {
                    "name": "companionCreatives",
                    "desc": "List of companion creatives assigned to an in-Stream videocreative. Acceptable values include IDs of existing flash and image creatives. Applicable to the following creative types: all VPAID and all INSTREAM_VIDEO with dynamicAssetSelection set to false.",
                    "collection": "array",
                    "type": "int64"
                },
                {
                    "name": "allowScriptAccess",
                    "desc": "Whether script access is allowed for this creative. This is a read-only and deprecated field which will automatically be set to true on update. Applicable to the following creative types: FLASH_INPAGE.",
                    "type": "bool"
                },
                {
                    "name": "auto_advance_images",
                    "desc": "Whether images are automatically advanced for image gallery creatives. Applicable to the following creative types: DISPLAY_IMAGE_GALLERY.",
                    "type": "bool"
                },
                {
                    "name": "backupImageReportingLabel",
                    "desc": "Reporting label used for HTML5 banner backup image. Applicable to the following creative types: DISPLAY when the primary asset type is not HTML_IMAGE.",
                    "type": "string"
                },
                {
                    "name": "clickTags",
                    "desc": "Click tags of the creative. For DISPLAY, FLASH_INPAGE, and HTML5_BANNER creatives, this is a subset of detected click tags for the assets associated with this creative. After creating a flash asset, detected click tags will be returned in the creativeAssetMetadata. When inserting the creative, populate the creative clickTags field using the creativeAssetMetadata.clickTags field. For DISPLAY_IMAGE_GALLERY creatives, there should be exactly one entry in this list for each image creative asset. A click tag is matched with a corresponding creative asset by matching the clickTag.name field with the creativeAsset.assetIdentifier.name field. Applicable to the following creative types: DISPLAY_IMAGE_GALLERY, FLASH_INPAGE, HTML5_BANNER. Applicable to DISPLAY when the primary asset type is not HTML_IMAGE.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "ClickTag"
                },
                {
                    "name": "dynamicAssetSelection",
                    "desc": "Set this to true to enable the use of rules to target individual assets in this creative. When set to true creativeAssetSelection must be set. This also controls asset-level companions. When this is true, companion creatives should be assigned to creative assets. Learn more. Applicable to INSTREAM_VIDEO creatives.",
                    "type": "bool"
                },
                {
                    "name": "version",
                    "desc": "The version number helps you keep track of multiple versions of your creative in your reports. The version number will always be auto-generated during insert operations to start at 1. For tracking creatives the version cannot be incremented and will always remain at 1. For all other creative types the version can be incremented only by 1 during update operations. In addition, the version will be automatically incremented by 1 when undergoing Rich Media creative merging. Applicable to all creative types.",
                    "type": "int32"
                },
                {
                    "name": "advertiserId",
                    "desc": "Advertiser ID of this creative. This is a required field. Applicable to all creative types.",
                    "type": "int64"
                },
                {
                    "name": "lastModifiedInfo",
                    "desc": "Creative last modification information. This is a read-only field. Applicable to all creative types.",
                    "type": "ref",
                    "refType": "LastModifiedInfo"
                },
                {
                    "name": "renderingId",
                    "desc": "ID of current rendering version. This is a read-only field. Applicable to all creative types.",
                    "type": "int64"
                },
                {
                    "name": "studioTraffickedCreativeId",
                    "desc": "Studio trafficked creative ID associated with rich media and VPAID creatives. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA, and all VPAID.",
                    "type": "int64"
                },
                {
                    "name": "videoDuration",
                    "desc": "Creative video duration in seconds. This is a read-only field. Applicable to the following creative types: INSTREAM_VIDEO, all RICH_MEDIA, and all VPAID.",
                    "type": "float32"
                },
                {
                    "name": "adTagKeys",
                    "desc": "Keywords for a Rich Media creative. Keywords let you customize the creative settings of a Rich Media ad running on your site without having to contact the advertiser. You can use keywords to dynamically change the look or functionality of a creative. Applicable to the following creative types: all RICH_MEDIA, and all VPAID.",
                    "collection": "array",
                    "type": "string"
                },
                {
                    "name": "fsCommand",
                    "desc": "OpenWindow FSCommand of this creative. This lets the SWF file communicate with either Flash Player or the program hosting Flash Player, such as a web browser. This is only triggered if allowScriptAccess field is true. Applicable to the following creative types: FLASH_INPAGE.",
                    "type": "ref",
                    "refType": "FsCommand"
                },
                {
                    "name": "progressOffset",
                    "desc": "Amount of time to play the video before counting a view. Applicable to the following creative types: all INSTREAM_VIDEO.",
                    "type": "ref",
                    "refType": "VideoOffset"
                },
                {
                    "name": "skippable",
                    "desc": "Whether the user can choose to skip the creative. Applicable to the following creative types: all INSTREAM_VIDEO and all VPAID.",
                    "type": "bool"
                },
                {
                    "name": "sslCompliant",
                    "desc": "Whether the creative is SSL-compliant. This is a read-only field. Applicable to all creative types.",
                    "type": "bool"
                },
                {
                    "name": "sslOverride",
                    "desc": "Whether creative should be treated as SSL compliant even if the system scan shows it's not. Applicable to all creative types.",
                    "type": "bool"
                },
                {
                    "name": "counterCustomEvents",
                    "desc": "List of counter events configured for the creative. For DISPLAY_IMAGE_GALLERY creatives, these are read-only and auto-generated from clickTags. Applicable to the following creative types: DISPLAY_IMAGE_GALLERY, all RICH_MEDIA, and all VPAID.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "CreativeCustomEvent"
                },
                {
                    "name": "thirdPartyBackupImageImpressionsUrl",
                    "desc": "Third-party URL used to record backup image impressions. Applicable to the following creative types: all RICH_MEDIA.",
                    "type": "string"
                },
                {
                    "name": "latestTraffickedCreativeId",
                    "desc": "Latest Studio trafficked creative ID associated with rich media and VPAID creatives. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA, and all VPAID.",
                    "type": "int64"
                },
                {
                    "name": "redirectUrl",
                    "desc": "URL of hosted image or hosted video or another ad tag. For INSTREAM_VIDEO_REDIRECT creatives this is the in-stream video redirect URL. The standard for a VAST (Video Ad Serving Template) ad response allows for a redirect link to another VAST 2.0 or 3.0 call. This is a required field when applicable. Applicable to the following creative types: DISPLAY_REDIRECT, INTERNAL_REDIRECT, INTERSTITIAL_INTERNAL_REDIRECT, and INSTREAM_VIDEO_REDIRECT",
                    "type": "string"
                },
                {
                    "name": "thirdPartyUrls",
                    "desc": "Third-party URLs for tracking in-stream video creative events. Applicable to the following creative types: all INSTREAM_VIDEO and all VPAID.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "ThirdPartyTrackingUrl"
                },
                {
                    "name": "backupImageFeatures",
                    "desc": "List of feature dependencies that will cause a backup image to be served if the browser that serves the ad does not support them. Feature dependencies are features that a browser must be able to support in order to render your HTML5 creative asset correctly. This field is initially auto-generated to contain all features detected by DCM for all the assets of this creative and can then be modified by the client. To reset this field, copy over all the creativeAssets' detected features. Applicable to the following creative types: HTML5_BANNER. Applicable to DISPLAY when the primary asset type is not HTML_IMAGE.",
                    "collection": "array",
                    "type": "string"
                },
                {
                    "name": "authoringSource",
                    "desc": "Source application where creative was authored. Presently, only DBM authored creatives will have this field set. Applicable to all creative types.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "CREATIVE_AUTHORING_SOURCE_DBM"
                        },
                        {
                            "name": "CREATIVE_AUTHORING_SOURCE_DCM"
                        },
                        {
                            "name": "CREATIVE_AUTHORING_SOURCE_STUDIO"
                        }
                    ]
                },
                {
                    "name": "commercialId",
                    "desc": "Industry standard ID assigned to creative for reach and frequency. Applicable to the following creative types: all INSTREAM_VIDEO and all VPAID.",
                    "type": "string"
                },
                {
                    "name": "convertFlashToHtml5",
                    "desc": "Whether Flash assets associated with the creative need to be automatically converted to HTML5. This flag is enabled by default and users can choose to disable it if they don't want the system to generate and use HTML5 asset for this creative. Applicable to the following creative type: FLASH_INPAGE. Applicable to DISPLAY when the primary asset type is not HTML_IMAGE.",
                    "type": "bool"
                },
                {
                    "name": "creativeAssetSelection",
                    "desc": "Required if dynamicAssetSelection is true.",
                    "type": "ref",
                    "refType": "CreativeAssetSelection"
                },
                {
                    "name": "idDimensionValue",
                    "desc": "Dimension value for the ID of this creative. This is a read-only field. Applicable to all creative types.",
                    "type": "ref",
                    "refType": "DimensionValue"
                },
                {
                    "name": "archived",
                    "desc": "Whether the creative is archived. Applicable to all creative types.",
                    "type": "bool"
                },
                {
                    "name": "totalFileSize",
                    "desc": "Combined size of all creative assets. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA, and all VPAID.",
                    "type": "int64"
                },
                {
                    "name": "type",
                    "desc": "Type of this creative. This is a required field. Applicable to all creative types.\n\nNote: FLASH_INPAGE, HTML5_BANNER, and IMAGE are only used for existing creatives. New creatives should use DISPLAY as a replacement for these types.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "BRAND_SAFE_DEFAULT_INSTREAM_VIDEO"
                        },
                        {
                            "name": "CUSTOM_DISPLAY"
                        },
                        {
                            "name": "CUSTOM_DISPLAY_INTERSTITIAL"
                        },
                        {
                            "name": "DISPLAY"
                        },
                        {
                            "name": "DISPLAY_IMAGE_GALLERY"
                        },
                        {
                            "name": "DISPLAY_REDIRECT"
                        },
                        {
                            "name": "FLASH_INPAGE"
                        },
                        {
                            "name": "HTML5_BANNER"
                        },
                        {
                            "name": "IMAGE"
                        },
                        {
                            "name": "INSTREAM_VIDEO"
                        },
                        {
                            "name": "INSTREAM_VIDEO_REDIRECT"
                        },
                        {
                            "name": "INTERNAL_REDIRECT"
                        },
                        {
                            "name": "INTERSTITIAL_INTERNAL_REDIRECT"
                        },
                        {
                            "name": "RICH_MEDIA_DISPLAY_BANNER"
                        },
                        {
                            "name": "RICH_MEDIA_DISPLAY_EXPANDING"
                        },
                        {
                            "name": "RICH_MEDIA_DISPLAY_INTERSTITIAL"
                        },
                        {
                            "name": "RICH_MEDIA_DISPLAY_MULTI_FLOATING_INTERSTITIAL"
                        },
                        {
                            "name": "RICH_MEDIA_IM_EXPAND"
                        },
                        {
                            "name": "RICH_MEDIA_INPAGE_FLOATING"
                        },
                        {
                            "name": "RICH_MEDIA_MOBILE_IN_APP"
                        },
                        {
                            "name": "RICH_MEDIA_PEEL_DOWN"
                        },
                        {
                            "name": "TRACKING_TEXT"
                        },
                        {
                            "name": "VPAID_LINEAR_VIDEO"
                        },
                        {
                            "name": "VPAID_NON_LINEAR_VIDEO"
                        }
                    ]
                },
                {
                    "name": "authoringTool",
                    "desc": "Authoring tool for HTML5 banner creatives. This is a read-only field. Applicable to the following creative types: HTML5_BANNER.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "NINJA"
                        },
                        {
                            "name": "SWIFFY"
                        }
                    ]
                },
                {
                    "name": "backgroundColor",
                    "desc": "The 6-character HTML color code, beginning with #, for the background of the window area where the Flash file is displayed. Default is white. Applicable to the following creative types: FLASH_INPAGE.",
                    "type": "string"
                },
                {
                    "name": "htmlCode",
                    "desc": "HTML code for the creative. This is a required field when applicable. This field is ignored if htmlCodeLocked is false. Applicable to the following creative types: all CUSTOM, FLASH_INPAGE, and HTML5_BANNER, and all RICH_MEDIA.",
                    "type": "string"
                },
                {
                    "name": "id",
                    "desc": "ID of this creative. This is a read-only, auto-generated field. Applicable to all creative types.",
                    "type": "int64"
                },
                {
                    "name": "renderingIdDimensionValue",
                    "desc": "Dimension value for the rendering ID of this creative. This is a read-only field. Applicable to all creative types.",
                    "type": "ref",
                    "refType": "DimensionValue"
                },
                {
                    "name": "requiredFlashVersion",
                    "desc": "The internal Flash version for this creative as calculated by DoubleClick Studio. This is a read-only field. Applicable to the following creative types: FLASH_INPAGE all RICH_MEDIA, and all VPAID. Applicable to DISPLAY when the primary asset type is not HTML_IMAGE.",
                    "type": "int32"
                },
                {
                    "name": "accountId",
                    "desc": "Account ID of this creative. This field, if left unset, will be auto-generated for both insert and update operations. Applicable to all creative types.",
                    "type": "int64"
                },
                {
                    "name": "exitCustomEvents",
                    "desc": "List of exit events configured for the creative. For DISPLAY and DISPLAY_IMAGE_GALLERY creatives, these are read-only and auto-generated from clickTags, For DISPLAY, an event is also created from the backupImageReportingLabel. Applicable to the following creative types: DISPLAY_IMAGE_GALLERY, all RICH_MEDIA, and all VPAID. Applicable to DISPLAY when the primary asset type is not HTML_IMAGE.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "CreativeCustomEvent"
                }
            ]
        },
        {
            "name": "CreativeField",
            "desc": "Contains properties of a creative field.",
            "type": "object",
            "fields": [
                {
                    "name": "id",
                    "desc": "ID of this creative field. This is a read-only, auto-generated field.",
                    "type": "int64"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#creativeField\".",
                    "type": "string",
                    "default": "dfareporting#creativeField"
                },
                {
                    "name": "name",
                    "desc": "Name of this creative field. This is a required field and must be less than 256 characters long and unique among creative fields of the same advertiser.",
                    "type": "string"
                },
                {
                    "name": "subaccountId",
                    "desc": "Subaccount ID of this creative field. This is a read-only field that can be left blank.",
                    "type": "int64"
                },
                {
                    "name": "accountId",
                    "desc": "Account ID of this creative field. This is a read-only field that can be left blank.",
                    "type": "int64"
                },
                {
                    "name": "advertiserId",
                    "desc": "Advertiser ID of this creative field. This is a required field on insertion.",
                    "type": "int64"
                },
                {
                    "name": "advertiserIdDimensionValue",
                    "desc": "Dimension value for the ID of the advertiser. This is a read-only, auto-generated field.",
                    "type": "ref",
                    "refType": "DimensionValue"
                }
            ]
        },
        {
            "name": "CreativeFieldValuesListResponse",
            "desc": "Creative Field Value List Response",
            "type": "object",
            "fields": [
                {
                    "name": "creativeFieldValues",
                    "desc": "Creative field value collection.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "CreativeFieldValue"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#creativeFieldValuesListResponse\".",
                    "type": "string",
                    "default": "dfareporting#creativeFieldValuesListResponse"
                },
                {
                    "name": "nextPageToken",
                    "desc": "Pagination token to be used for the next list operation.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "DayPartTargeting",
            "desc": "Day Part Targeting.",
            "type": "object",
            "fields": [
                {
                    "name": "daysOfWeek",
                    "desc": "Days of the week when the ad will serve.\n\nAcceptable values are:\n- \"SUNDAY\"\n- \"MONDAY\"\n- \"TUESDAY\"\n- \"WEDNESDAY\"\n- \"THURSDAY\"\n- \"FRIDAY\"\n- \"SATURDAY\"",
                    "collection": "array",
                    "type": "string"
                },
                {
                    "name": "hoursOfDay",
                    "desc": "Hours of the day when the ad will serve. Must be an integer between 0 and 23 (inclusive), where 0 is midnight to 1 AM, and 23 is 11 PM to midnight. Can be specified with days of week, in which case the ad would serve during these hours on the specified days. For example, if Monday, Wednesday, Friday are the days of week specified and 9-10am, 3-5pm (hours 9, 15, and 16) is specified, the ad would serve Monday, Wednesdays, and Fridays at 9-10am and 3-5pm.",
                    "collection": "array",
                    "type": "int32"
                },
                {
                    "name": "userLocalTime",
                    "desc": "Whether or not to use the user's local time. If false, the America/New York time zone applies.",
                    "type": "bool"
                }
            ]
        },
        {
            "name": "InventoryItemsListResponse",
            "desc": "Inventory item List Response",
            "type": "object",
            "fields": [
                {
                    "name": "inventoryItems",
                    "desc": "Inventory item collection",
                    "collection": "array",
                    "type": "ref",
                    "refType": "InventoryItem"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#inventoryItemsListResponse\".",
                    "type": "string",
                    "default": "dfareporting#inventoryItemsListResponse"
                },
                {
                    "name": "nextPageToken",
                    "desc": "Pagination token to be used for the next list operation.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "OperatingSystemVersionsListResponse",
            "desc": "Operating System Version List Response",
            "type": "object",
            "fields": [
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#operatingSystemVersionsListResponse\".",
                    "type": "string",
                    "default": "dfareporting#operatingSystemVersionsListResponse"
                },
                {
                    "name": "operatingSystemVersions",
                    "desc": "Operating system version collection.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "OperatingSystemVersion"
                }
            ]
        },
        {
            "name": "PlacementGroupsListResponse",
            "desc": "Placement Group List Response",
            "type": "object",
            "fields": [
                {
                    "name": "nextPageToken",
                    "desc": "Pagination token to be used for the next list operation.",
                    "type": "string"
                },
                {
                    "name": "placementGroups",
                    "desc": "Placement group collection.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "PlacementGroup"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#placementGroupsListResponse\".",
                    "type": "string",
                    "default": "dfareporting#placementGroupsListResponse"
                }
            ]
        },
        {
            "name": "PlacementStrategiesListResponse",
            "desc": "Placement Strategy List Response",
            "type": "object",
            "fields": [
                {
                    "name": "placementStrategies",
                    "desc": "Placement strategy collection.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "PlacementStrategy"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#placementStrategiesListResponse\".",
                    "type": "string",
                    "default": "dfareporting#placementStrategiesListResponse"
                },
                {
                    "name": "nextPageToken",
                    "desc": "Pagination token to be used for the next list operation.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "PlacementsGenerateTagsResponse",
            "desc": "Placement GenerateTags Response",
            "type": "object",
            "fields": [
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#placementsGenerateTagsResponse\".",
                    "type": "string",
                    "default": "dfareporting#placementsGenerateTagsResponse"
                },
                {
                    "name": "placementTags",
                    "desc": "Set of generated tags for the specified placements.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "PlacementTag"
                }
            ]
        },
        {
            "name": "UserRolesListResponse",
            "desc": "User Role List Response",
            "type": "object",
            "fields": [
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#userRolesListResponse\".",
                    "type": "string",
                    "default": "dfareporting#userRolesListResponse"
                },
                {
                    "name": "nextPageToken",
                    "desc": "Pagination token to be used for the next list operation.",
                    "type": "string"
                },
                {
                    "name": "userRoles",
                    "desc": "User role collection.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "UserRole"
                }
            ]
        },
        {
            "name": "VideoFormatsListResponse",
            "desc": "Video Format List Response",
            "type": "object",
            "fields": [
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#videoFormatsListResponse\".",
                    "type": "string",
                    "default": "dfareporting#videoFormatsListResponse"
                },
                {
                    "name": "videoFormats",
                    "desc": "Video format collection.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "VideoFormat"
                }
            ]
        },
        {
            "name": "CreativeRotation",
            "desc": "Creative Rotation.",
            "type": "object",
            "fields": [
                {
                    "name": "creativeAssignments",
                    "desc": "Creative assignments in this creative rotation.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "CreativeAssignment"
                },
                {
                    "name": "creativeOptimizationConfigurationId",
                    "desc": "Creative optimization configuration that is used by this ad. It should refer to one of the existing optimization configurations in the ad's campaign. If it is unset or set to 0, then the campaign's default optimization configuration will be used for this ad.",
                    "type": "int64"
                },
                {
                    "name": "type",
                    "desc": "Type of creative rotation. Can be used to specify whether to use sequential or random rotation.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "CREATIVE_ROTATION_TYPE_RANDOM"
                        },
                        {
                            "name": "CREATIVE_ROTATION_TYPE_SEQUENTIAL"
                        }
                    ]
                },
                {
                    "name": "weightCalculationStrategy",
                    "desc": "Strategy for calculating weights. Used with CREATIVE_ROTATION_TYPE_RANDOM.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "WEIGHT_STRATEGY_CUSTOM"
                        },
                        {
                            "name": "WEIGHT_STRATEGY_EQUAL"
                        },
                        {
                            "name": "WEIGHT_STRATEGY_HIGHEST_CTR"
                        },
                        {
                            "name": "WEIGHT_STRATEGY_OPTIMIZED"
                        }
                    ]
                }
            ]
        },
        {
            "name": "CreativeSettings",
            "desc": "Creative Settings",
            "type": "object",
            "fields": [
                {
                    "name": "iFrameFooter",
                    "desc": "Header text for iFrames for this site. Must be less than or equal to 2000 characters long.",
                    "type": "string"
                },
                {
                    "name": "iFrameHeader",
                    "desc": "Header text for iFrames for this site. Must be less than or equal to 2000 characters long.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "CustomRichMediaEvents",
            "desc": "Represents a Custom Rich Media Events group.",
            "type": "object",
            "fields": [
                {
                    "name": "kind",
                    "desc": "The kind of resource this is, in this case dfareporting#customRichMediaEvents.",
                    "type": "string",
                    "default": "dfareporting#customRichMediaEvents"
                },
                {
                    "name": "filteredEventIds",
                    "desc": "List of custom rich media event IDs. Dimension values must be all of type dfa:richMediaEventTypeIdAndName.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "DimensionValue"
                }
            ]
        },
        {
            "name": "OperatingSystemVersion",
            "desc": "Contains information about a particular version of an operating system that can be targeted by ads.",
            "type": "object",
            "fields": [
                {
                    "name": "operatingSystem",
                    "desc": "Operating system of this operating system version.",
                    "type": "ref",
                    "refType": "OperatingSystem"
                },
                {
                    "name": "id",
                    "desc": "ID of this operating system version.",
                    "type": "int64"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#operatingSystemVersion\".",
                    "type": "string",
                    "default": "dfareporting#operatingSystemVersion"
                },
                {
                    "name": "majorVersion",
                    "desc": "Major version (leftmost number) of this operating system version.",
                    "type": "string"
                },
                {
                    "name": "minorVersion",
                    "desc": "Minor version (number after the first dot) of this operating system version.",
                    "type": "string"
                },
                {
                    "name": "name",
                    "desc": "Name of this operating system version.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "OrdersListResponse",
            "desc": "Order List Response",
            "type": "object",
            "fields": [
                {
                    "name": "orders",
                    "desc": "Order collection.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Order"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#ordersListResponse\".",
                    "type": "string",
                    "default": "dfareporting#ordersListResponse"
                },
                {
                    "name": "nextPageToken",
                    "desc": "Pagination token to be used for the next list operation.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "TargetWindow",
            "desc": "Target Window.",
            "type": "object",
            "fields": [
                {
                    "name": "customHtml",
                    "desc": "User-entered value.",
                    "type": "string"
                },
                {
                    "name": "targetWindowOption",
                    "desc": "Type of browser window for which the backup image of the flash creative can be displayed.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "CURRENT_WINDOW"
                        },
                        {
                            "name": "CUSTOM"
                        },
                        {
                            "name": "NEW_WINDOW"
                        }
                    ]
                }
            ]
        },
        {
            "name": "CreativeAssignment",
            "desc": "Creative Assignment.",
            "type": "object",
            "fields": [
                {
                    "name": "weight",
                    "desc": "Weight of the creative assignment, applicable when the rotation type is CREATIVE_ROTATION_TYPE_RANDOM.",
                    "type": "int32"
                },
                {
                    "name": "active",
                    "desc": "Whether this creative assignment is active. When true, the creative will be included in the ad's rotation.",
                    "type": "bool"
                },
                {
                    "name": "creativeGroupAssignments",
                    "desc": "Creative group assignments for this creative assignment. Only one assignment per creative group number is allowed for a maximum of two assignments.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "CreativeGroupAssignment"
                },
                {
                    "name": "creativeIdDimensionValue",
                    "desc": "Dimension value for the ID of the creative. This is a read-only, auto-generated field.",
                    "type": "ref",
                    "refType": "DimensionValue"
                },
                {
                    "name": "endTime",
                    "desc": "Date and time that the assigned creative should stop serving. Must be later than the start time.",
                    "type": "datetime"
                },
                {
                    "name": "richMediaExitOverrides",
                    "desc": "Rich media exit overrides for this creative assignment.\nApplicable when the creative type is any of the following: \n- RICH_MEDIA_INPAGE\n- RICH_MEDIA_INPAGE_FLOATING\n- RICH_MEDIA_IM_EXPAND\n- RICH_MEDIA_EXPANDING\n- RICH_MEDIA_INTERSTITIAL_FLOAT\n- RICH_MEDIA_MOBILE_IN_APP\n- RICH_MEDIA_MULTI_FLOATING\n- RICH_MEDIA_PEEL_DOWN\n- ADVANCED_BANNER\n- VPAID_LINEAR\n- VPAID_NON_LINEAR",
                    "collection": "array",
                    "type": "ref",
                    "refType": "RichMediaExitOverride"
                },
                {
                    "name": "sequence",
                    "desc": "Sequence number of the creative assignment, applicable when the rotation type is CREATIVE_ROTATION_TYPE_SEQUENTIAL.",
                    "type": "int32"
                },
                {
                    "name": "sslCompliant",
                    "desc": "Whether the creative to be assigned is SSL-compliant. This is a read-only field that is auto-generated when the ad is inserted or updated.",
                    "type": "bool"
                },
                {
                    "name": "startTime",
                    "desc": "Date and time that the assigned creative should start serving.",
                    "type": "datetime"
                },
                {
                    "name": "applyEventTags",
                    "desc": "Whether applicable event tags should fire when this creative assignment is rendered. If this value is unset when the ad is inserted or updated, it will default to true for all creative types EXCEPT for INTERNAL_REDIRECT, INTERSTITIAL_INTERNAL_REDIRECT, and INSTREAM_VIDEO.",
                    "type": "bool"
                },
                {
                    "name": "clickThroughUrl",
                    "desc": "Click-through URL of the creative assignment.",
                    "type": "ref",
                    "refType": "ClickThroughUrl"
                },
                {
                    "name": "companionCreativeOverrides",
                    "desc": "Companion creative overrides for this creative assignment. Applicable to video ads.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "CompanionClickThroughOverride"
                },
                {
                    "name": "creativeId",
                    "desc": "ID of the creative to be assigned. This is a required field.",
                    "type": "int64"
                }
            ]
        },
        {
            "name": "PricingSchedule",
            "desc": "Pricing Schedule",
            "type": "object",
            "fields": [
                {
                    "name": "endDate",
                    "desc": "Placement end date. This date must be later than, or the same day as, the placement start date, but not later than the campaign end date. If, for example, you set 6/25/2015 as both the start and end dates, the effective placement date is just that day only, 6/25/2015. The hours, minutes, and seconds of the end date should not be set, as doing so will result in an error. This field is required on insertion.",
                    "type": "date"
                },
                {
                    "name": "flighted",
                    "desc": "Whether this placement is flighted. If true, pricing periods will be computed automatically.",
                    "type": "bool"
                },
                {
                    "name": "floodlightActivityId",
                    "desc": "Floodlight activity ID associated with this placement. This field should be set when placement pricing type is set to PRICING_TYPE_CPA.",
                    "type": "int64"
                },
                {
                    "name": "pricingType",
                    "desc": "Placement pricing type. This field is required on insertion.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "PRICING_TYPE_CPA"
                        },
                        {
                            "name": "PRICING_TYPE_CPC"
                        },
                        {
                            "name": "PRICING_TYPE_CPM"
                        },
                        {
                            "name": "PRICING_TYPE_CPM_ACTIVEVIEW"
                        },
                        {
                            "name": "PRICING_TYPE_FLAT_RATE_CLICKS"
                        },
                        {
                            "name": "PRICING_TYPE_FLAT_RATE_IMPRESSIONS"
                        }
                    ]
                },
                {
                    "name": "startDate",
                    "desc": "Placement start date. This date must be later than, or the same day as, the campaign start date. The hours, minutes, and seconds of the start date should not be set, as doing so will result in an error. This field is required on insertion.",
                    "type": "date"
                },
                {
                    "name": "capCostOption",
                    "desc": "Placement cap cost option.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "CAP_COST_CUMULATIVE"
                        },
                        {
                            "name": "CAP_COST_MONTHLY"
                        },
                        {
                            "name": "CAP_COST_NONE"
                        }
                    ]
                },
                {
                    "name": "disregardOverdelivery",
                    "desc": "Whether cap costs are ignored by ad serving.",
                    "type": "bool"
                },
                {
                    "name": "pricingPeriods",
                    "desc": "Pricing periods for this placement.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "PricingSchedulePricingPeriod"
                },
                {
                    "name": "testingStartDate",
                    "desc": "Testing start date of this placement. The hours, minutes, and seconds of the start date should not be set, as doing so will result in an error.",
                    "type": "date"
                }
            ]
        },
        {
            "name": "ThirdPartyTrackingUrl",
            "desc": "Third-party Tracking URL.",
            "type": "object",
            "fields": [
                {
                    "name": "thirdPartyUrlType",
                    "desc": "Third-party URL type for in-stream video creatives.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "CLICK_TRACKING"
                        },
                        {
                            "name": "IMPRESSION"
                        },
                        {
                            "name": "RICH_MEDIA_BACKUP_IMPRESSION"
                        },
                        {
                            "name": "RICH_MEDIA_IMPRESSION"
                        },
                        {
                            "name": "RICH_MEDIA_RM_IMPRESSION"
                        },
                        {
                            "name": "SURVEY"
                        },
                        {
                            "name": "VIDEO_COMPLETE"
                        },
                        {
                            "name": "VIDEO_CUSTOM"
                        },
                        {
                            "name": "VIDEO_FIRST_QUARTILE"
                        },
                        {
                            "name": "VIDEO_FULLSCREEN"
                        },
                        {
                            "name": "VIDEO_MIDPOINT"
                        },
                        {
                            "name": "VIDEO_MUTE"
                        },
                        {
                            "name": "VIDEO_PAUSE"
                        },
                        {
                            "name": "VIDEO_PROGRESS"
                        },
                        {
                            "name": "VIDEO_REWIND"
                        },
                        {
                            "name": "VIDEO_SKIP"
                        },
                        {
                            "name": "VIDEO_START"
                        },
                        {
                            "name": "VIDEO_STOP"
                        },
                        {
                            "name": "VIDEO_THIRD_QUARTILE"
                        }
                    ]
                },
                {
                    "name": "url",
                    "desc": "URL for the specified third-party URL type.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "VideoFormat",
            "desc": "Contains information about supported video formats.",
            "type": "object",
            "fields": [
                {
                    "name": "resolution",
                    "desc": "The resolution of this video format.",
                    "type": "ref",
                    "refType": "Size"
                },
                {
                    "name": "targetBitRate",
                    "desc": "The target bit rate of this video format.",
                    "type": "int32"
                },
                {
                    "name": "fileType",
                    "desc": "File type of the video format.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "FLV"
                        },
                        {
                            "name": "M3U8"
                        },
                        {
                            "name": "MP4"
                        },
                        {
                            "name": "THREEGPP"
                        },
                        {
                            "name": "WEBM"
                        }
                    ]
                },
                {
                    "name": "id",
                    "desc": "ID of the video format.",
                    "type": "int32"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#videoFormat\".",
                    "type": "string",
                    "default": "dfareporting#videoFormat"
                }
            ]
        },
        {
            "name": "AccountPermissionGroupsListResponse",
            "desc": "Account Permission Group List Response",
            "type": "object",
            "fields": [
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#accountPermissionGroupsListResponse\".",
                    "type": "string",
                    "default": "dfareporting#accountPermissionGroupsListResponse"
                },
                {
                    "name": "accountPermissionGroups",
                    "desc": "Account permission group collection.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "AccountPermissionGroup"
                }
            ]
        },
        {
            "name": "CampaignsListResponse",
            "desc": "Campaign List Response",
            "type": "object",
            "fields": [
                {
                    "name": "campaigns",
                    "desc": "Campaign collection.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Campaign"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#campaignsListResponse\".",
                    "type": "string",
                    "default": "dfareporting#campaignsListResponse"
                },
                {
                    "name": "nextPageToken",
                    "desc": "Pagination token to be used for the next list operation.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "DimensionValue",
            "desc": "Represents a DimensionValue resource.",
            "type": "object",
            "fields": [
                {
                    "name": "id",
                    "desc": "The ID associated with the value if available.",
                    "type": "string"
                },
                {
                    "name": "kind",
                    "desc": "The kind of resource this is, in this case dfareporting#dimensionValue.",
                    "type": "string",
                    "default": "dfareporting#dimensionValue"
                },
                {
                    "name": "matchType",
                    "desc": "Determines how the 'value' field is matched when filtering. If not specified, defaults to EXACT. If set to WILDCARD_EXPRESSION, '*' is allowed as a placeholder for variable length character sequences, and it can be escaped with a backslash. Note, only paid search dimensions ('dfa:paidSearch*') allow a matchType other than EXACT.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "BEGINS_WITH"
                        },
                        {
                            "name": "CONTAINS"
                        },
                        {
                            "name": "EXACT"
                        },
                        {
                            "name": "WILDCARD_EXPRESSION"
                        }
                    ]
                },
                {
                    "name": "value",
                    "desc": "The value of the dimension.",
                    "type": "string"
                },
                {
                    "name": "dimensionName",
                    "desc": "The name of the dimension.",
                    "type": "string"
                },
                {
                    "name": "etag",
                    "desc": "The eTag of this response for caching purposes.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "PostalCode",
            "desc": "Contains information about a postal code that can be targeted by ads.",
            "type": "object",
            "fields": [
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#postalCode\".",
                    "type": "string",
                    "default": "dfareporting#postalCode"
                },
                {
                    "name": "code",
                    "desc": "Postal code. This is equivalent to the id field.",
                    "type": "string"
                },
                {
                    "name": "countryCode",
                    "desc": "Country code of the country to which this postal code belongs.",
                    "type": "string"
                },
                {
                    "name": "countryDartId",
                    "desc": "DART ID of the country to which this postal code belongs.",
                    "type": "int64"
                },
                {
                    "name": "id",
                    "desc": "ID of this postal code.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "SkippableSetting",
            "desc": "Skippable Settings",
            "type": "object",
            "fields": [
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#skippableSetting\".",
                    "type": "string",
                    "default": "dfareporting#skippableSetting"
                },
                {
                    "name": "progressOffset",
                    "desc": "Amount of time to play videos served to this placement before counting a view. Applicable when skippable is true.",
                    "type": "ref",
                    "refType": "VideoOffset"
                },
                {
                    "name": "skipOffset",
                    "desc": "Amount of time to play videos served to this placement before the skip button should appear. Applicable when skippable is true.",
                    "type": "ref",
                    "refType": "VideoOffset"
                },
                {
                    "name": "skippable",
                    "desc": "Whether the user can skip creatives served to this placement.",
                    "type": "bool"
                }
            ]
        },
        {
            "name": "VideoSettings",
            "desc": "Video Settings",
            "type": "object",
            "fields": [
                {
                    "name": "companionSettings",
                    "desc": "Settings for the companion creatives of video creatives served to this placement.",
                    "type": "ref",
                    "refType": "CompanionSetting"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#videoSettings\".",
                    "type": "string",
                    "default": "dfareporting#videoSettings"
                },
                {
                    "name": "skippableSettings",
                    "desc": "Settings for the skippability of video creatives served to this placement. If this object is provided, the creative-level skippable settings will be overridden.",
                    "type": "ref",
                    "refType": "SkippableSetting"
                },
                {
                    "name": "transcodeSettings",
                    "desc": "Settings for the transcodes of video creatives served to this placement. If this object is provided, the creative-level transcode settings will be overridden.",
                    "type": "ref",
                    "refType": "TranscodeSetting"
                }
            ]
        },
        {
            "name": "CreativeGroup",
            "desc": "Contains properties of a creative group.",
            "type": "object",
            "fields": [
                {
                    "name": "groupNumber",
                    "desc": "Subgroup of the creative group. Assign your creative groups to one of the following subgroups in order to filter or manage them more easily. This field is required on insertion and is read-only after insertion.\nAcceptable values are: \n- 1\n- 2",
                    "type": "int32"
                },
                {
                    "name": "id",
                    "desc": "ID of this creative group. This is a read-only, auto-generated field.",
                    "type": "int64"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#creativeGroup\".",
                    "type": "string",
                    "default": "dfareporting#creativeGroup"
                },
                {
                    "name": "name",
                    "desc": "Name of this creative group. This is a required field and must be less than 256 characters long and unique among creative groups of the same advertiser.",
                    "type": "string"
                },
                {
                    "name": "subaccountId",
                    "desc": "Subaccount ID of this creative group. This is a read-only field that can be left blank.",
                    "type": "int64"
                },
                {
                    "name": "accountId",
                    "desc": "Account ID of this creative group. This is a read-only field that can be left blank.",
                    "type": "int64"
                },
                {
                    "name": "advertiserId",
                    "desc": "Advertiser ID of this creative group. This is a required field on insertion.",
                    "type": "int64"
                },
                {
                    "name": "advertiserIdDimensionValue",
                    "desc": "Dimension value for the ID of the advertiser. This is a read-only, auto-generated field.",
                    "type": "ref",
                    "refType": "DimensionValue"
                }
            ]
        },
        {
            "name": "FloodlightActivityGroupsListResponse",
            "desc": "Floodlight Activity Group List Response",
            "type": "object",
            "fields": [
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#floodlightActivityGroupsListResponse\".",
                    "type": "string",
                    "default": "dfareporting#floodlightActivityGroupsListResponse"
                },
                {
                    "name": "nextPageToken",
                    "desc": "Pagination token to be used for the next list operation.",
                    "type": "string"
                },
                {
                    "name": "floodlightActivityGroups",
                    "desc": "Floodlight activity group collection.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "FloodlightActivityGroup"
                }
            ]
        },
        {
            "name": "ReportCompatibleFields",
            "desc": "Represents fields that are compatible to be selected for a report of type \"STANDARD\".",
            "type": "object",
            "fields": [
                {
                    "name": "dimensionFilters",
                    "desc": "Dimensions which are compatible to be selected in the \"dimensionFilters\" section of the report.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Dimension"
                },
                {
                    "name": "dimensions",
                    "desc": "Dimensions which are compatible to be selected in the \"dimensions\" section of the report.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Dimension"
                },
                {
                    "name": "kind",
                    "desc": "The kind of resource this is, in this case dfareporting#reportCompatibleFields.",
                    "type": "string",
                    "default": "dfareporting#reportCompatibleFields"
                },
                {
                    "name": "metrics",
                    "desc": "Metrics which are compatible to be selected in the \"metricNames\" section of the report.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Metric"
                },
                {
                    "name": "pivotedActivityMetrics",
                    "desc": "Metrics which are compatible to be selected as activity metrics to pivot on in the \"activities\" section of the report.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Metric"
                }
            ]
        },
        {
            "name": "TagData",
            "desc": "Placement Tag Data",
            "type": "object",
            "fields": [
                {
                    "name": "adId",
                    "desc": "Ad associated with this placement tag.",
                    "type": "int64"
                },
                {
                    "name": "clickTag",
                    "desc": "Tag string to record a click.",
                    "type": "string"
                },
                {
                    "name": "creativeId",
                    "desc": "Creative associated with this placement tag.",
                    "type": "int64"
                },
                {
                    "name": "format",
                    "desc": "TagData tag format of this tag.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "PLACEMENT_TAG_CLICK_COMMANDS"
                        },
                        {
                            "name": "PLACEMENT_TAG_IFRAME_ILAYER"
                        },
                        {
                            "name": "PLACEMENT_TAG_IFRAME_JAVASCRIPT"
                        },
                        {
                            "name": "PLACEMENT_TAG_IFRAME_JAVASCRIPT_LEGACY"
                        },
                        {
                            "name": "PLACEMENT_TAG_INSTREAM_VIDEO_PREFETCH"
                        },
                        {
                            "name": "PLACEMENT_TAG_INSTREAM_VIDEO_PREFETCH_VAST_3"
                        },
                        {
                            "name": "PLACEMENT_TAG_INTERNAL_REDIRECT"
                        },
                        {
                            "name": "PLACEMENT_TAG_INTERSTITIAL_IFRAME_JAVASCRIPT"
                        },
                        {
                            "name": "PLACEMENT_TAG_INTERSTITIAL_IFRAME_JAVASCRIPT_LEGACY"
                        },
                        {
                            "name": "PLACEMENT_TAG_INTERSTITIAL_INTERNAL_REDIRECT"
                        },
                        {
                            "name": "PLACEMENT_TAG_INTERSTITIAL_JAVASCRIPT"
                        },
                        {
                            "name": "PLACEMENT_TAG_INTERSTITIAL_JAVASCRIPT_LEGACY"
                        },
                        {
                            "name": "PLACEMENT_TAG_JAVASCRIPT"
                        },
                        {
                            "name": "PLACEMENT_TAG_JAVASCRIPT_LEGACY"
                        },
                        {
                            "name": "PLACEMENT_TAG_STANDARD"
                        },
                        {
                            "name": "PLACEMENT_TAG_TRACKING"
                        },
                        {
                            "name": "PLACEMENT_TAG_TRACKING_IFRAME"
                        },
                        {
                            "name": "PLACEMENT_TAG_TRACKING_JAVASCRIPT"
                        }
                    ]
                },
                {
                    "name": "impressionTag",
                    "desc": "Tag string for serving an ad.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "CampaignCreativeAssociationsListResponse",
            "desc": "Campaign Creative Association List Response",
            "type": "object",
            "fields": [
                {
                    "name": "campaignCreativeAssociations",
                    "desc": "Campaign creative association collection",
                    "collection": "array",
                    "type": "ref",
                    "refType": "CampaignCreativeAssociation"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#campaignCreativeAssociationsListResponse\".",
                    "type": "string",
                    "default": "dfareporting#campaignCreativeAssociationsListResponse"
                },
                {
                    "name": "nextPageToken",
                    "desc": "Pagination token to be used for the next list operation.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "ConnectionTypesListResponse",
            "desc": "Connection Type List Response",
            "type": "object",
            "fields": [
                {
                    "name": "connectionTypes",
                    "desc": "Collection of connection types such as broadband and mobile.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "ConnectionType"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#connectionTypesListResponse\".",
                    "type": "string",
                    "default": "dfareporting#connectionTypesListResponse"
                }
            ]
        },
        {
            "name": "DirectorySite",
            "desc": "DirectorySites contains properties of a website from the Site Directory. Sites need to be added to an account via the Sites resource before they can be assigned to a placement.",
            "type": "object",
            "fields": [
                {
                    "name": "id",
                    "desc": "ID of this directory site. This is a read-only, auto-generated field.",
                    "type": "int64"
                },
                {
                    "name": "url",
                    "desc": "URL of this directory site.",
                    "type": "string"
                },
                {
                    "name": "contactAssignments",
                    "desc": "Directory site contacts.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "DirectorySiteContactAssignment"
                },
                {
                    "name": "description",
                    "desc": "Description of this directory site.",
                    "type": "string"
                },
                {
                    "name": "idDimensionValue",
                    "desc": "Dimension value for the ID of this directory site. This is a read-only, auto-generated field.",
                    "type": "ref",
                    "refType": "DimensionValue"
                },
                {
                    "name": "settings",
                    "desc": "Directory site settings.",
                    "type": "ref",
                    "refType": "DirectorySiteSettings"
                },
                {
                    "name": "active",
                    "desc": "Whether this directory site is active.",
                    "type": "bool"
                },
                {
                    "name": "countryId",
                    "desc": "Country ID of this directory site.",
                    "type": "int64"
                },
                {
                    "name": "currencyId",
                    "desc": "Currency ID of this directory site.\nPossible values are: \n- \"1\" for USD \n- \"2\" for GBP \n- \"3\" for ESP \n- \"4\" for SEK \n- \"5\" for CAD \n- \"6\" for JPY \n- \"7\" for DEM \n- \"8\" for AUD \n- \"9\" for FRF \n- \"10\" for ITL \n- \"11\" for DKK \n- \"12\" for NOK \n- \"13\" for FIM \n- \"14\" for ZAR \n- \"15\" for IEP \n- \"16\" for NLG \n- \"17\" for EUR \n- \"18\" for KRW \n- \"19\" for TWD \n- \"20\" for SGD \n- \"21\" for CNY \n- \"22\" for HKD \n- \"23\" for NZD \n- \"24\" for MYR \n- \"25\" for BRL \n- \"26\" for PTE \n- \"27\" for MXP \n- \"28\" for CLP \n- \"29\" for TRY \n- \"30\" for ARS \n- \"31\" for PEN \n- \"32\" for ILS \n- \"33\" for CHF \n- \"34\" for VEF \n- \"35\" for COP \n- \"36\" for GTQ \n- \"37\" for PLN \n- \"39\" for INR \n- \"40\" for THB \n- \"41\" for IDR \n- \"42\" for CZK \n- \"43\" for RON \n- \"44\" for HUF \n- \"45\" for RUB \n- \"46\" for AED \n- \"47\" for BGN \n- \"48\" for HRK",
                    "type": "int64"
                },
                {
                    "name": "interstitialTagFormats",
                    "desc": "Tag types for interstitial placements.\n\nAcceptable values are:\n- \"IFRAME_JAVASCRIPT_INTERSTITIAL\"\n- \"INTERNAL_REDIRECT_INTERSTITIAL\"\n- \"JAVASCRIPT_INTERSTITIAL\"",
                    "collection": "array",
                    "type": "string"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#directorySite\".",
                    "type": "string",
                    "default": "dfareporting#directorySite"
                },
                {
                    "name": "parentId",
                    "desc": "Parent directory site ID.",
                    "type": "int64"
                },
                {
                    "name": "inpageTagFormats",
                    "desc": "Tag types for regular placements.\n\nAcceptable values are:\n- \"STANDARD\"\n- \"IFRAME_JAVASCRIPT_INPAGE\"\n- \"INTERNAL_REDIRECT_INPAGE\"\n- \"JAVASCRIPT_INPAGE\"",
                    "collection": "array",
                    "type": "string"
                },
                {
                    "name": "name",
                    "desc": "Name of this directory site.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "EncryptionInfo",
            "desc": "A description of how user IDs are encrypted.",
            "type": "object",
            "fields": [
                {
                    "name": "encryptionEntityType",
                    "desc": "The encryption entity type. This should match the encryption configuration for ad serving or Data Transfer.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "ADWORDS_CUSTOMER"
                        },
                        {
                            "name": "DBM_ADVERTISER"
                        },
                        {
                            "name": "DBM_PARTNER"
                        },
                        {
                            "name": "DCM_ACCOUNT"
                        },
                        {
                            "name": "DCM_ADVERTISER"
                        },
                        {
                            "name": "ENCRYPTION_ENTITY_TYPE_UNKNOWN"
                        }
                    ]
                },
                {
                    "name": "encryptionSource",
                    "desc": "Describes whether the encrypted cookie was received from ad serving (the %m macro) or from Data Transfer.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "AD_SERVING"
                        },
                        {
                            "name": "DATA_TRANSFER"
                        },
                        {
                            "name": "ENCRYPTION_SCOPE_UNKNOWN"
                        }
                    ]
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#encryptionInfo\".",
                    "type": "string",
                    "default": "dfareporting#encryptionInfo"
                },
                {
                    "name": "encryptionEntityId",
                    "desc": "The encryption entity ID. This should match the encryption configuration for ad serving or Data Transfer.",
                    "type": "int64"
                }
            ]
        },
        {
            "name": "FileList",
            "desc": "Represents the list of File resources.",
            "type": "object",
            "fields": [
                {
                    "name": "kind",
                    "desc": "The kind of list this is, in this case dfareporting#fileList.",
                    "type": "string",
                    "default": "dfareporting#fileList"
                },
                {
                    "name": "nextPageToken",
                    "desc": "Continuation token used to page through files. To retrieve the next page of results, set the next request's \"pageToken\" to the value of this field. The page token is only valid for a limited amount of time and should not be persisted.",
                    "type": "string"
                },
                {
                    "name": "etag",
                    "desc": "The eTag of this response for caching purposes.",
                    "type": "string"
                },
                {
                    "name": "items",
                    "desc": "The files returned in this response.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "File"
                }
            ]
        },
        {
            "name": "FloodlightConfiguration",
            "desc": "Contains properties of a Floodlight configuration.",
            "type": "object",
            "fields": [
                {
                    "name": "analyticsDataSharingEnabled",
                    "desc": "Whether advertiser data is shared with Google Analytics.",
                    "type": "bool"
                },
                {
                    "name": "firstDayOfWeek",
                    "desc": "Day that will be counted as the first day of the week in reports. This is a required field.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "MONDAY"
                        },
                        {
                            "name": "SUNDAY"
                        }
                    ]
                },
                {
                    "name": "inAppAttributionTrackingEnabled",
                    "desc": "Whether in-app attribution tracking is enabled.",
                    "type": "bool"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#floodlightConfiguration\".",
                    "type": "string",
                    "default": "dfareporting#floodlightConfiguration"
                },
                {
                    "name": "userDefinedVariableConfigurations",
                    "desc": "List of user defined variables enabled for this configuration.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "UserDefinedVariableConfiguration"
                },
                {
                    "name": "advertiserIdDimensionValue",
                    "desc": "Dimension value for the ID of the advertiser. This is a read-only, auto-generated field.",
                    "type": "ref",
                    "refType": "DimensionValue"
                },
                {
                    "name": "advertiserId",
                    "desc": "Advertiser ID of the parent advertiser of this floodlight configuration.",
                    "type": "int64"
                },
                {
                    "name": "exposureToConversionEnabled",
                    "desc": "Whether the exposure-to-conversion report is enabled. This report shows detailed pathway information on up to 10 of the most recent ad exposures seen by a user before converting.",
                    "type": "bool"
                },
                {
                    "name": "naturalSearchConversionAttributionOption",
                    "desc": "Types of attribution options for natural search conversions.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "EXCLUDE_NATURAL_SEARCH_CONVERSION_ATTRIBUTION"
                        },
                        {
                            "name": "INCLUDE_NATURAL_SEARCH_CONVERSION_ATTRIBUTION"
                        },
                        {
                            "name": "INCLUDE_NATURAL_SEARCH_TIERED_CONVERSION_ATTRIBUTION"
                        }
                    ]
                },
                {
                    "name": "subaccountId",
                    "desc": "Subaccount ID of this floodlight configuration. This is a read-only field that can be left blank.",
                    "type": "int64"
                },
                {
                    "name": "accountId",
                    "desc": "Account ID of this floodlight configuration. This is a read-only field that can be left blank.",
                    "type": "int64"
                },
                {
                    "name": "lookbackConfiguration",
                    "desc": "Lookback window settings for this floodlight configuration.",
                    "type": "ref",
                    "refType": "LookbackConfiguration"
                },
                {
                    "name": "omnitureSettings",
                    "desc": "Settings for DCM Omniture integration.",
                    "type": "ref",
                    "refType": "OmnitureSettings"
                },
                {
                    "name": "standardVariableTypes",
                    "desc": "List of standard variables enabled for this configuration.\n\nAcceptable values are:\n- \"ORD\"\n- \"NUM\"",
                    "collection": "array",
                    "type": "string"
                },
                {
                    "name": "idDimensionValue",
                    "desc": "Dimension value for the ID of this floodlight configuration. This is a read-only, auto-generated field.",
                    "type": "ref",
                    "refType": "DimensionValue"
                },
                {
                    "name": "tagSettings",
                    "desc": "Configuration settings for dynamic and image floodlight tags.",
                    "type": "ref",
                    "refType": "TagSettings"
                },
                {
                    "name": "thirdPartyAuthenticationTokens",
                    "desc": "List of third-party authentication tokens enabled for this configuration.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "ThirdPartyAuthenticationToken"
                },
                {
                    "name": "id",
                    "desc": "ID of this floodlight configuration. This is a read-only, auto-generated field.",
                    "type": "int64"
                }
            ]
        },
        {
            "name": "PlacementAssignment",
            "desc": "Placement Assignment.",
            "type": "object",
            "fields": [
                {
                    "name": "active",
                    "desc": "Whether this placement assignment is active. When true, the placement will be included in the ad's rotation.",
                    "type": "bool"
                },
                {
                    "name": "placementId",
                    "desc": "ID of the placement to be assigned. This is a required field.",
                    "type": "int64"
                },
                {
                    "name": "placementIdDimensionValue",
                    "desc": "Dimension value for the ID of the placement. This is a read-only, auto-generated field.",
                    "type": "ref",
                    "refType": "DimensionValue"
                },
                {
                    "name": "sslRequired",
                    "desc": "Whether the placement to be assigned requires SSL. This is a read-only field that is auto-generated when the ad is inserted or updated.",
                    "type": "bool"
                }
            ]
        },
        {
            "name": "TargetableRemarketingListsListResponse",
            "desc": "Targetable remarketing list response",
            "type": "object",
            "fields": [
                {
                    "name": "nextPageToken",
                    "desc": "Pagination token to be used for the next list operation.",
                    "type": "string"
                },
                {
                    "name": "targetableRemarketingLists",
                    "desc": "Targetable remarketing list collection.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "TargetableRemarketingList"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#targetableRemarketingListsListResponse\".",
                    "type": "string",
                    "default": "dfareporting#targetableRemarketingListsListResponse"
                }
            ]
        },
        {
            "name": "DirectorySiteContactAssignment",
            "desc": "Directory Site Contact Assignment",
            "type": "object",
            "fields": [
                {
                    "name": "contactId",
                    "desc": "ID of this directory site contact. This is a read-only, auto-generated field.",
                    "type": "int64"
                },
                {
                    "name": "visibility",
                    "desc": "Visibility of this directory site contact assignment. When set to PUBLIC this contact assignment is visible to all account and agency users; when set to PRIVATE it is visible only to the site.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "PRIVATE"
                        },
                        {
                            "name": "PUBLIC"
                        }
                    ]
                }
            ]
        },
        {
            "name": "EventTagOverride",
            "desc": "Event tag override information.",
            "type": "object",
            "fields": [
                {
                    "name": "enabled",
                    "desc": "Whether this override is enabled.",
                    "type": "bool"
                },
                {
                    "name": "id",
                    "desc": "ID of this event tag override. This is a read-only, auto-generated field.",
                    "type": "int64"
                }
            ]
        },
        {
            "name": "LanguageTargeting",
            "desc": "Language Targeting.",
            "type": "object",
            "fields": [
                {
                    "name": "languages",
                    "desc": "Languages that this ad targets. For each language only languageId is required. The other fields are populated automatically when the ad is inserted or updated.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Language"
                }
            ]
        },
        {
            "name": "ListPopulationTerm",
            "desc": "Remarketing List Population Rule Term.",
            "type": "object",
            "fields": [
                {
                    "name": "type",
                    "desc": "List population term type determines the applicable fields in this object. If left unset or set to CUSTOM_VARIABLE_TERM, then variableName, variableFriendlyName, operator, value, and negation are applicable. If set to LIST_MEMBERSHIP_TERM then remarketingListId and contains are applicable. If set to REFERRER_TERM then operator, value, and negation are applicable.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "CUSTOM_VARIABLE_TERM"
                        },
                        {
                            "name": "LIST_MEMBERSHIP_TERM"
                        },
                        {
                            "name": "REFERRER_TERM"
                        }
                    ]
                },
                {
                    "name": "value",
                    "desc": "Literal to compare the variable to. This field is only relevant when type is left unset or set to CUSTOM_VARIABLE_TERM or REFERRER_TERM.",
                    "type": "string"
                },
                {
                    "name": "variableFriendlyName",
                    "desc": "Friendly name of this term's variable. This is a read-only, auto-generated field. This field is only relevant when type is left unset or set to CUSTOM_VARIABLE_TERM.",
                    "type": "string"
                },
                {
                    "name": "variableName",
                    "desc": "Name of the variable (U1, U2, etc.) being compared in this term. This field is only relevant when type is set to null, CUSTOM_VARIABLE_TERM or REFERRER_TERM.",
                    "type": "string"
                },
                {
                    "name": "contains",
                    "desc": "Will be true if the term should check if the user is in the list and false if the term should check if the user is not in the list. This field is only relevant when type is set to LIST_MEMBERSHIP_TERM. False by default.",
                    "type": "bool"
                },
                {
                    "name": "negation",
                    "desc": "Whether to negate the comparison result of this term during rule evaluation. This field is only relevant when type is left unset or set to CUSTOM_VARIABLE_TERM or REFERRER_TERM.",
                    "type": "bool"
                },
                {
                    "name": "operator",
                    "desc": "Comparison operator of this term. This field is only relevant when type is left unset or set to CUSTOM_VARIABLE_TERM or REFERRER_TERM.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "NUM_EQUALS"
                        },
                        {
                            "name": "NUM_GREATER_THAN"
                        },
                        {
                            "name": "NUM_GREATER_THAN_EQUAL"
                        },
                        {
                            "name": "NUM_LESS_THAN"
                        },
                        {
                            "name": "NUM_LESS_THAN_EQUAL"
                        },
                        {
                            "name": "STRING_CONTAINS"
                        },
                        {
                            "name": "STRING_EQUALS"
                        }
                    ]
                },
                {
                    "name": "remarketingListId",
                    "desc": "ID of the list in question. This field is only relevant when type is set to LIST_MEMBERSHIP_TERM.",
                    "type": "int64"
                }
            ]
        },
        {
            "name": "RemarketingListsListResponse",
            "desc": "Remarketing list response",
            "type": "object",
            "fields": [
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#remarketingListsListResponse\".",
                    "type": "string",
                    "default": "dfareporting#remarketingListsListResponse"
                },
                {
                    "name": "nextPageToken",
                    "desc": "Pagination token to be used for the next list operation.",
                    "type": "string"
                },
                {
                    "name": "remarketingLists",
                    "desc": "Remarketing list collection.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "RemarketingList"
                }
            ]
        },
        {
            "name": "ThirdPartyAuthenticationToken",
            "desc": "Third Party Authentication Token",
            "type": "object",
            "fields": [
                {
                    "name": "value",
                    "desc": "Value of the third-party authentication token. This is a read-only, auto-generated field.",
                    "type": "string"
                },
                {
                    "name": "name",
                    "desc": "Name of the third-party authentication token.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "KeyValueTargetingExpression",
            "desc": "Key Value Targeting Expression.",
            "type": "object",
            "fields": [
                {
                    "name": "expression",
                    "desc": "Keyword expression being targeted by the ad.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "RemarketingListShare",
            "desc": "Contains properties of a remarketing list's sharing information. Sharing allows other accounts or advertisers to target to your remarketing lists. This resource can be used to manage remarketing list sharing to other accounts and advertisers.",
            "type": "object",
            "fields": [
                {
                    "name": "sharedAccountIds",
                    "desc": "Accounts that the remarketing list is shared with.",
                    "collection": "array",
                    "type": "int64"
                },
                {
                    "name": "sharedAdvertiserIds",
                    "desc": "Advertisers that the remarketing list is shared with.",
                    "collection": "array",
                    "type": "int64"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#remarketingListShare\".",
                    "type": "string",
                    "default": "dfareporting#remarketingListShare"
                },
                {
                    "name": "remarketingListId",
                    "desc": "Remarketing list ID. This is a read-only, auto-generated field.",
                    "type": "int64"
                }
            ]
        },
        {
            "name": "UserRolePermissionGroup",
            "desc": "Represents a grouping of related user role permissions.",
            "type": "object",
            "fields": [
                {
                    "name": "id",
                    "desc": "ID of this user role permission.",
                    "type": "int64"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#userRolePermissionGroup\".",
                    "type": "string",
                    "default": "dfareporting#userRolePermissionGroup"
                },
                {
                    "name": "name",
                    "desc": "Name of this user role permission group.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "Country",
            "desc": "Contains information about a country that can be targeted by ads.",
            "type": "object",
            "fields": [
                {
                    "name": "countryCode",
                    "desc": "Country code.",
                    "type": "string"
                },
                {
                    "name": "dartId",
                    "desc": "DART ID of this country. This is the ID used for targeting and generating reports.",
                    "type": "int64"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#country\".",
                    "type": "string",
                    "default": "dfareporting#country"
                },
                {
                    "name": "name",
                    "desc": "Name of this country.",
                    "type": "string"
                },
                {
                    "name": "sslEnabled",
                    "desc": "Whether ad serving supports secure servers in this country.",
                    "type": "bool"
                }
            ]
        },
        {
            "name": "CreativeFieldsListResponse",
            "desc": "Creative Field List Response",
            "type": "object",
            "fields": [
                {
                    "name": "creativeFields",
                    "desc": "Creative field collection.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "CreativeField"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#creativeFieldsListResponse\".",
                    "type": "string",
                    "default": "dfareporting#creativeFieldsListResponse"
                },
                {
                    "name": "nextPageToken",
                    "desc": "Pagination token to be used for the next list operation.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "OrderDocument",
            "desc": "Contains properties of a DoubleClick Planning order document.",
            "type": "object",
            "fields": [
                {
                    "name": "createdInfo",
                    "desc": "Information about the creation of this order document.",
                    "type": "ref",
                    "refType": "LastModifiedInfo"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#orderDocument\".",
                    "type": "string",
                    "default": "dfareporting#orderDocument"
                },
                {
                    "name": "title",
                    "desc": "Title of this order document.",
                    "type": "string"
                },
                {
                    "name": "advertiserId",
                    "desc": "Advertiser ID of this order document.",
                    "type": "int64"
                },
                {
                    "name": "cancelled",
                    "desc": "Whether this order document is cancelled.",
                    "type": "bool"
                },
                {
                    "name": "lastSentTime",
                    "desc": "Timestamp of the last email sent with this order document.",
                    "type": "datetime"
                },
                {
                    "name": "orderId",
                    "desc": "ID of the order from which this order document is created.",
                    "type": "int64"
                },
                {
                    "name": "lastSentRecipients",
                    "desc": "List of email addresses that received the last sent document.",
                    "collection": "array",
                    "type": "string"
                },
                {
                    "name": "signed",
                    "desc": "Whether this order document has been signed.",
                    "type": "bool"
                },
                {
                    "name": "type",
                    "desc": "Type of this order document",
                    "type": "string",
                    "enum": [
                        {
                            "name": "PLANNING_ORDER_TYPE_CHANGE_ORDER"
                        },
                        {
                            "name": "PLANNING_ORDER_TYPE_INSERTION_ORDER"
                        }
                    ]
                },
                {
                    "name": "id",
                    "desc": "ID of this order document.",
                    "type": "int64"
                },
                {
                    "name": "projectId",
                    "desc": "Project ID of this order document.",
                    "type": "int64"
                },
                {
                    "name": "subaccountId",
                    "desc": "Subaccount ID of this order document.",
                    "type": "int64"
                },
                {
                    "name": "accountId",
                    "desc": "Account ID of this order document.",
                    "type": "int64"
                },
                {
                    "name": "amendedOrderDocumentId",
                    "desc": "The amended order document ID of this order document. An order document can be created by optionally amending another order document so that the change history can be preserved.",
                    "type": "int64"
                },
                {
                    "name": "approvedByUserProfileIds",
                    "desc": "IDs of users who have approved this order document.",
                    "collection": "array",
                    "type": "int64"
                },
                {
                    "name": "effectiveDate",
                    "desc": "Effective date of this order document.",
                    "type": "date"
                }
            ]
        },
        {
            "name": "PopupWindowProperties",
            "desc": "Popup Window Properties.",
            "type": "object",
            "fields": [
                {
                    "name": "showMenuBar",
                    "desc": "Whether to display the browser menu bar.",
                    "type": "bool"
                },
                {
                    "name": "showScrollBar",
                    "desc": "Whether to display the browser scroll bar.",
                    "type": "bool"
                },
                {
                    "name": "showStatusBar",
                    "desc": "Whether to display the browser status bar.",
                    "type": "bool"
                },
                {
                    "name": "showToolBar",
                    "desc": "Whether to display the browser tool bar.",
                    "type": "bool"
                },
                {
                    "name": "title",
                    "desc": "Title of popup window.",
                    "type": "string"
                },
                {
                    "name": "dimension",
                    "desc": "Popup dimension for a creative. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA and all VPAID",
                    "type": "ref",
                    "refType": "Size"
                },
                {
                    "name": "offset",
                    "desc": "Upper-left corner coordinates of the popup window. Applicable if positionType is COORDINATES.",
                    "type": "ref",
                    "refType": "OffsetPosition"
                },
                {
                    "name": "positionType",
                    "desc": "Popup window position either centered or at specific coordinate.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "CENTER"
                        },
                        {
                            "name": "COORDINATES"
                        }
                    ]
                },
                {
                    "name": "showAddressBar",
                    "desc": "Whether to display the browser address bar.",
                    "type": "bool"
                }
            ]
        },
        {
            "name": "Rule",
            "desc": "A rule associates an asset with a targeting template for asset-level targeting. Applicable to INSTREAM_VIDEO creatives.",
            "type": "object",
            "fields": [
                {
                    "name": "assetId",
                    "desc": "A creativeAssets[].id. This should refer to one of the parent assets in this creative. This is a required field.",
                    "type": "int64"
                },
                {
                    "name": "name",
                    "desc": "A user-friendly name for this rule. This is a required field.",
                    "type": "string"
                },
                {
                    "name": "targetingTemplateId",
                    "desc": "A targeting template ID. The targeting from the targeting template will be used to determine whether this asset should be served. This is a required field.",
                    "type": "int64"
                }
            ]
        },
        {
            "name": "ConversionsBatchInsertResponse",
            "desc": "Insert Conversions Response.",
            "type": "object",
            "fields": [
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#conversionsBatchInsertResponse\".",
                    "type": "string",
                    "default": "dfareporting#conversionsBatchInsertResponse"
                },
                {
                    "name": "status",
                    "desc": "The status of each conversion's insertion status. The status is returned in the same order that conversions are inserted.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "ConversionStatus"
                },
                {
                    "name": "hasFailures",
                    "desc": "Indicates that some or all conversions failed to insert.",
                    "type": "bool"
                }
            ]
        },
        {
            "name": "DefaultClickThroughEventTagProperties",
            "desc": "Properties of inheriting and overriding the default click-through event tag. A campaign may override the event tag defined at the advertiser level, and an ad may also override the campaign's setting further.",
            "type": "object",
            "fields": [
                {
                    "name": "defaultClickThroughEventTagId",
                    "desc": "ID of the click-through event tag to apply to all ads in this entity's scope.",
                    "type": "int64"
                },
                {
                    "name": "overrideInheritedEventTag",
                    "desc": "Whether this entity should override the inherited default click-through event tag with its own defined value.",
                    "type": "bool"
                }
            ]
        },
        {
            "name": "DirectorySiteContact",
            "desc": "Contains properties of a Site Directory contact.",
            "type": "object",
            "fields": [
                {
                    "name": "firstName",
                    "desc": "First name of this directory site contact.",
                    "type": "string"
                },
                {
                    "name": "role",
                    "desc": "Directory site contact role.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "ADMIN"
                        },
                        {
                            "name": "EDIT"
                        },
                        {
                            "name": "VIEW"
                        }
                    ]
                },
                {
                    "name": "phone",
                    "desc": "Phone number of this directory site contact.",
                    "type": "string"
                },
                {
                    "name": "title",
                    "desc": "Title or designation of this directory site contact.",
                    "type": "string"
                },
                {
                    "name": "type",
                    "desc": "Directory site contact type.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "BILLING"
                        },
                        {
                            "name": "OTHER"
                        },
                        {
                            "name": "SALES"
                        },
                        {
                            "name": "TECHNICAL"
                        }
                    ]
                },
                {
                    "name": "address",
                    "desc": "Address of this directory site contact.",
                    "type": "string"
                },
                {
                    "name": "email",
                    "desc": "Email address of this directory site contact.",
                    "type": "string"
                },
                {
                    "name": "id",
                    "desc": "ID of this directory site contact. This is a read-only, auto-generated field.",
                    "type": "int64"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#directorySiteContact\".",
                    "type": "string",
                    "default": "dfareporting#directorySiteContact"
                },
                {
                    "name": "lastName",
                    "desc": "Last name of this directory site contact.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "DirectorySiteContactsListResponse",
            "desc": "Directory Site Contact List Response",
            "type": "object",
            "fields": [
                {
                    "name": "directorySiteContacts",
                    "desc": "Directory site contact collection",
                    "collection": "array",
                    "type": "ref",
                    "refType": "DirectorySiteContact"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#directorySiteContactsListResponse\".",
                    "type": "string",
                    "default": "dfareporting#directorySiteContactsListResponse"
                },
                {
                    "name": "nextPageToken",
                    "desc": "Pagination token to be used for the next list operation.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "MetrosListResponse",
            "desc": "Metro List Response",
            "type": "object",
            "fields": [
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#metrosListResponse\".",
                    "type": "string",
                    "default": "dfareporting#metrosListResponse"
                },
                {
                    "name": "metros",
                    "desc": "Metro collection.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Metro"
                }
            ]
        },
        {
            "name": "Project",
            "desc": "Contains properties of a DoubleClick Planning project.",
            "type": "object",
            "fields": [
                {
                    "name": "overview",
                    "desc": "Overview of this project.",
                    "type": "string"
                },
                {
                    "name": "startDate",
                    "desc": "Start date of the project.",
                    "type": "date"
                },
                {
                    "name": "subaccountId",
                    "desc": "Subaccount ID of this project.",
                    "type": "int64"
                },
                {
                    "name": "audienceAgeGroup",
                    "desc": "Audience age group of this project.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "PLANNING_AUDIENCE_AGE_18_24"
                        },
                        {
                            "name": "PLANNING_AUDIENCE_AGE_25_34"
                        },
                        {
                            "name": "PLANNING_AUDIENCE_AGE_35_44"
                        },
                        {
                            "name": "PLANNING_AUDIENCE_AGE_45_54"
                        },
                        {
                            "name": "PLANNING_AUDIENCE_AGE_55_64"
                        },
                        {
                            "name": "PLANNING_AUDIENCE_AGE_65_OR_MORE"
                        },
                        {
                            "name": "PLANNING_AUDIENCE_AGE_UNKNOWN"
                        }
                    ]
                },
                {
                    "name": "audienceGender",
                    "desc": "Audience gender of this project.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "PLANNING_AUDIENCE_GENDER_FEMALE"
                        },
                        {
                            "name": "PLANNING_AUDIENCE_GENDER_MALE"
                        }
                    ]
                },
                {
                    "name": "budget",
                    "desc": "Budget of this project in the currency specified by the current account. The value stored in this field represents only the non-fractional amount. For example, for USD, the smallest value that can be represented by this field is 1 US dollar.",
                    "type": "int64"
                },
                {
                    "name": "clientBillingCode",
                    "desc": "Client billing code of this project.",
                    "type": "string"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#project\".",
                    "type": "string",
                    "default": "dfareporting#project"
                },
                {
                    "name": "targetClicks",
                    "desc": "Number of clicks that the advertiser is targeting.",
                    "type": "int64"
                },
                {
                    "name": "targetCpaNanos",
                    "desc": "CPA that the advertiser is targeting.",
                    "type": "int64"
                },
                {
                    "name": "targetCpmNanos",
                    "desc": "CPM that the advertiser is targeting.",
                    "type": "int64"
                },
                {
                    "name": "targetImpressions",
                    "desc": "Number of impressions that the advertiser is targeting.",
                    "type": "int64"
                },
                {
                    "name": "advertiserId",
                    "desc": "Advertiser ID of this project.",
                    "type": "int64"
                },
                {
                    "name": "clientName",
                    "desc": "Name of the project client.",
                    "type": "string"
                },
                {
                    "name": "endDate",
                    "desc": "End date of the project.",
                    "type": "date"
                },
                {
                    "name": "lastModifiedInfo",
                    "desc": "Information about the most recent modification of this project.",
                    "type": "ref",
                    "refType": "LastModifiedInfo"
                },
                {
                    "name": "name",
                    "desc": "Name of this project.",
                    "type": "string"
                },
                {
                    "name": "accountId",
                    "desc": "Account ID of this project.",
                    "type": "int64"
                },
                {
                    "name": "id",
                    "desc": "ID of this project. This is a read-only, auto-generated field.",
                    "type": "int64"
                },
                {
                    "name": "targetConversions",
                    "desc": "Number of conversions that the advertiser is targeting.",
                    "type": "int64"
                },
                {
                    "name": "targetCpcNanos",
                    "desc": "CPC that the advertiser is targeting.",
                    "type": "int64"
                },
                {
                    "name": "targetCpmActiveViewNanos",
                    "desc": "vCPM from Active View that the advertiser is targeting.",
                    "type": "int64"
                }
            ]
        },
        {
            "name": "Region",
            "desc": "Contains information about a region that can be targeted by ads.",
            "type": "object",
            "fields": [
                {
                    "name": "countryDartId",
                    "desc": "DART ID of the country to which this region belongs.",
                    "type": "int64"
                },
                {
                    "name": "dartId",
                    "desc": "DART ID of this region.",
                    "type": "int64"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#region\".",
                    "type": "string",
                    "default": "dfareporting#region"
                },
                {
                    "name": "name",
                    "desc": "Name of this region.",
                    "type": "string"
                },
                {
                    "name": "regionCode",
                    "desc": "Region code.",
                    "type": "string"
                },
                {
                    "name": "countryCode",
                    "desc": "Country code of the country to which this region belongs.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "UserProfileList",
            "desc": "Represents the list of user profiles.",
            "type": "object",
            "fields": [
                {
                    "name": "kind",
                    "desc": "The kind of list this is, in this case dfareporting#userProfileList.",
                    "type": "string",
                    "default": "dfareporting#userProfileList"
                },
                {
                    "name": "etag",
                    "desc": "The eTag of this response for caching purposes.",
                    "type": "string"
                },
                {
                    "name": "items",
                    "desc": "The user profiles returned in this response.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "UserProfile"
                }
            ]
        },
        {
            "name": "UserRole",
            "desc": "Contains properties of auser role, which is used to manage user access.",
            "type": "object",
            "fields": [
                {
                    "name": "name",
                    "desc": "Name of this user role. This is a required field. Must be less than 256 characters long. If this user role is under a subaccount, the name must be unique among sites of the same subaccount. Otherwise, this user role is a top-level user role, and the name must be unique among top-level user roles of the same account.",
                    "type": "string"
                },
                {
                    "name": "parentUserRoleId",
                    "desc": "ID of the user role that this user role is based on or copied from. This is a required field.",
                    "type": "int64"
                },
                {
                    "name": "permissions",
                    "desc": "List of permissions associated with this user role.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "UserRolePermission"
                },
                {
                    "name": "subaccountId",
                    "desc": "Subaccount ID of this user role. This is a read-only field that can be left blank.",
                    "type": "int64"
                },
                {
                    "name": "accountId",
                    "desc": "Account ID of this user role. This is a read-only field that can be left blank.",
                    "type": "int64"
                },
                {
                    "name": "defaultUserRole",
                    "desc": "Whether this is a default user role. Default user roles are created by the system for the account/subaccount and cannot be modified or deleted. Each default user role comes with a basic set of preassigned permissions.",
                    "type": "bool"
                },
                {
                    "name": "id",
                    "desc": "ID of this user role. This is a read-only, auto-generated field.",
                    "type": "int64"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#userRole\".",
                    "type": "string",
                    "default": "dfareporting#userRole"
                }
            ]
        },
        {
            "name": "AccountActiveAdSummary",
            "desc": "Gets a summary of active ads in an account.",
            "type": "object",
            "fields": [
                {
                    "name": "accountId",
                    "desc": "ID of the account.",
                    "type": "int64"
                },
                {
                    "name": "activeAds",
                    "desc": "Ads that have been activated for the account",
                    "type": "int64"
                },
                {
                    "name": "activeAdsLimitTier",
                    "desc": "Maximum number of active ads allowed for the account.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "ACTIVE_ADS_TIER_100K"
                        },
                        {
                            "name": "ACTIVE_ADS_TIER_200K"
                        },
                        {
                            "name": "ACTIVE_ADS_TIER_300K"
                        },
                        {
                            "name": "ACTIVE_ADS_TIER_40K"
                        },
                        {
                            "name": "ACTIVE_ADS_TIER_500K"
                        },
                        {
                            "name": "ACTIVE_ADS_TIER_750K"
                        },
                        {
                            "name": "ACTIVE_ADS_TIER_75K"
                        }
                    ]
                },
                {
                    "name": "availableAds",
                    "desc": "Ads that can be activated for the account.",
                    "type": "int64"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#accountActiveAdSummary\".",
                    "type": "string",
                    "default": "dfareporting#accountActiveAdSummary"
                }
            ]
        },
        {
            "name": "DimensionFilter",
            "desc": "Represents a dimension filter.",
            "type": "object",
            "fields": [
                {
                    "name": "dimensionName",
                    "desc": "The name of the dimension to filter.",
                    "type": "string"
                },
                {
                    "name": "kind",
                    "desc": "The kind of resource this is, in this case dfareporting#dimensionFilter.",
                    "type": "string",
                    "default": "dfareporting#dimensionFilter"
                },
                {
                    "name": "value",
                    "desc": "The value of the dimension to filter.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "LanguagesListResponse",
            "desc": "Language List Response",
            "type": "object",
            "fields": [
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#languagesListResponse\".",
                    "type": "string",
                    "default": "dfareporting#languagesListResponse"
                },
                {
                    "name": "languages",
                    "desc": "Language collection.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Language"
                }
            ]
        },
        {
            "name": "MobileCarrier",
            "desc": "Contains information about a mobile carrier that can be targeted by ads.",
            "type": "object",
            "fields": [
                {
                    "name": "countryCode",
                    "desc": "Country code of the country to which this mobile carrier belongs.",
                    "type": "string"
                },
                {
                    "name": "countryDartId",
                    "desc": "DART ID of the country to which this mobile carrier belongs.",
                    "type": "int64"
                },
                {
                    "name": "id",
                    "desc": "ID of this mobile carrier.",
                    "type": "int64"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#mobileCarrier\".",
                    "type": "string",
                    "default": "dfareporting#mobileCarrier"
                },
                {
                    "name": "name",
                    "desc": "Name of this mobile carrier.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "PricingSchedulePricingPeriod",
            "desc": "Pricing Period",
            "type": "object",
            "fields": [
                {
                    "name": "startDate",
                    "desc": "Pricing period start date. This date must be later than, or the same day as, the placement start date. The hours, minutes, and seconds of the start date should not be set, as doing so will result in an error.",
                    "type": "date"
                },
                {
                    "name": "units",
                    "desc": "Units of this pricing period.",
                    "type": "int64"
                },
                {
                    "name": "endDate",
                    "desc": "Pricing period end date. This date must be later than, or the same day as, the pricing period start date, but not later than the placement end date. The period end date can be the same date as the period start date. If, for example, you set 6/25/2015 as both the start and end dates, the effective pricing period date is just that day only, 6/25/2015. The hours, minutes, and seconds of the end date should not be set, as doing so will result in an error.",
                    "type": "date"
                },
                {
                    "name": "pricingComment",
                    "desc": "Comments for this pricing period.",
                    "type": "string"
                },
                {
                    "name": "rateOrCostNanos",
                    "desc": "Rate or cost of this pricing period.",
                    "type": "int64"
                }
            ]
        },
        {
            "name": "SiteContact",
            "desc": "Site Contact",
            "type": "object",
            "fields": [
                {
                    "name": "contactType",
                    "desc": "Site contact type.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "SALES_PERSON"
                        },
                        {
                            "name": "TRAFFICKER"
                        }
                    ]
                },
                {
                    "name": "email",
                    "desc": "Email address of this site contact. This is a required field.",
                    "type": "string"
                },
                {
                    "name": "firstName",
                    "desc": "First name of this site contact.",
                    "type": "string"
                },
                {
                    "name": "id",
                    "desc": "ID of this site contact. This is a read-only, auto-generated field.",
                    "type": "int64"
                },
                {
                    "name": "lastName",
                    "desc": "Last name of this site contact.",
                    "type": "string"
                },
                {
                    "name": "phone",
                    "desc": "Primary phone number of this site contact.",
                    "type": "string"
                },
                {
                    "name": "title",
                    "desc": "Title or designation of this site contact.",
                    "type": "string"
                },
                {
                    "name": "address",
                    "desc": "Address of this site contact.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "TagSettings",
            "desc": "Dynamic and Image Tag Settings.",
            "type": "object",
            "fields": [
                {
                    "name": "dynamicTagEnabled",
                    "desc": "Whether dynamic floodlight tags are enabled.",
                    "type": "bool"
                },
                {
                    "name": "imageTagEnabled",
                    "desc": "Whether image tags are enabled.",
                    "type": "bool"
                }
            ]
        },
        {
            "name": "OmnitureSettings",
            "desc": "Omniture Integration Settings.",
            "type": "object",
            "fields": [
                {
                    "name": "omnitureCostDataEnabled",
                    "desc": "Whether placement cost data will be sent to Omniture. This property can be enabled only if omnitureIntegrationEnabled is true.",
                    "type": "bool"
                },
                {
                    "name": "omnitureIntegrationEnabled",
                    "desc": "Whether Omniture integration is enabled. This property can be enabled only when the \"Advanced Ad Serving\" account setting is enabled.",
                    "type": "bool"
                }
            ]
        },
        {
            "name": "AccountPermissionsListResponse",
            "desc": "Account Permission List Response",
            "type": "object",
            "fields": [
                {
                    "name": "accountPermissions",
                    "desc": "Account permission collection.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "AccountPermission"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#accountPermissionsListResponse\".",
                    "type": "string",
                    "default": "dfareporting#accountPermissionsListResponse"
                }
            ]
        },
        {
            "name": "Advertiser",
            "desc": "Contains properties of a DCM advertiser.",
            "type": "object",
            "fields": [
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#advertiser\".",
                    "type": "string",
                    "default": "dfareporting#advertiser"
                },
                {
                    "name": "id",
                    "desc": "ID of this advertiser. This is a read-only, auto-generated field.",
                    "type": "int64"
                },
                {
                    "name": "subaccountId",
                    "desc": "Subaccount ID of this advertiser.This is a read-only field that can be left blank.",
                    "type": "int64"
                },
                {
                    "name": "suspended",
                    "desc": "Suspension status of this advertiser.",
                    "type": "bool"
                },
                {
                    "name": "originalFloodlightConfigurationId",
                    "desc": "Original floodlight configuration before any sharing occurred. Set the floodlightConfigurationId of this advertiser to originalFloodlightConfigurationId to unshare the advertiser's current floodlight configuration. You cannot unshare an advertiser's floodlight configuration if the shared configuration has activities associated with any campaign or placement.",
                    "type": "int64"
                },
                {
                    "name": "floodlightConfigurationId",
                    "desc": "Floodlight configuration ID of this advertiser. The floodlight configuration ID will be created automatically, so on insert this field should be left blank. This field can be set to another advertiser's floodlight configuration ID in order to share that advertiser's floodlight configuration with this advertiser, so long as: \n- This advertiser's original floodlight configuration is not already associated with floodlight activities or floodlight activity groups. \n- This advertiser's original floodlight configuration is not already shared with another advertiser.",
                    "type": "int64"
                },
                {
                    "name": "status",
                    "desc": "Status of this advertiser.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "APPROVED"
                        },
                        {
                            "name": "ON_HOLD"
                        }
                    ]
                },
                {
                    "name": "defaultClickThroughEventTagId",
                    "desc": "ID of the click-through event tag to apply by default to the landing pages of this advertiser's campaigns.",
                    "type": "int64"
                },
                {
                    "name": "advertiserGroupId",
                    "desc": "ID of the advertiser group this advertiser belongs to. You can group advertisers for reporting purposes, allowing you to see aggregated information for all advertisers in each group.",
                    "type": "int64"
                },
                {
                    "name": "clickThroughUrlSuffix",
                    "desc": "Suffix added to click-through URL of ad creative associations under this advertiser. Must be less than 129 characters long.",
                    "type": "string"
                },
                {
                    "name": "defaultEmail",
                    "desc": "Default email address used in sender field for tag emails.",
                    "type": "string"
                },
                {
                    "name": "floodlightConfigurationIdDimensionValue",
                    "desc": "Dimension value for the ID of the floodlight configuration. This is a read-only, auto-generated field.",
                    "type": "ref",
                    "refType": "DimensionValue"
                },
                {
                    "name": "idDimensionValue",
                    "desc": "Dimension value for the ID of this advertiser. This is a read-only, auto-generated field.",
                    "type": "ref",
                    "refType": "DimensionValue"
                },
                {
                    "name": "name",
                    "desc": "Name of this advertiser. This is a required field and must be less than 256 characters long and unique among advertisers of the same account.",
                    "type": "string"
                },
                {
                    "name": "accountId",
                    "desc": "Account ID of this advertiser.This is a read-only field that can be left blank.",
                    "type": "int64"
                }
            ]
        },
        {
            "name": "BrowsersListResponse",
            "desc": "Browser List Response",
            "type": "object",
            "fields": [
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#browsersListResponse\".",
                    "type": "string",
                    "default": "dfareporting#browsersListResponse"
                },
                {
                    "name": "browsers",
                    "desc": "Browser collection.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Browser"
                }
            ]
        },
        {
            "name": "Campaign",
            "desc": "Contains properties of a DCM campaign.",
            "type": "object",
            "fields": [
                {
                    "name": "startDate",
                    "desc": "Date on which the campaign starts running. The start date can be any date. The hours, minutes, and seconds of the start date should not be set, as doing so will result in an error. This is a required field.",
                    "type": "date"
                },
                {
                    "name": "additionalCreativeOptimizationConfigurations",
                    "desc": "Additional creative optimization configurations for the campaign.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "CreativeOptimizationConfiguration"
                },
                {
                    "name": "createInfo",
                    "desc": "Information about the creation of this campaign. This is a read-only field.",
                    "type": "ref",
                    "refType": "LastModifiedInfo"
                },
                {
                    "name": "advertiserId",
                    "desc": "Advertiser ID of this campaign. This is a required field.",
                    "type": "int64"
                },
                {
                    "name": "archived",
                    "desc": "Whether this campaign has been archived.",
                    "type": "bool"
                },
                {
                    "name": "billingInvoiceCode",
                    "desc": "Billing invoice code included in the DCM client billing invoices associated with the campaign.",
                    "type": "string"
                },
                {
                    "name": "comment",
                    "desc": "Arbitrary comments about this campaign. Must be less than 256 characters long.",
                    "type": "string"
                },
                {
                    "name": "creativeOptimizationConfiguration",
                    "desc": "Creative optimization configuration for the campaign.",
                    "type": "ref",
                    "refType": "CreativeOptimizationConfiguration"
                },
                {
                    "name": "defaultClickThroughEventTagProperties",
                    "desc": "Click-through event tag ID override properties for this campaign.",
                    "type": "ref",
                    "refType": "DefaultClickThroughEventTagProperties"
                },
                {
                    "name": "eventTagOverrides",
                    "desc": "Overrides that can be used to activate or deactivate advertiser event tags.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "EventTagOverride"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#campaign\".",
                    "type": "string",
                    "default": "dfareporting#campaign"
                },
                {
                    "name": "advertiserGroupId",
                    "desc": "Advertiser group ID of the associated advertiser.",
                    "type": "int64"
                },
                {
                    "name": "accountId",
                    "desc": "Account ID of this campaign. This is a read-only field that can be left blank.",
                    "type": "int64"
                },
                {
                    "name": "id",
                    "desc": "ID of this campaign. This is a read-only auto-generated field.",
                    "type": "int64"
                },
                {
                    "name": "nielsenOcrEnabled",
                    "desc": "Whether Nielsen reports are enabled for this campaign.",
                    "type": "bool"
                },
                {
                    "name": "advertiserIdDimensionValue",
                    "desc": "Dimension value for the advertiser ID of this campaign. This is a read-only, auto-generated field.",
                    "type": "ref",
                    "refType": "DimensionValue"
                },
                {
                    "name": "creativeGroupIds",
                    "desc": "List of creative group IDs that are assigned to the campaign.",
                    "collection": "array",
                    "type": "int64"
                },
                {
                    "name": "externalId",
                    "desc": "External ID for this campaign.",
                    "type": "string"
                },
                {
                    "name": "idDimensionValue",
                    "desc": "Dimension value for the ID of this campaign. This is a read-only, auto-generated field.",
                    "type": "ref",
                    "refType": "DimensionValue"
                },
                {
                    "name": "clickThroughUrlSuffixProperties",
                    "desc": "Click-through URL suffix override properties for this campaign.",
                    "type": "ref",
                    "refType": "ClickThroughUrlSuffixProperties"
                },
                {
                    "name": "endDate",
                    "desc": "Date on which the campaign will stop running. On insert, the end date must be today or a future date. The end date must be later than or be the same as the start date. If, for example, you set 6/25/2015 as both the start and end dates, the effective campaign run date is just that day only, 6/25/2015. The hours, minutes, and seconds of the end date should not be set, as doing so will result in an error. This is a required field.",
                    "type": "date"
                },
                {
                    "name": "lookbackConfiguration",
                    "desc": "Lookback window settings for the campaign.",
                    "type": "ref",
                    "refType": "LookbackConfiguration"
                },
                {
                    "name": "subaccountId",
                    "desc": "Subaccount ID of this campaign. This is a read-only field that can be left blank.",
                    "type": "int64"
                },
                {
                    "name": "traffickerEmails",
                    "desc": "Campaign trafficker contact emails.",
                    "collection": "array",
                    "type": "string"
                },
                {
                    "name": "audienceSegmentGroups",
                    "desc": "Audience segment groups assigned to this campaign. Cannot have more than 300 segment groups.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "AudienceSegmentGroup"
                },
                {
                    "name": "lastModifiedInfo",
                    "desc": "Information about the most recent modification of this campaign. This is a read-only field.",
                    "type": "ref",
                    "refType": "LastModifiedInfo"
                },
                {
                    "name": "name",
                    "desc": "Name of this campaign. This is a required field and must be less than 256 characters long and unique among campaigns of the same advertiser.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "CompatibleFields",
            "desc": "Represents a response to the queryCompatibleFields method.",
            "type": "object",
            "fields": [
                {
                    "name": "pathToConversionReportCompatibleFields",
                    "desc": "Contains items that are compatible to be selected for a report of type \"PATH_TO_CONVERSION\".",
                    "type": "ref",
                    "refType": "PathToConversionReportCompatibleFields"
                },
                {
                    "name": "reachReportCompatibleFields",
                    "desc": "Contains items that are compatible to be selected for a report of type \"REACH\".",
                    "type": "ref",
                    "refType": "ReachReportCompatibleFields"
                },
                {
                    "name": "reportCompatibleFields",
                    "desc": "Contains items that are compatible to be selected for a report of type \"STANDARD\".",
                    "type": "ref",
                    "refType": "ReportCompatibleFields"
                },
                {
                    "name": "crossDimensionReachReportCompatibleFields",
                    "desc": "Contains items that are compatible to be selected for a report of type \"CROSS_DIMENSION_REACH\".",
                    "type": "ref",
                    "refType": "CrossDimensionReachReportCompatibleFields"
                },
                {
                    "name": "floodlightReportCompatibleFields",
                    "desc": "Contains items that are compatible to be selected for a report of type \"FLOODLIGHT\".",
                    "type": "ref",
                    "refType": "FloodlightReportCompatibleFields"
                },
                {
                    "name": "kind",
                    "desc": "The kind of resource this is, in this case dfareporting#compatibleFields.",
                    "type": "string",
                    "default": "dfareporting#compatibleFields"
                }
            ]
        },
        {
            "name": "ConversionsBatchInsertRequest",
            "desc": "Insert Conversions Request.",
            "type": "object",
            "fields": [
                {
                    "name": "conversions",
                    "desc": "The set of conversions to insert.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Conversion"
                },
                {
                    "name": "encryptionInfo",
                    "desc": "Describes how encryptedUserId or encryptedUserIdCandidates[] is encrypted. This is a required field if encryptedUserId or encryptedUserIdCandidates[] is used.",
                    "type": "ref",
                    "refType": "EncryptionInfo"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#conversionsBatchInsertRequest\".",
                    "type": "string",
                    "default": "dfareporting#conversionsBatchInsertRequest"
                }
            ]
        },
        {
            "name": "EventTagsListResponse",
            "desc": "Event Tag List Response",
            "type": "object",
            "fields": [
                {
                    "name": "eventTags",
                    "desc": "Event tag collection.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "EventTag"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#eventTagsListResponse\".",
                    "type": "string",
                    "default": "dfareporting#eventTagsListResponse"
                }
            ]
        },
        {
            "name": "OptimizationActivity",
            "desc": "Creative optimization activity.",
            "type": "object",
            "fields": [
                {
                    "name": "floodlightActivityId",
                    "desc": "Floodlight activity ID of this optimization activity. This is a required field.",
                    "type": "int64"
                },
                {
                    "name": "floodlightActivityIdDimensionValue",
                    "desc": "Dimension value for the ID of the floodlight activity. This is a read-only, auto-generated field.",
                    "type": "ref",
                    "refType": "DimensionValue"
                },
                {
                    "name": "weight",
                    "desc": "Weight associated with this optimization. Must be greater than 1. The weight assigned will be understood in proportion to the weights assigned to the other optimization activities.",
                    "type": "int32"
                }
            ]
        },
        {
            "name": "Subaccount",
            "desc": "Contains properties of a DCM subaccount.",
            "type": "object",
            "fields": [
                {
                    "name": "accountId",
                    "desc": "ID of the account that contains this subaccount. This is a read-only field that can be left blank.",
                    "type": "int64"
                },
                {
                    "name": "availablePermissionIds",
                    "desc": "IDs of the available user role permissions for this subaccount.",
                    "collection": "array",
                    "type": "int64"
                },
                {
                    "name": "id",
                    "desc": "ID of this subaccount. This is a read-only, auto-generated field.",
                    "type": "int64"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#subaccount\".",
                    "type": "string",
                    "default": "dfareporting#subaccount"
                },
                {
                    "name": "name",
                    "desc": "Name of this subaccount. This is a required field. Must be less than 128 characters long and be unique among subaccounts of the same account.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "Ad",
            "desc": "Contains properties of a DCM ad.",
            "type": "object",
            "fields": [
                {
                    "name": "sslCompliant",
                    "desc": "Whether this ad is ssl compliant. This is a read-only field that is auto-generated when the ad is inserted or updated.",
                    "type": "bool"
                },
                {
                    "name": "startTime",
                    "desc": "Date and time that this ad should start serving. If creating an ad, this field must be a time in the future. This is a required field on insertion.",
                    "type": "datetime"
                },
                {
                    "name": "type",
                    "desc": "Type of ad. This is a required field on insertion. Note that default ads (AD_SERVING_DEFAULT_AD) cannot be created directly (see Creative resource).",
                    "type": "string",
                    "enum": [
                        {
                            "name": "AD_SERVING_CLICK_TRACKER"
                        },
                        {
                            "name": "AD_SERVING_DEFAULT_AD"
                        },
                        {
                            "name": "AD_SERVING_STANDARD_AD"
                        },
                        {
                            "name": "AD_SERVING_TRACKING"
                        }
                    ]
                },
                {
                    "name": "active",
                    "desc": "Whether this ad is active. When true, archived must be false.",
                    "type": "bool"
                },
                {
                    "name": "defaultClickThroughEventTagProperties",
                    "desc": "Default click-through event tag properties for this ad.",
                    "type": "ref",
                    "refType": "DefaultClickThroughEventTagProperties"
                },
                {
                    "name": "lastModifiedInfo",
                    "desc": "Information about the most recent modification of this ad. This is a read-only field.",
                    "type": "ref",
                    "refType": "LastModifiedInfo"
                },
                {
                    "name": "sslRequired",
                    "desc": "Whether this ad requires ssl. This is a read-only field that is auto-generated when the ad is inserted or updated.",
                    "type": "bool"
                },
                {
                    "name": "audienceSegmentId",
                    "desc": "Audience segment ID that is being targeted for this ad. Applicable when type is AD_SERVING_STANDARD_AD.",
                    "type": "int64"
                },
                {
                    "name": "creativeGroupAssignments",
                    "desc": "Creative group assignments for this ad. Applicable when type is AD_SERVING_CLICK_TRACKER. Only one assignment per creative group number is allowed for a maximum of two assignments.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "CreativeGroupAssignment"
                },
                {
                    "name": "endTime",
                    "desc": "Date and time that this ad should stop serving. Must be later than the start time. This is a required field on insertion.",
                    "type": "datetime"
                },
                {
                    "name": "geoTargeting",
                    "desc": "Geographical targeting information for this ad. This field must be left blank if the ad is using a targeting template. Applicable when type is AD_SERVING_STANDARD_AD.",
                    "type": "ref",
                    "refType": "GeoTargeting"
                },
                {
                    "name": "idDimensionValue",
                    "desc": "Dimension value for the ID of this ad. This is a read-only, auto-generated field.",
                    "type": "ref",
                    "refType": "DimensionValue"
                },
                {
                    "name": "remarketingListExpression",
                    "desc": "Remarketing list targeting expression for this ad. This field must be left blank if the ad is using a targeting template. Applicable when type is AD_SERVING_STANDARD_AD.",
                    "type": "ref",
                    "refType": "ListTargetingExpression"
                },
                {
                    "name": "technologyTargeting",
                    "desc": "Technology platform targeting information for this ad. This field must be left blank if the ad is using a targeting template. Applicable when type is AD_SERVING_STANDARD_AD.",
                    "type": "ref",
                    "refType": "TechnologyTargeting"
                },
                {
                    "name": "comments",
                    "desc": "Comments for this ad.",
                    "type": "string"
                },
                {
                    "name": "dynamicClickTracker",
                    "desc": "Whether this ad is a dynamic click tracker. Applicable when type is AD_SERVING_CLICK_TRACKER. This is a required field on insert, and is read-only after insert.",
                    "type": "bool"
                },
                {
                    "name": "keyValueTargetingExpression",
                    "desc": "Key-value targeting information for this ad. This field must be left blank if the ad is using a targeting template. Applicable when type is AD_SERVING_STANDARD_AD.",
                    "type": "ref",
                    "refType": "KeyValueTargetingExpression"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#ad\".",
                    "type": "string",
                    "default": "dfareporting#ad"
                },
                {
                    "name": "subaccountId",
                    "desc": "Subaccount ID of this ad. This is a read-only field that can be left blank.",
                    "type": "int64"
                },
                {
                    "name": "eventTagOverrides",
                    "desc": "Event tag overrides for this ad.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "EventTagOverride"
                },
                {
                    "name": "advertiserId",
                    "desc": "Advertiser ID of this ad. This is a required field on insertion.",
                    "type": "int64"
                },
                {
                    "name": "campaignId",
                    "desc": "Campaign ID of this ad. This is a required field on insertion.",
                    "type": "int64"
                },
                {
                    "name": "campaignIdDimensionValue",
                    "desc": "Dimension value for the ID of the campaign. This is a read-only, auto-generated field.",
                    "type": "ref",
                    "refType": "DimensionValue"
                },
                {
                    "name": "createInfo",
                    "desc": "Information about the creation of this ad. This is a read-only field.",
                    "type": "ref",
                    "refType": "LastModifiedInfo"
                },
                {
                    "name": "creativeRotation",
                    "desc": "Creative rotation for this ad. Applicable when type is AD_SERVING_DEFAULT_AD, AD_SERVING_STANDARD_AD, or AD_SERVING_TRACKING. When type is AD_SERVING_DEFAULT_AD, this field should have exactly one creativeAssignment.",
                    "type": "ref",
                    "refType": "CreativeRotation"
                },
                {
                    "name": "name",
                    "desc": "Name of this ad. This is a required field and must be less than 256 characters long.",
                    "type": "string"
                },
                {
                    "name": "placementAssignments",
                    "desc": "Placement assignments for this ad.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "PlacementAssignment"
                },
                {
                    "name": "accountId",
                    "desc": "Account ID of this ad. This is a read-only field that can be left blank.",
                    "type": "int64"
                },
                {
                    "name": "advertiserIdDimensionValue",
                    "desc": "Dimension value for the ID of the advertiser. This is a read-only, auto-generated field.",
                    "type": "ref",
                    "refType": "DimensionValue"
                },
                {
                    "name": "clickThroughUrlSuffixProperties",
                    "desc": "Click-through URL suffix properties for this ad. Applies to the URL in the ad or (if overriding ad properties) the URL in the creative.",
                    "type": "ref",
                    "refType": "ClickThroughUrlSuffixProperties"
                },
                {
                    "name": "compatibility",
                    "desc": "Compatibility of this ad. Applicable when type is AD_SERVING_DEFAULT_AD. DISPLAY and DISPLAY_INTERSTITIAL refer to either rendering on desktop or on mobile devices or in mobile apps for regular or interstitial ads, respectively. APP and APP_INTERSTITIAL are only used for existing default ads. New mobile placements must be assigned DISPLAY or DISPLAY_INTERSTITIAL and default ads created for those placements will be limited to those compatibility types. IN_STREAM_VIDEO refers to rendering in-stream video ads developed with the VAST standard.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "APP"
                        },
                        {
                            "name": "APP_INTERSTITIAL"
                        },
                        {
                            "name": "DISPLAY"
                        },
                        {
                            "name": "DISPLAY_INTERSTITIAL"
                        },
                        {
                            "name": "IN_STREAM_VIDEO"
                        }
                    ]
                },
                {
                    "name": "languageTargeting",
                    "desc": "Language targeting information for this ad. This field must be left blank if the ad is using a targeting template. Applicable when type is AD_SERVING_STANDARD_AD.",
                    "type": "ref",
                    "refType": "LanguageTargeting"
                },
                {
                    "name": "size",
                    "desc": "Size of this ad. Applicable when type is AD_SERVING_DEFAULT_AD.",
                    "type": "ref",
                    "refType": "Size"
                },
                {
                    "name": "targetingTemplateId",
                    "desc": "Targeting template ID, used to apply preconfigured targeting information to this ad. This cannot be set while any of dayPartTargeting, geoTargeting, keyValueTargetingExpression, languageTargeting, remarketingListExpression, or technologyTargeting are set. Applicable when type is AD_SERVING_STANDARD_AD.",
                    "type": "int64"
                },
                {
                    "name": "archived",
                    "desc": "Whether this ad is archived. When true, active must be false.",
                    "type": "bool"
                },
                {
                    "name": "clickThroughUrl",
                    "desc": "Click-through URL for this ad. This is a required field on insertion. Applicable when type is AD_SERVING_CLICK_TRACKER.",
                    "type": "ref",
                    "refType": "ClickThroughUrl"
                },
                {
                    "name": "dayPartTargeting",
                    "desc": "Time and day targeting information for this ad. This field must be left blank if the ad is using a targeting template. Applicable when type is AD_SERVING_STANDARD_AD.",
                    "type": "ref",
                    "refType": "DayPartTargeting"
                },
                {
                    "name": "deliverySchedule",
                    "desc": "Delivery schedule information for this ad. Applicable when type is AD_SERVING_STANDARD_AD or AD_SERVING_TRACKING. This field along with subfields priority and impressionRatio are required on insertion when type is AD_SERVING_STANDARD_AD.",
                    "type": "ref",
                    "refType": "DeliverySchedule"
                },
                {
                    "name": "id",
                    "desc": "ID of this ad. This is a read-only, auto-generated field.",
                    "type": "int64"
                }
            ]
        },
        {
            "name": "ClickTag",
            "desc": "Creative Click Tag.",
            "type": "object",
            "fields": [
                {
                    "name": "eventName",
                    "desc": "Advertiser event name associated with the click tag. This field is used by DISPLAY_IMAGE_GALLERY and HTML5_BANNER creatives. Applicable to DISPLAY when the primary asset type is not HTML_IMAGE.",
                    "type": "string"
                },
                {
                    "name": "name",
                    "desc": "Parameter name for the specified click tag. For DISPLAY_IMAGE_GALLERY creative assets, this field must match the value of the creative asset's creativeAssetId.name field.",
                    "type": "string"
                },
                {
                    "name": "value",
                    "desc": "Parameter value for the specified click tag. This field contains a click-through url.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "CreativeGroupsListResponse",
            "desc": "Creative Group List Response",
            "type": "object",
            "fields": [
                {
                    "name": "creativeGroups",
                    "desc": "Creative group collection.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "CreativeGroup"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#creativeGroupsListResponse\".",
                    "type": "string",
                    "default": "dfareporting#creativeGroupsListResponse"
                },
                {
                    "name": "nextPageToken",
                    "desc": "Pagination token to be used for the next list operation.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "FloodlightActivitiesListResponse",
            "desc": "Floodlight Activity List Response",
            "type": "object",
            "fields": [
                {
                    "name": "floodlightActivities",
                    "desc": "Floodlight activity collection.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "FloodlightActivity"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#floodlightActivitiesListResponse\".",
                    "type": "string",
                    "default": "dfareporting#floodlightActivitiesListResponse"
                },
                {
                    "name": "nextPageToken",
                    "desc": "Pagination token to be used for the next list operation.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "TargetingTemplate",
            "desc": "Contains properties of a targeting template. A targeting template encapsulates targeting information which can be reused across multiple ads.",
            "type": "object",
            "fields": [
                {
                    "name": "advertiserIdDimensionValue",
                    "desc": "Dimension value for the ID of the advertiser. This is a read-only, auto-generated field.",
                    "type": "ref",
                    "refType": "DimensionValue"
                },
                {
                    "name": "dayPartTargeting",
                    "desc": "Time and day targeting criteria.",
                    "type": "ref",
                    "refType": "DayPartTargeting"
                },
                {
                    "name": "listTargetingExpression",
                    "desc": "Remarketing list targeting criteria.",
                    "type": "ref",
                    "refType": "ListTargetingExpression"
                },
                {
                    "name": "name",
                    "desc": "Name of this targeting template. This field is required. It must be less than 256 characters long and unique within an advertiser.",
                    "type": "string"
                },
                {
                    "name": "accountId",
                    "desc": "Account ID of this targeting template. This field, if left unset, will be auto-generated on insert and is read-only after insert.",
                    "type": "int64"
                },
                {
                    "name": "geoTargeting",
                    "desc": "Geographical targeting criteria.",
                    "type": "ref",
                    "refType": "GeoTargeting"
                },
                {
                    "name": "id",
                    "desc": "ID of this targeting template. This is a read-only, auto-generated field.",
                    "type": "int64"
                },
                {
                    "name": "keyValueTargetingExpression",
                    "desc": "Key-value targeting criteria.",
                    "type": "ref",
                    "refType": "KeyValueTargetingExpression"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#targetingTemplate\".",
                    "type": "string",
                    "default": "dfareporting#targetingTemplate"
                },
                {
                    "name": "languageTargeting",
                    "desc": "Language targeting criteria.",
                    "type": "ref",
                    "refType": "LanguageTargeting"
                },
                {
                    "name": "subaccountId",
                    "desc": "Subaccount ID of this targeting template. This field, if left unset, will be auto-generated on insert and is read-only after insert.",
                    "type": "int64"
                },
                {
                    "name": "technologyTargeting",
                    "desc": "Technology platform targeting criteria.",
                    "type": "ref",
                    "refType": "TechnologyTargeting"
                },
                {
                    "name": "advertiserId",
                    "desc": "Advertiser ID of this targeting template. This is a required field on insert and is read-only after insert.",
                    "type": "int64"
                }
            ]
        },
        {
            "name": "CreativeAsset",
            "desc": "Creative Asset.",
            "type": "object",
            "fields": [
                {
                    "name": "customStartTimeValue",
                    "desc": "Custom start time in seconds for making the asset visible. Applicable to the following creative types: all RICH_MEDIA.",
                    "type": "int32"
                },
                {
                    "name": "flashVersion",
                    "desc": "Flash version of the asset. This is a read-only field. Applicable to the following creative types: FLASH_INPAGE, all RICH_MEDIA, and all VPAID. Applicable to DISPLAY when the primary asset type is not HTML_IMAGE.",
                    "type": "int32"
                },
                {
                    "name": "originalBackup",
                    "desc": "Whether the backup asset is original or changed by the user in DCM. Applicable to the following creative types: all RICH_MEDIA.",
                    "type": "bool"
                },
                {
                    "name": "position",
                    "desc": "Offset position for an asset. Applicable to the following creative types: all RICH_MEDIA.",
                    "type": "ref",
                    "refType": "OffsetPosition"
                },
                {
                    "name": "progressiveServingUrl",
                    "desc": "Progressive URL for video asset. This is a read-only field. Applicable to the following creative types: INSTREAM_VIDEO and all VPAID.",
                    "type": "string"
                },
                {
                    "name": "pushdown",
                    "desc": "Whether the asset pushes down other content. Applicable to the following creative types: all RICH_MEDIA. Additionally, only applicable when the asset offsets are 0, the collapsedSize.width matches size.width, and the collapsedSize.height is less than size.height.",
                    "type": "bool"
                },
                {
                    "name": "verticallyLocked",
                    "desc": "Whether the asset is vertically locked. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA.",
                    "type": "bool"
                },
                {
                    "name": "backupImageExit",
                    "desc": "Exit event configured for the backup image. Applicable to the following creative types: all RICH_MEDIA.",
                    "type": "ref",
                    "refType": "CreativeCustomEvent"
                },
                {
                    "name": "zipFilesize",
                    "desc": "Size of zip file. This is a read-only field. Applicable to the following creative types: HTML5_BANNER.",
                    "type": "string"
                },
                {
                    "name": "windowMode",
                    "desc": "Window mode options for flash assets. Applicable to the following creative types: FLASH_INPAGE, RICH_MEDIA_DISPLAY_EXPANDING, RICH_MEDIA_IM_EXPAND, RICH_MEDIA_DISPLAY_BANNER, and RICH_MEDIA_INPAGE_FLOATING.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "OPAQUE"
                        },
                        {
                            "name": "TRANSPARENT"
                        },
                        {
                            "name": "WINDOW"
                        }
                    ]
                },
                {
                    "name": "displayType",
                    "desc": "Type of rich media asset. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "ASSET_DISPLAY_TYPE_BACKDROP"
                        },
                        {
                            "name": "ASSET_DISPLAY_TYPE_EXPANDING"
                        },
                        {
                            "name": "ASSET_DISPLAY_TYPE_FLASH_IN_FLASH"
                        },
                        {
                            "name": "ASSET_DISPLAY_TYPE_FLASH_IN_FLASH_EXPANDING"
                        },
                        {
                            "name": "ASSET_DISPLAY_TYPE_FLOATING"
                        },
                        {
                            "name": "ASSET_DISPLAY_TYPE_INPAGE"
                        },
                        {
                            "name": "ASSET_DISPLAY_TYPE_OVERLAY"
                        },
                        {
                            "name": "ASSET_DISPLAY_TYPE_PEEL_DOWN"
                        },
                        {
                            "name": "ASSET_DISPLAY_TYPE_VPAID_LINEAR"
                        },
                        {
                            "name": "ASSET_DISPLAY_TYPE_VPAID_NON_LINEAR"
                        }
                    ]
                },
                {
                    "name": "duration",
                    "desc": "Duration in seconds for which an asset will be displayed. Applicable to the following creative types: INSTREAM_VIDEO and VPAID_LINEAR_VIDEO.",
                    "type": "int32"
                },
                {
                    "name": "hideSelectionBoxes",
                    "desc": "Whether to hide selection boxes flag for an asset. Applicable to the following creative types: all RICH_MEDIA.",
                    "type": "bool"
                },
                {
                    "name": "role",
                    "desc": "Role of the asset in relation to creative. Applicable to all but the following creative types: all REDIRECT and TRACKING_TEXT. This is a required field.\nPRIMARY applies to DISPLAY, FLASH_INPAGE, HTML5_BANNER, IMAGE, DISPLAY_IMAGE_GALLERY, all RICH_MEDIA (which may contain multiple primary assets), and all VPAID creatives.\nBACKUP_IMAGE applies to FLASH_INPAGE, HTML5_BANNER, all RICH_MEDIA, and all VPAID creatives. Applicable to DISPLAY when the primary asset type is not HTML_IMAGE.\nADDITIONAL_IMAGE and ADDITIONAL_FLASH apply to FLASH_INPAGE creatives.\nOTHER refers to assets from sources other than DCM, such as Studio uploaded assets, applicable to all RICH_MEDIA and all VPAID creatives.\nPARENT_VIDEO refers to videos uploaded by the user in DCM and is applicable to INSTREAM_VIDEO and VPAID_LINEAR_VIDEO creatives.\nTRANSCODED_VIDEO refers to videos transcoded by DCM from PARENT_VIDEO assets and is applicable to INSTREAM_VIDEO and VPAID_LINEAR_VIDEO creatives.\nALTERNATE_VIDEO refers to the DCM representation of child asset videos from Studio, and is applicable to VPAID_LINEAR_VIDEO creatives. These cannot be added or removed within DCM.\nFor VPAID_LINEAR_VIDEO creatives, PARENT_VIDEO, TRANSCODED_VIDEO and ALTERNATE_VIDEO assets that are marked active serve as backup in case the VPAID creative cannot be served. Only PARENT_VIDEO assets can be added or removed for an INSTREAM_VIDEO or VPAID_LINEAR_VIDEO creative.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "ADDITIONAL_FLASH"
                        },
                        {
                            "name": "ADDITIONAL_IMAGE"
                        },
                        {
                            "name": "ALTERNATE_VIDEO"
                        },
                        {
                            "name": "BACKUP_IMAGE"
                        },
                        {
                            "name": "OTHER"
                        },
                        {
                            "name": "PARENT_VIDEO"
                        },
                        {
                            "name": "PRIMARY"
                        },
                        {
                            "name": "TRANSCODED_VIDEO"
                        }
                    ]
                },
                {
                    "name": "zIndex",
                    "desc": "zIndex value of an asset. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA.Additionally, only applicable to assets whose displayType is NOT one of the following types: ASSET_DISPLAY_TYPE_INPAGE or ASSET_DISPLAY_TYPE_OVERLAY.",
                    "type": "int32"
                },
                {
                    "name": "companionCreativeIds",
                    "desc": "List of companion creatives assigned to an in-stream video creative asset. Acceptable values include IDs of existing flash and image creatives. Applicable to INSTREAM_VIDEO creative type with dynamicAssetSelection set to true.",
                    "collection": "array",
                    "type": "int64"
                },
                {
                    "name": "artworkType",
                    "desc": "Artwork type of rich media creative. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "ARTWORK_TYPE_FLASH"
                        },
                        {
                            "name": "ARTWORK_TYPE_HTML5"
                        },
                        {
                            "name": "ARTWORK_TYPE_IMAGE"
                        },
                        {
                            "name": "ARTWORK_TYPE_MIXED"
                        }
                    ]
                },
                {
                    "name": "bitRate",
                    "desc": "Detected bit-rate for video asset. This is a read-only field. Applicable to the following creative types: INSTREAM_VIDEO and all VPAID.",
                    "type": "int32"
                },
                {
                    "name": "collapsedSize",
                    "desc": "Size of an asset when collapsed. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA and all VPAID. Additionally, applicable to assets whose displayType is ASSET_DISPLAY_TYPE_EXPANDING or ASSET_DISPLAY_TYPE_PEEL_DOWN.",
                    "type": "ref",
                    "refType": "Size"
                },
                {
                    "name": "expandedDimension",
                    "desc": "Detected expanded dimension for video asset. This is a read-only field. Applicable to the following creative types: INSTREAM_VIDEO and all VPAID.",
                    "type": "ref",
                    "refType": "Size"
                },
                {
                    "name": "hideFlashObjects",
                    "desc": "Whether to hide Flash objects flag for an asset. Applicable to the following creative types: all RICH_MEDIA.",
                    "type": "bool"
                },
                {
                    "name": "zipFilename",
                    "desc": "File name of zip file. This is a read-only field. Applicable to the following creative types: HTML5_BANNER.",
                    "type": "string"
                },
                {
                    "name": "actionScript3",
                    "desc": "Whether ActionScript3 is enabled for the flash asset. This is a read-only field. Applicable to the following creative type: FLASH_INPAGE. Applicable to DISPLAY when the primary asset type is not HTML_IMAGE.",
                    "type": "bool"
                },
                {
                    "name": "durationType",
                    "desc": "Duration type for which an asset will be displayed. Applicable to the following creative types: all RICH_MEDIA.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "ASSET_DURATION_TYPE_AUTO"
                        },
                        {
                            "name": "ASSET_DURATION_TYPE_CUSTOM"
                        },
                        {
                            "name": "ASSET_DURATION_TYPE_NONE"
                        }
                    ]
                },
                {
                    "name": "id",
                    "desc": "Numeric ID of this creative asset. This is a required field and should not be modified. Applicable to all but the following creative types: all REDIRECT and TRACKING_TEXT.",
                    "type": "int64"
                },
                {
                    "name": "sslCompliant",
                    "desc": "Whether the asset is SSL-compliant. This is a read-only field. Applicable to all but the following creative types: all REDIRECT and TRACKING_TEXT.",
                    "type": "bool"
                },
                {
                    "name": "active",
                    "desc": "Whether the video asset is active. This is a read-only field for VPAID_NON_LINEAR_VIDEO assets. Applicable to the following creative types: INSTREAM_VIDEO and all VPAID.",
                    "type": "bool"
                },
                {
                    "name": "idDimensionValue",
                    "desc": "Dimension value for the ID of the asset. This is a read-only, auto-generated field.",
                    "type": "ref",
                    "refType": "DimensionValue"
                },
                {
                    "name": "alignment",
                    "desc": "Possible alignments for an asset. This is a read-only field. Applicable to the following creative types: RICH_MEDIA_DISPLAY_MULTI_FLOATING_INTERSTITIAL.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "ALIGNMENT_BOTTOM"
                        },
                        {
                            "name": "ALIGNMENT_LEFT"
                        },
                        {
                            "name": "ALIGNMENT_RIGHT"
                        },
                        {
                            "name": "ALIGNMENT_TOP"
                        }
                    ]
                },
                {
                    "name": "detectedFeatures",
                    "desc": "List of feature dependencies for the creative asset that are detected by DCM. Feature dependencies are features that a browser must be able to support in order to render your HTML5 creative correctly. This is a read-only, auto-generated field. Applicable to the following creative types: HTML5_BANNER. Applicable to DISPLAY when the primary asset type is not HTML_IMAGE.",
                    "collection": "array",
                    "type": "string"
                },
                {
                    "name": "transparency",
                    "desc": "Whether the asset is transparent. Applicable to the following creative types: all RICH_MEDIA. Additionally, only applicable to HTML5 assets.",
                    "type": "bool"
                },
                {
                    "name": "videoDuration",
                    "desc": "Detected video duration for video asset. This is a read-only field. Applicable to the following creative types: INSTREAM_VIDEO and all VPAID.",
                    "type": "float32"
                },
                {
                    "name": "childAssetType",
                    "desc": "Rich media child asset type. This is a read-only field. Applicable to the following creative types: all VPAID.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "CHILD_ASSET_TYPE_DATA"
                        },
                        {
                            "name": "CHILD_ASSET_TYPE_FLASH"
                        },
                        {
                            "name": "CHILD_ASSET_TYPE_IMAGE"
                        },
                        {
                            "name": "CHILD_ASSET_TYPE_VIDEO"
                        }
                    ]
                },
                {
                    "name": "pushdownDuration",
                    "desc": "Pushdown duration in seconds for an asset. Must be between 0 and 9.99. Applicable to the following creative types: all RICH_MEDIA.Additionally, only applicable when the asset pushdown field is true, the offsets are 0, the collapsedSize.width matches size.width, and the collapsedSize.height is less than size.height.",
                    "type": "float32"
                },
                {
                    "name": "size",
                    "desc": "Size associated with this creative asset. This is a required field when applicable; however for IMAGE and FLASH_INPAGE, creatives if left blank, this field will be automatically set using the actual size of the associated image asset. Applicable to the following creative types: DISPLAY_IMAGE_GALLERY, FLASH_INPAGE, HTML5_BANNER, IMAGE, and all RICH_MEDIA. Applicable to DISPLAY when the primary asset type is not HTML_IMAGE.",
                    "type": "ref",
                    "refType": "Size"
                },
                {
                    "name": "positionLeftUnit",
                    "desc": "Offset left unit for an asset. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "OFFSET_UNIT_PERCENT"
                        },
                        {
                            "name": "OFFSET_UNIT_PIXEL"
                        },
                        {
                            "name": "OFFSET_UNIT_PIXEL_FROM_CENTER"
                        }
                    ]
                },
                {
                    "name": "fileSize",
                    "desc": "File size associated with this creative asset. This is a read-only field. Applicable to all but the following creative types: all REDIRECT and TRACKING_TEXT.",
                    "type": "int64"
                },
                {
                    "name": "horizontallyLocked",
                    "desc": "Whether the asset is horizontally locked. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA.",
                    "type": "bool"
                },
                {
                    "name": "mimeType",
                    "desc": "Detected MIME type for video asset. This is a read-only field. Applicable to the following creative types: INSTREAM_VIDEO and all VPAID.",
                    "type": "string"
                },
                {
                    "name": "offset",
                    "desc": "Offset position for an asset in collapsed mode. This is a read-only field. Applicable to the following creative types: all RICH_MEDIA and all VPAID. Additionally, only applicable to assets whose displayType is ASSET_DISPLAY_TYPE_EXPANDING or ASSET_DISPLAY_TYPE_PEEL_DOWN.",
                    "type": "ref",
                    "refType": "OffsetPosition"
                },
                {
                    "name": "positionTopUnit",
                    "desc": "Offset top unit for an asset. This is a read-only field if the asset displayType is ASSET_DISPLAY_TYPE_OVERLAY. Applicable to the following creative types: all RICH_MEDIA.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "OFFSET_UNIT_PERCENT"
                        },
                        {
                            "name": "OFFSET_UNIT_PIXEL"
                        },
                        {
                            "name": "OFFSET_UNIT_PIXEL_FROM_CENTER"
                        }
                    ]
                },
                {
                    "name": "startTimeType",
                    "desc": "Initial wait time type before making the asset visible. Applicable to the following creative types: all RICH_MEDIA.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "ASSET_START_TIME_TYPE_CUSTOM"
                        },
                        {
                            "name": "ASSET_START_TIME_TYPE_NONE"
                        }
                    ]
                },
                {
                    "name": "streamingServingUrl",
                    "desc": "Streaming URL for video asset. This is a read-only field. Applicable to the following creative types: INSTREAM_VIDEO and all VPAID.",
                    "type": "string"
                },
                {
                    "name": "assetIdentifier",
                    "desc": "Identifier of this asset. This is the same identifier returned during creative asset insert operation. This is a required field. Applicable to all but the following creative types: all REDIRECT and TRACKING_TEXT.",
                    "type": "ref",
                    "refType": "CreativeAssetId"
                }
            ]
        },
        {
            "name": "CrossDimensionReachReportCompatibleFields",
            "desc": "Represents fields that are compatible to be selected for a report of type \"CROSS_DIMENSION_REACH\".",
            "type": "object",
            "fields": [
                {
                    "name": "kind",
                    "desc": "The kind of resource this is, in this case dfareporting#crossDimensionReachReportCompatibleFields.",
                    "type": "string",
                    "default": "dfareporting#crossDimensionReachReportCompatibleFields"
                },
                {
                    "name": "metrics",
                    "desc": "Metrics which are compatible to be selected in the \"metricNames\" section of the report.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Metric"
                },
                {
                    "name": "overlapMetrics",
                    "desc": "Metrics which are compatible to be selected in the \"overlapMetricNames\" section of the report.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Metric"
                },
                {
                    "name": "breakdown",
                    "desc": "Dimensions which are compatible to be selected in the \"breakdown\" section of the report.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Dimension"
                },
                {
                    "name": "dimensionFilters",
                    "desc": "Dimensions which are compatible to be selected in the \"dimensionFilters\" section of the report.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Dimension"
                }
            ]
        },
        {
            "name": "Dimension",
            "desc": "Represents a dimension.",
            "type": "object",
            "fields": [
                {
                    "name": "kind",
                    "desc": "The kind of resource this is, in this case dfareporting#dimension.",
                    "type": "string",
                    "default": "dfareporting#dimension"
                },
                {
                    "name": "name",
                    "desc": "The dimension name, e.g. dfa:advertiser",
                    "type": "string"
                }
            ]
        },
        {
            "name": "LandingPagesListResponse",
            "desc": "Landing Page List Response",
            "type": "object",
            "fields": [
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#landingPagesListResponse\".",
                    "type": "string",
                    "default": "dfareporting#landingPagesListResponse"
                },
                {
                    "name": "landingPages",
                    "desc": "Landing page collection",
                    "collection": "array",
                    "type": "ref",
                    "refType": "LandingPage"
                }
            ]
        },
        {
            "name": "OffsetPosition",
            "desc": "Offset Position.",
            "type": "object",
            "fields": [
                {
                    "name": "left",
                    "desc": "Offset distance from left side of an asset or a window.",
                    "type": "int32"
                },
                {
                    "name": "top",
                    "desc": "Offset distance from top side of an asset or a window.",
                    "type": "int32"
                }
            ]
        },
        {
            "name": "OrderDocumentsListResponse",
            "desc": "Order document List Response",
            "type": "object",
            "fields": [
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#orderDocumentsListResponse\".",
                    "type": "string",
                    "default": "dfareporting#orderDocumentsListResponse"
                },
                {
                    "name": "nextPageToken",
                    "desc": "Pagination token to be used for the next list operation.",
                    "type": "string"
                },
                {
                    "name": "orderDocuments",
                    "desc": "Order document collection",
                    "collection": "array",
                    "type": "ref",
                    "refType": "OrderDocument"
                }
            ]
        },
        {
            "name": "ReportsConfiguration",
            "desc": "Reporting Configuration",
            "type": "object",
            "fields": [
                {
                    "name": "exposureToConversionEnabled",
                    "desc": "Whether the exposure to conversion report is enabled. This report shows detailed pathway information on up to 10 of the most recent ad exposures seen by a user before converting.",
                    "type": "bool"
                },
                {
                    "name": "lookbackConfiguration",
                    "desc": "Default lookback windows for new advertisers in this account.",
                    "type": "ref",
                    "refType": "LookbackConfiguration"
                },
                {
                    "name": "reportGenerationTimeZoneId",
                    "desc": "Report generation time zone ID of this account. This is a required field that can only be changed by a superuser.\nAcceptable values are:\n\n- \"1\" for \"America/New_York\" \n- \"2\" for \"Europe/London\" \n- \"3\" for \"Europe/Paris\" \n- \"4\" for \"Africa/Johannesburg\" \n- \"5\" for \"Asia/Jerusalem\" \n- \"6\" for \"Asia/Shanghai\" \n- \"7\" for \"Asia/Hong_Kong\" \n- \"8\" for \"Asia/Tokyo\" \n- \"9\" for \"Australia/Sydney\" \n- \"10\" for \"Asia/Dubai\" \n- \"11\" for \"America/Los_Angeles\" \n- \"12\" for \"Pacific/Auckland\" \n- \"13\" for \"America/Sao_Paulo\"",
                    "type": "int64"
                }
            ]
        },
        {
            "name": "SubaccountsListResponse",
            "desc": "Subaccount List Response",
            "type": "object",
            "fields": [
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#subaccountsListResponse\".",
                    "type": "string",
                    "default": "dfareporting#subaccountsListResponse"
                },
                {
                    "name": "nextPageToken",
                    "desc": "Pagination token to be used for the next list operation.",
                    "type": "string"
                },
                {
                    "name": "subaccounts",
                    "desc": "Subaccount collection.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Subaccount"
                }
            ]
        },
        {
            "name": "AdvertiserGroupsListResponse",
            "desc": "Advertiser Group List Response",
            "type": "object",
            "fields": [
                {
                    "name": "advertiserGroups",
                    "desc": "Advertiser group collection.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "AdvertiserGroup"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#advertiserGroupsListResponse\".",
                    "type": "string",
                    "default": "dfareporting#advertiserGroupsListResponse"
                },
                {
                    "name": "nextPageToken",
                    "desc": "Pagination token to be used for the next list operation.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "AudienceSegmentGroup",
            "desc": "Audience Segment Group.",
            "type": "object",
            "fields": [
                {
                    "name": "audienceSegments",
                    "desc": "Audience segments assigned to this group. The number of segments must be between 2 and 100.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "AudienceSegment"
                },
                {
                    "name": "id",
                    "desc": "ID of this audience segment group. This is a read-only, auto-generated field.",
                    "type": "int64"
                },
                {
                    "name": "name",
                    "desc": "Name of this audience segment group. This is a required field and must be less than 65 characters long.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "CustomFloodlightVariable",
            "desc": "A custom floodlight variable.",
            "type": "object",
            "fields": [
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#customFloodlightVariable\".",
                    "type": "string",
                    "default": "dfareporting#customFloodlightVariable"
                },
                {
                    "name": "type",
                    "desc": "The type of custom floodlight variable to supply a value for. These map to the \"u[1-20]=\" in the tags.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "U1"
                        },
                        {
                            "name": "U10"
                        },
                        {
                            "name": "U100"
                        },
                        {
                            "name": "U11"
                        },
                        {
                            "name": "U12"
                        },
                        {
                            "name": "U13"
                        },
                        {
                            "name": "U14"
                        },
                        {
                            "name": "U15"
                        },
                        {
                            "name": "U16"
                        },
                        {
                            "name": "U17"
                        },
                        {
                            "name": "U18"
                        },
                        {
                            "name": "U19"
                        },
                        {
                            "name": "U2"
                        },
                        {
                            "name": "U20"
                        },
                        {
                            "name": "U21"
                        },
                        {
                            "name": "U22"
                        },
                        {
                            "name": "U23"
                        },
                        {
                            "name": "U24"
                        },
                        {
                            "name": "U25"
                        },
                        {
                            "name": "U26"
                        },
                        {
                            "name": "U27"
                        },
                        {
                            "name": "U28"
                        },
                        {
                            "name": "U29"
                        },
                        {
                            "name": "U3"
                        },
                        {
                            "name": "U30"
                        },
                        {
                            "name": "U31"
                        },
                        {
                            "name": "U32"
                        },
                        {
                            "name": "U33"
                        },
                        {
                            "name": "U34"
                        },
                        {
                            "name": "U35"
                        },
                        {
                            "name": "U36"
                        },
                        {
                            "name": "U37"
                        },
                        {
                            "name": "U38"
                        },
                        {
                            "name": "U39"
                        },
                        {
                            "name": "U4"
                        },
                        {
                            "name": "U40"
                        },
                        {
                            "name": "U41"
                        },
                        {
                            "name": "U42"
                        },
                        {
                            "name": "U43"
                        },
                        {
                            "name": "U44"
                        },
                        {
                            "name": "U45"
                        },
                        {
                            "name": "U46"
                        },
                        {
                            "name": "U47"
                        },
                        {
                            "name": "U48"
                        },
                        {
                            "name": "U49"
                        },
                        {
                            "name": "U5"
                        },
                        {
                            "name": "U50"
                        },
                        {
                            "name": "U51"
                        },
                        {
                            "name": "U52"
                        },
                        {
                            "name": "U53"
                        },
                        {
                            "name": "U54"
                        },
                        {
                            "name": "U55"
                        },
                        {
                            "name": "U56"
                        },
                        {
                            "name": "U57"
                        },
                        {
                            "name": "U58"
                        },
                        {
                            "name": "U59"
                        },
                        {
                            "name": "U6"
                        },
                        {
                            "name": "U60"
                        },
                        {
                            "name": "U61"
                        },
                        {
                            "name": "U62"
                        },
                        {
                            "name": "U63"
                        },
                        {
                            "name": "U64"
                        },
                        {
                            "name": "U65"
                        },
                        {
                            "name": "U66"
                        },
                        {
                            "name": "U67"
                        },
                        {
                            "name": "U68"
                        },
                        {
                            "name": "U69"
                        },
                        {
                            "name": "U7"
                        },
                        {
                            "name": "U70"
                        },
                        {
                            "name": "U71"
                        },
                        {
                            "name": "U72"
                        },
                        {
                            "name": "U73"
                        },
                        {
                            "name": "U74"
                        },
                        {
                            "name": "U75"
                        },
                        {
                            "name": "U76"
                        },
                        {
                            "name": "U77"
                        },
                        {
                            "name": "U78"
                        },
                        {
                            "name": "U79"
                        },
                        {
                            "name": "U8"
                        },
                        {
                            "name": "U80"
                        },
                        {
                            "name": "U81"
                        },
                        {
                            "name": "U82"
                        },
                        {
                            "name": "U83"
                        },
                        {
                            "name": "U84"
                        },
                        {
                            "name": "U85"
                        },
                        {
                            "name": "U86"
                        },
                        {
                            "name": "U87"
                        },
                        {
                            "name": "U88"
                        },
                        {
                            "name": "U89"
                        },
                        {
                            "name": "U9"
                        },
                        {
                            "name": "U90"
                        },
                        {
                            "name": "U91"
                        },
                        {
                            "name": "U92"
                        },
                        {
                            "name": "U93"
                        },
                        {
                            "name": "U94"
                        },
                        {
                            "name": "U95"
                        },
                        {
                            "name": "U96"
                        },
                        {
                            "name": "U97"
                        },
                        {
                            "name": "U98"
                        },
                        {
                            "name": "U99"
                        }
                    ]
                },
                {
                    "name": "value",
                    "desc": "The value of the custom floodlight variable. The length of string must not exceed 50 characters.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "DimensionValueList",
            "desc": "Represents the list of DimensionValue resources.",
            "type": "object",
            "fields": [
                {
                    "name": "etag",
                    "desc": "The eTag of this response for caching purposes.",
                    "type": "string"
                },
                {
                    "name": "items",
                    "desc": "The dimension values returned in this response.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "DimensionValue"
                },
                {
                    "name": "kind",
                    "desc": "The kind of list this is, in this case dfareporting#dimensionValueList.",
                    "type": "string",
                    "default": "dfareporting#dimensionValueList"
                },
                {
                    "name": "nextPageToken",
                    "desc": "Continuation token used to page through dimension values. To retrieve the next page of results, set the next request's \"pageToken\" to the value of this field. The page token is only valid for a limited amount of time and should not be persisted.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "MobileCarriersListResponse",
            "desc": "Mobile Carrier List Response",
            "type": "object",
            "fields": [
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#mobileCarriersListResponse\".",
                    "type": "string",
                    "default": "dfareporting#mobileCarriersListResponse"
                },
                {
                    "name": "mobileCarriers",
                    "desc": "Mobile carrier collection.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "MobileCarrier"
                }
            ]
        },
        {
            "name": "Order",
            "desc": "Describes properties of a DoubleClick Planning order.",
            "type": "object",
            "fields": [
                {
                    "name": "buyerInvoiceId",
                    "desc": "Buyer invoice ID associated with this order.",
                    "type": "string"
                },
                {
                    "name": "name",
                    "desc": "Name of this order.",
                    "type": "string"
                },
                {
                    "name": "notes",
                    "desc": "Notes of this order.",
                    "type": "string"
                },
                {
                    "name": "sellerOrderId",
                    "desc": "Seller order ID associated with this order.",
                    "type": "string"
                },
                {
                    "name": "siteId",
                    "desc": "Site IDs this order is associated with.",
                    "collection": "array",
                    "type": "int64"
                },
                {
                    "name": "termsAndConditions",
                    "desc": "Terms and conditions of this order.",
                    "type": "string"
                },
                {
                    "name": "contacts",
                    "desc": "Contacts for this order.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "OrderContact"
                },
                {
                    "name": "projectId",
                    "desc": "Project ID of this order.",
                    "type": "int64"
                },
                {
                    "name": "sellerOrganizationName",
                    "desc": "Name of the seller organization.",
                    "type": "string"
                },
                {
                    "name": "subaccountId",
                    "desc": "Subaccount ID of this order.",
                    "type": "int64"
                },
                {
                    "name": "accountId",
                    "desc": "Account ID of this order.",
                    "type": "int64"
                },
                {
                    "name": "buyerOrganizationName",
                    "desc": "Name of the buyer organization.",
                    "type": "string"
                },
                {
                    "name": "lastModifiedInfo",
                    "desc": "Information about the most recent modification of this order.",
                    "type": "ref",
                    "refType": "LastModifiedInfo"
                },
                {
                    "name": "planningTermId",
                    "desc": "ID of the terms and conditions template used in this order.",
                    "type": "int64"
                },
                {
                    "name": "siteNames",
                    "desc": "Free-form site names this order is associated with.",
                    "collection": "array",
                    "type": "string"
                },
                {
                    "name": "advertiserId",
                    "desc": "Advertiser ID of this order.",
                    "type": "int64"
                },
                {
                    "name": "approverUserProfileIds",
                    "desc": "IDs for users that have to approve documents created for this order.",
                    "collection": "array",
                    "type": "int64"
                },
                {
                    "name": "comments",
                    "desc": "Comments in this order.",
                    "type": "string"
                },
                {
                    "name": "id",
                    "desc": "ID of this order. This is a read-only, auto-generated field.",
                    "type": "int64"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#order\".",
                    "type": "string",
                    "default": "dfareporting#order"
                }
            ]
        },
        {
            "name": "Pricing",
            "desc": "Pricing Information",
            "type": "object",
            "fields": [
                {
                    "name": "capCostType",
                    "desc": "Cap cost type of this inventory item.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "PLANNING_PLACEMENT_CAP_COST_TYPE_CUMULATIVE"
                        },
                        {
                            "name": "PLANNING_PLACEMENT_CAP_COST_TYPE_MONTHLY"
                        },
                        {
                            "name": "PLANNING_PLACEMENT_CAP_COST_TYPE_NONE"
                        }
                    ]
                },
                {
                    "name": "endDate",
                    "desc": "End date of this inventory item.",
                    "type": "date"
                },
                {
                    "name": "flights",
                    "desc": "Flights of this inventory item. A flight (a.k.a. pricing period) represents the inventory item pricing information for a specific period of time.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Flight"
                },
                {
                    "name": "groupType",
                    "desc": "Group type of this inventory item if it represents a placement group. Is null otherwise. There are two type of placement groups: PLANNING_PLACEMENT_GROUP_TYPE_PACKAGE is a simple group of inventory items that acts as a single pricing point for a group of tags. PLANNING_PLACEMENT_GROUP_TYPE_ROADBLOCK is a group of inventory items that not only acts as a single pricing point, but also assumes that all the tags in it will be served at the same time. A roadblock requires one of its assigned inventory items to be marked as primary.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "PLANNING_PLACEMENT_GROUP_TYPE_PACKAGE"
                        },
                        {
                            "name": "PLANNING_PLACEMENT_GROUP_TYPE_ROADBLOCK"
                        }
                    ]
                },
                {
                    "name": "pricingType",
                    "desc": "Pricing type of this inventory item.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "PLANNING_PLACEMENT_PRICING_TYPE_CLICKS"
                        },
                        {
                            "name": "PLANNING_PLACEMENT_PRICING_TYPE_CPA"
                        },
                        {
                            "name": "PLANNING_PLACEMENT_PRICING_TYPE_CPC"
                        },
                        {
                            "name": "PLANNING_PLACEMENT_PRICING_TYPE_CPM"
                        },
                        {
                            "name": "PLANNING_PLACEMENT_PRICING_TYPE_CPM_ACTIVEVIEW"
                        },
                        {
                            "name": "PLANNING_PLACEMENT_PRICING_TYPE_FLAT_RATE_CLICKS"
                        },
                        {
                            "name": "PLANNING_PLACEMENT_PRICING_TYPE_FLAT_RATE_IMPRESSIONS"
                        },
                        {
                            "name": "PLANNING_PLACEMENT_PRICING_TYPE_IMPRESSIONS"
                        }
                    ]
                },
                {
                    "name": "startDate",
                    "desc": "Start date of this inventory item.",
                    "type": "date"
                }
            ]
        },
        {
            "name": "VideoOffset",
            "desc": "Video Offset",
            "type": "object",
            "fields": [
                {
                    "name": "offsetSeconds",
                    "desc": "Duration, in seconds. Do not set when offsetPercentage is set.",
                    "type": "int32"
                },
                {
                    "name": "offsetPercentage",
                    "desc": "Duration, as a percentage of video duration. Do not set when offsetSeconds is set.",
                    "type": "int32"
                }
            ]
        },
        {
            "name": "AccountsListResponse",
            "desc": "Account List Response",
            "type": "object",
            "fields": [
                {
                    "name": "nextPageToken",
                    "desc": "Pagination token to be used for the next list operation.",
                    "type": "string"
                },
                {
                    "name": "accounts",
                    "desc": "Account collection.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Account"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#accountsListResponse\".",
                    "type": "string",
                    "default": "dfareporting#accountsListResponse"
                }
            ]
        },
        {
            "name": "AudienceSegment",
            "desc": "Audience Segment.",
            "type": "object",
            "fields": [
                {
                    "name": "allocation",
                    "desc": "Weight allocated to this segment. Must be between 1 and 1000. The weight assigned will be understood in proportion to the weights assigned to other segments in the same segment group.",
                    "type": "int32"
                },
                {
                    "name": "id",
                    "desc": "ID of this audience segment. This is a read-only, auto-generated field.",
                    "type": "int64"
                },
                {
                    "name": "name",
                    "desc": "Name of this audience segment. This is a required field and must be less than 65 characters long.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "CreativeCustomEvent",
            "desc": "Creative Custom Event.",
            "type": "object",
            "fields": [
                {
                    "name": "artworkLabel",
                    "desc": "Artwork label column, used to link events in DCM back to events in Studio. This is a required field and should not be modified after insertion.",
                    "type": "string"
                },
                {
                    "name": "id",
                    "desc": "ID of this event. This is a required field and should not be modified after insertion.",
                    "type": "int64"
                },
                {
                    "name": "popupWindowProperties",
                    "desc": "Properties for rich media popup windows. This field is used only for exit events.",
                    "type": "ref",
                    "refType": "PopupWindowProperties"
                },
                {
                    "name": "targetType",
                    "desc": "Target type used by the event.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "TARGET_BLANK"
                        },
                        {
                            "name": "TARGET_PARENT"
                        },
                        {
                            "name": "TARGET_POPUP"
                        },
                        {
                            "name": "TARGET_SELF"
                        },
                        {
                            "name": "TARGET_TOP"
                        }
                    ]
                },
                {
                    "name": "advertiserCustomEventId",
                    "desc": "Unique ID of this event used by DDM Reporting and Data Transfer. This is a read-only field.",
                    "type": "int64"
                },
                {
                    "name": "advertiserCustomEventName",
                    "desc": "User-entered name for the event.",
                    "type": "string"
                },
                {
                    "name": "advertiserCustomEventType",
                    "desc": "Type of the event. This is a read-only field.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "ADVERTISER_EVENT_COUNTER"
                        },
                        {
                            "name": "ADVERTISER_EVENT_EXIT"
                        },
                        {
                            "name": "ADVERTISER_EVENT_TIMER"
                        }
                    ]
                },
                {
                    "name": "artworkType",
                    "desc": "Artwork type used by the creative.This is a read-only field.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "ARTWORK_TYPE_FLASH"
                        },
                        {
                            "name": "ARTWORK_TYPE_HTML5"
                        },
                        {
                            "name": "ARTWORK_TYPE_IMAGE"
                        },
                        {
                            "name": "ARTWORK_TYPE_MIXED"
                        }
                    ]
                },
                {
                    "name": "exitUrl",
                    "desc": "Exit URL of the event. This field is used only for exit events.",
                    "type": "string"
                },
                {
                    "name": "videoReportingId",
                    "desc": "Video reporting ID, used to differentiate multiple videos in a single creative. This is a read-only field.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "InventoryItem",
            "desc": "Represents a buy from the DoubleClick Planning inventory store.",
            "type": "object",
            "fields": [
                {
                    "name": "orderId",
                    "desc": "Order ID of this inventory item.",
                    "type": "int64"
                },
                {
                    "name": "placementStrategyId",
                    "desc": "Placement strategy ID of this inventory item.",
                    "type": "int64"
                },
                {
                    "name": "projectId",
                    "desc": "Project ID of this inventory item.",
                    "type": "int64"
                },
                {
                    "name": "type",
                    "desc": "Type of inventory item.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "PLANNING_PLACEMENT_TYPE_CREDIT"
                        },
                        {
                            "name": "PLANNING_PLACEMENT_TYPE_REGULAR"
                        }
                    ]
                },
                {
                    "name": "adSlots",
                    "desc": "Ad slots of this inventory item. If this inventory item represents a standalone placement, there will be exactly one ad slot. If this inventory item represents a placement group, there will be more than one ad slot, each representing one child placement in that placement group.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "AdSlot"
                },
                {
                    "name": "id",
                    "desc": "ID of this inventory item.",
                    "type": "int64"
                },
                {
                    "name": "negotiationChannelId",
                    "desc": "Negotiation channel ID of this inventory item.",
                    "type": "int64"
                },
                {
                    "name": "accountId",
                    "desc": "Account ID of this inventory item.",
                    "type": "int64"
                },
                {
                    "name": "name",
                    "desc": "Name of this inventory item. For standalone inventory items, this is the same name as that of its only ad slot. For group inventory items, this can differ from the name of any of its ad slots.",
                    "type": "string"
                },
                {
                    "name": "subaccountId",
                    "desc": "Subaccount ID of this inventory item.",
                    "type": "int64"
                },
                {
                    "name": "estimatedClickThroughRate",
                    "desc": "Estimated click-through rate of this inventory item.",
                    "type": "int64"
                },
                {
                    "name": "estimatedConversionRate",
                    "desc": "Estimated conversion rate of this inventory item.",
                    "type": "int64"
                },
                {
                    "name": "inPlan",
                    "desc": "Whether this inventory item is in plan.",
                    "type": "bool"
                },
                {
                    "name": "lastModifiedInfo",
                    "desc": "Information about the most recent modification of this inventory item.",
                    "type": "ref",
                    "refType": "LastModifiedInfo"
                },
                {
                    "name": "pricing",
                    "desc": "Pricing of this inventory item.",
                    "type": "ref",
                    "refType": "Pricing"
                },
                {
                    "name": "rfpId",
                    "desc": "RFP ID of this inventory item.",
                    "type": "int64"
                },
                {
                    "name": "siteId",
                    "desc": "ID of the site this inventory item is associated with.",
                    "type": "int64"
                },
                {
                    "name": "advertiserId",
                    "desc": "Advertiser ID of this inventory item.",
                    "type": "int64"
                },
                {
                    "name": "contentCategoryId",
                    "desc": "Content category ID of this inventory item.",
                    "type": "int64"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#inventoryItem\".",
                    "type": "string",
                    "default": "dfareporting#inventoryItem"
                }
            ]
        },
        {
            "name": "Recipient",
            "desc": "Represents a recipient.",
            "type": "object",
            "fields": [
                {
                    "name": "deliveryType",
                    "desc": "The delivery type for the recipient.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "ATTACHMENT"
                        },
                        {
                            "name": "LINK"
                        }
                    ]
                },
                {
                    "name": "email",
                    "desc": "The email address of the recipient.",
                    "type": "string"
                },
                {
                    "name": "kind",
                    "desc": "The kind of resource this is, in this case dfareporting#recipient.",
                    "type": "string",
                    "default": "dfareporting#recipient"
                }
            ]
        },
        {
            "name": "UserRolePermission",
            "desc": "Contains properties of a user role permission.",
            "type": "object",
            "fields": [
                {
                    "name": "id",
                    "desc": "ID of this user role permission.",
                    "type": "int64"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#userRolePermission\".",
                    "type": "string",
                    "default": "dfareporting#userRolePermission"
                },
                {
                    "name": "name",
                    "desc": "Name of this user role permission.",
                    "type": "string"
                },
                {
                    "name": "permissionGroupId",
                    "desc": "ID of the permission group that this user role permission belongs to.",
                    "type": "int64"
                },
                {
                    "name": "availability",
                    "desc": "Levels of availability for a user role permission.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "ACCOUNT_ALWAYS"
                        },
                        {
                            "name": "ACCOUNT_BY_DEFAULT"
                        },
                        {
                            "name": "NOT_AVAILABLE_BY_DEFAULT"
                        },
                        {
                            "name": "SUBACCOUNT_AND_ACCOUNT_ALWAYS"
                        },
                        {
                            "name": "SUBACCOUNT_AND_ACCOUNT_BY_DEFAULT"
                        }
                    ]
                }
            ]
        },
        {
            "name": "UserRolePermissionGroupsListResponse",
            "desc": "User Role Permission Group List Response",
            "type": "object",
            "fields": [
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#userRolePermissionGroupsListResponse\".",
                    "type": "string",
                    "default": "dfareporting#userRolePermissionGroupsListResponse"
                },
                {
                    "name": "userRolePermissionGroups",
                    "desc": "User role permission group collection.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "UserRolePermissionGroup"
                }
            ]
        },
        {
            "name": "ConversionStatus",
            "desc": "The original conversion that was inserted or updated and whether there were any errors.",
            "type": "object",
            "fields": [
                {
                    "name": "conversion",
                    "desc": "The original conversion that was inserted or updated.",
                    "type": "ref",
                    "refType": "Conversion"
                },
                {
                    "name": "errors",
                    "desc": "A list of errors related to this conversion.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "ConversionError"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#conversionStatus\".",
                    "type": "string",
                    "default": "dfareporting#conversionStatus"
                }
            ]
        },
        {
            "name": "DfpSettings",
            "desc": "DFP Settings",
            "type": "object",
            "fields": [
                {
                    "name": "dfp_network_code",
                    "desc": "DFP network code for this directory site.",
                    "type": "string"
                },
                {
                    "name": "dfp_network_name",
                    "desc": "DFP network name for this directory site.",
                    "type": "string"
                },
                {
                    "name": "programmaticPlacementAccepted",
                    "desc": "Whether this directory site accepts programmatic placements.",
                    "type": "bool"
                },
                {
                    "name": "pubPaidPlacementAccepted",
                    "desc": "Whether this directory site accepts publisher-paid tags.",
                    "type": "bool"
                },
                {
                    "name": "publisherPortalOnly",
                    "desc": "Whether this directory site is available only via DoubleClick Publisher Portal.",
                    "type": "bool"
                }
            ]
        },
        {
            "name": "RegionsListResponse",
            "desc": "Region List Response",
            "type": "object",
            "fields": [
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#regionsListResponse\".",
                    "type": "string",
                    "default": "dfareporting#regionsListResponse"
                },
                {
                    "name": "regions",
                    "desc": "Region collection.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Region"
                }
            ]
        },
        {
            "name": "SiteSettings",
            "desc": "Site Settings",
            "type": "object",
            "fields": [
                {
                    "name": "disableNewCookie",
                    "desc": "Whether new cookies are disabled for this site.",
                    "type": "bool"
                },
                {
                    "name": "lookbackConfiguration",
                    "desc": "Lookback window settings for this site.",
                    "type": "ref",
                    "refType": "LookbackConfiguration"
                },
                {
                    "name": "tagSetting",
                    "desc": "Configuration settings for dynamic and image floodlight tags.",
                    "type": "ref",
                    "refType": "TagSetting"
                },
                {
                    "name": "videoActiveViewOptOutTemplate",
                    "desc": "Whether Verification and ActiveView for in-stream video creatives are disabled by default for new placements created under this site. This value will be used to populate the placement.videoActiveViewOptOut field, when no value is specified for the new placement.",
                    "type": "bool"
                },
                {
                    "name": "vpaidAdapterChoiceTemplate",
                    "desc": "Default VPAID adapter setting for new placements created under this site. This value will be used to populate the placements.vpaidAdapterChoice field, when no value is specified for the new placement. Controls which VPAID format the measurement adapter will use for in-stream video creatives assigned to the placement. The publisher's specifications will typically determine this setting. For VPAID creatives, the adapter format will match the VPAID format (HTML5 VPAID creatives use the HTML5 adapter, and Flash VPAID creatives use the Flash adapter).",
                    "type": "string",
                    "enum": [
                        {
                            "name": "BOTH"
                        },
                        {
                            "name": "DEFAULT"
                        },
                        {
                            "name": "FLASH"
                        },
                        {
                            "name": "HTML5"
                        }
                    ]
                },
                {
                    "name": "activeViewOptOut",
                    "desc": "Whether active view creatives are disabled for this site.",
                    "type": "bool"
                },
                {
                    "name": "creativeSettings",
                    "desc": "Site-wide creative settings.",
                    "type": "ref",
                    "refType": "CreativeSettings"
                },
                {
                    "name": "disableBrandSafeAds",
                    "desc": "Whether brand safe ads are disabled for this site.",
                    "type": "bool"
                }
            ]
        },
        {
            "name": "TargetingTemplatesListResponse",
            "desc": "Targeting Template List Response",
            "type": "object",
            "fields": [
                {
                    "name": "nextPageToken",
                    "desc": "Pagination token to be used for the next list operation.",
                    "type": "string"
                },
                {
                    "name": "targetingTemplates",
                    "desc": "Targeting template collection.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "TargetingTemplate"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#targetingTemplatesListResponse\".",
                    "type": "string",
                    "default": "dfareporting#targetingTemplatesListResponse"
                }
            ]
        },
        {
            "name": "Browser",
            "desc": "Contains information about a browser that can be targeted by ads.",
            "type": "object",
            "fields": [
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#browser\".",
                    "type": "string",
                    "default": "dfareporting#browser"
                },
                {
                    "name": "majorVersion",
                    "desc": "Major version number (leftmost number) of this browser. For example, for Chrome 5.0.376.86 beta, this field should be set to 5. An asterisk (*) may be used to target any version number, and a question mark (?) may be used to target cases where the version number cannot be identified. For example, Chrome *.* targets any version of Chrome: 1.2, 2.5, 3.5, and so on. Chrome 3.* targets Chrome 3.1, 3.5, but not 4.0. Firefox ?.? targets cases where the ad server knows the browser is Firefox but can't tell which version it is.",
                    "type": "string"
                },
                {
                    "name": "minorVersion",
                    "desc": "Minor version number (number after first dot on left) of this browser. For example, for Chrome 5.0.375.86 beta, this field should be set to 0. An asterisk (*) may be used to target any version number, and a question mark (?) may be used to target cases where the version number cannot be identified. For example, Chrome *.* targets any version of Chrome: 1.2, 2.5, 3.5, and so on. Chrome 3.* targets Chrome 3.1, 3.5, but not 4.0. Firefox ?.? targets cases where the ad server knows the browser is Firefox but can't tell which version it is.",
                    "type": "string"
                },
                {
                    "name": "name",
                    "desc": "Name of this browser.",
                    "type": "string"
                },
                {
                    "name": "browserVersionId",
                    "desc": "ID referring to this grouping of browser and version numbers. This is the ID used for targeting.",
                    "type": "int64"
                },
                {
                    "name": "dartId",
                    "desc": "DART ID of this browser. This is the ID used when generating reports.",
                    "type": "int64"
                }
            ]
        },
        {
            "name": "ContentCategory",
            "desc": "Organizes placements according to the contents of their associated webpages.",
            "type": "object",
            "fields": [
                {
                    "name": "name",
                    "desc": "Name of this content category. This is a required field and must be less than 256 characters long and unique among content categories of the same account.",
                    "type": "string"
                },
                {
                    "name": "accountId",
                    "desc": "Account ID of this content category. This is a read-only field that can be left blank.",
                    "type": "int64"
                },
                {
                    "name": "id",
                    "desc": "ID of this content category. This is a read-only, auto-generated field.",
                    "type": "int64"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#contentCategory\".",
                    "type": "string",
                    "default": "dfareporting#contentCategory"
                }
            ]
        },
        {
            "name": "ConversionError",
            "desc": "The error code and description for a conversion that failed to insert or update.",
            "type": "object",
            "fields": [
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#conversionError\".",
                    "type": "string",
                    "default": "dfareporting#conversionError"
                },
                {
                    "name": "message",
                    "desc": "A description of the error.",
                    "type": "string"
                },
                {
                    "name": "code",
                    "desc": "The error code.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "INTERNAL"
                        },
                        {
                            "name": "INVALID_ARGUMENT"
                        },
                        {
                            "name": "NOT_FOUND"
                        },
                        {
                            "name": "PERMISSION_DENIED"
                        }
                    ]
                }
            ]
        },
        {
            "name": "CreativeAssetId",
            "desc": "Creative Asset ID.",
            "type": "object",
            "fields": [
                {
                    "name": "name",
                    "desc": "Name of the creative asset. This is a required field while inserting an asset. After insertion, this assetIdentifier is used to identify the uploaded asset. Characters in the name must be alphanumeric or one of the following: \".-_ \". Spaces are allowed.",
                    "type": "string"
                },
                {
                    "name": "type",
                    "desc": "Type of asset to upload. This is a required field. FLASH and IMAGE are no longer supported for new uploads. All image assets should use HTML_IMAGE.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "FLASH"
                        },
                        {
                            "name": "HTML"
                        },
                        {
                            "name": "HTML_IMAGE"
                        },
                        {
                            "name": "IMAGE"
                        },
                        {
                            "name": "VIDEO"
                        }
                    ]
                }
            ]
        },
        {
            "name": "CreativeAssetMetadata",
            "desc": "CreativeAssets contains properties of a creative asset file which will be uploaded or has already been uploaded. Refer to the creative sample code for how to upload assets and insert a creative.",
            "type": "object",
            "fields": [
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#creativeAssetMetadata\".",
                    "type": "string",
                    "default": "dfareporting#creativeAssetMetadata"
                },
                {
                    "name": "warnedValidationRules",
                    "desc": "Rules validated during code generation that generated a warning. This is a read-only, auto-generated field.\n\nPossible values are:\n- \"ADMOB_REFERENCED\"\n- \"ASSET_FORMAT_UNSUPPORTED_DCM\"\n- \"ASSET_INVALID\"\n- \"CLICK_TAG_HARD_CODED\"\n- \"CLICK_TAG_INVALID\"\n- \"CLICK_TAG_IN_GWD\"\n- \"CLICK_TAG_MISSING\"\n- \"CLICK_TAG_MORE_THAN_ONE\"\n- \"CLICK_TAG_NON_TOP_LEVEL\"\n- \"COMPONENT_UNSUPPORTED_DCM\"\n- \"ENABLER_UNSUPPORTED_METHOD_DCM\"\n- \"EXTERNAL_FILE_REFERENCED\"\n- \"FILE_DETAIL_EMPTY\"\n- \"FILE_TYPE_INVALID\"\n- \"GWD_PROPERTIES_INVALID\"\n- \"HTML5_FEATURE_UNSUPPORTED\"\n- \"LINKED_FILE_NOT_FOUND\"\n- \"MAX_FLASH_VERSION_11\"\n- \"MRAID_REFERENCED\"\n- \"NOT_SSL_COMPLIANT\"\n- \"ORPHANED_ASSET\"\n- \"PRIMARY_HTML_MISSING\"\n- \"SVG_INVALID\"\n- \"ZIP_INVALID\"",
                    "collection": "array",
                    "type": "string"
                },
                {
                    "name": "assetIdentifier",
                    "desc": "ID of the creative asset. This is a required field.",
                    "type": "ref",
                    "refType": "CreativeAssetId"
                },
                {
                    "name": "clickTags",
                    "desc": "List of detected click tags for assets. This is a read-only auto-generated field.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "ClickTag"
                },
                {
                    "name": "detectedFeatures",
                    "desc": "List of feature dependencies for the creative asset that are detected by DCM. Feature dependencies are features that a browser must be able to support in order to render your HTML5 creative correctly. This is a read-only, auto-generated field.",
                    "collection": "array",
                    "type": "string"
                },
                {
                    "name": "id",
                    "desc": "Numeric ID of the asset. This is a read-only, auto-generated field.",
                    "type": "int64"
                },
                {
                    "name": "idDimensionValue",
                    "desc": "Dimension value for the numeric ID of the asset. This is a read-only, auto-generated field.",
                    "type": "ref",
                    "refType": "DimensionValue"
                }
            ]
        },
        {
            "name": "ListPopulationRule",
            "desc": "Remarketing List Population Rule.",
            "type": "object",
            "fields": [
                {
                    "name": "listPopulationClauses",
                    "desc": "Clauses that make up this list population rule. Clauses are joined by ANDs, and the clauses themselves are made up of list population terms which are joined by ORs.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "ListPopulationClause"
                },
                {
                    "name": "floodlightActivityId",
                    "desc": "Floodlight activity ID associated with this rule. This field can be left blank.",
                    "type": "int64"
                },
                {
                    "name": "floodlightActivityName",
                    "desc": "Name of floodlight activity associated with this rule. This is a read-only, auto-generated field.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "RemarketingList",
            "desc": "Contains properties of a remarketing list. Remarketing enables you to create lists of users who have performed specific actions on a site, then target ads to members of those lists. This resource can be used to manage remarketing lists that are owned by your advertisers. To see all remarketing lists that are visible to your advertisers, including those that are shared to your advertiser or account, use the TargetableRemarketingLists resource.",
            "type": "object",
            "fields": [
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#remarketingList\".",
                    "type": "string",
                    "default": "dfareporting#remarketingList"
                },
                {
                    "name": "lifeSpan",
                    "desc": "Number of days that a user should remain in the remarketing list without an impression.",
                    "type": "int64"
                },
                {
                    "name": "listPopulationRule",
                    "desc": "Rule used to populate the remarketing list with users.",
                    "type": "ref",
                    "refType": "ListPopulationRule"
                },
                {
                    "name": "listSize",
                    "desc": "Number of users currently in the list. This is a read-only field.",
                    "type": "int64"
                },
                {
                    "name": "listSource",
                    "desc": "Product from which this remarketing list was originated.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "REMARKETING_LIST_SOURCE_ADX"
                        },
                        {
                            "name": "REMARKETING_LIST_SOURCE_DBM"
                        },
                        {
                            "name": "REMARKETING_LIST_SOURCE_DFA"
                        },
                        {
                            "name": "REMARKETING_LIST_SOURCE_DFP"
                        },
                        {
                            "name": "REMARKETING_LIST_SOURCE_DMP"
                        },
                        {
                            "name": "REMARKETING_LIST_SOURCE_GA"
                        },
                        {
                            "name": "REMARKETING_LIST_SOURCE_GPLUS"
                        },
                        {
                            "name": "REMARKETING_LIST_SOURCE_OTHER"
                        },
                        {
                            "name": "REMARKETING_LIST_SOURCE_PLAY_STORE"
                        },
                        {
                            "name": "REMARKETING_LIST_SOURCE_XFP"
                        },
                        {
                            "name": "REMARKETING_LIST_SOURCE_YOUTUBE"
                        }
                    ]
                },
                {
                    "name": "advertiserIdDimensionValue",
                    "desc": "Dimension value for the ID of the advertiser. This is a read-only, auto-generated field.",
                    "type": "ref",
                    "refType": "DimensionValue"
                },
                {
                    "name": "description",
                    "desc": "Remarketing list description.",
                    "type": "string"
                },
                {
                    "name": "advertiserId",
                    "desc": "Dimension value for the advertiser ID that owns this remarketing list. This is a required field.",
                    "type": "int64"
                },
                {
                    "name": "id",
                    "desc": "Remarketing list ID. This is a read-only, auto-generated field.",
                    "type": "int64"
                },
                {
                    "name": "name",
                    "desc": "Name of the remarketing list. This is a required field. Must be no greater than 128 characters long.",
                    "type": "string"
                },
                {
                    "name": "subaccountId",
                    "desc": "Subaccount ID of this remarketing list. This is a read-only, auto-generated field that is only returned in GET requests.",
                    "type": "int64"
                },
                {
                    "name": "accountId",
                    "desc": "Account ID of this remarketing list. This is a read-only, auto-generated field that is only returned in GET requests.",
                    "type": "int64"
                },
                {
                    "name": "active",
                    "desc": "Whether this remarketing list is active.",
                    "type": "bool"
                }
            ]
        },
        {
            "name": "TranscodeSetting",
            "desc": "Transcode Settings",
            "type": "object",
            "fields": [
                {
                    "name": "enabledVideoFormats",
                    "desc": "Whitelist of video formats to be served to this placement. Set this list to null or empty to serve all video formats.",
                    "collection": "array",
                    "type": "int32"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#transcodeSetting\".",
                    "type": "string",
                    "default": "dfareporting#transcodeSetting"
                }
            ]
        },
        {
            "name": "AdsListResponse",
            "desc": "Ad List Response",
            "type": "object",
            "fields": [
                {
                    "name": "ads",
                    "desc": "Ad collection.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Ad"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#adsListResponse\".",
                    "type": "string",
                    "default": "dfareporting#adsListResponse"
                },
                {
                    "name": "nextPageToken",
                    "desc": "Pagination token to be used for the next list operation.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "CompanionSetting",
            "desc": "Companion Settings",
            "type": "object",
            "fields": [
                {
                    "name": "companionsDisabled",
                    "desc": "Whether companions are disabled for this placement.",
                    "type": "bool"
                },
                {
                    "name": "enabledSizes",
                    "desc": "Whitelist of companion sizes to be served to this placement. Set this list to null or empty to serve all companion sizes.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Size"
                },
                {
                    "name": "imageOnly",
                    "desc": "Whether to serve only static images as companions.",
                    "type": "bool"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#companionSetting\".",
                    "type": "string",
                    "default": "dfareporting#companionSetting"
                }
            ]
        },
        {
            "name": "FloodlightActivity",
            "desc": "Contains properties of a Floodlight activity.",
            "type": "object",
            "fields": [
                {
                    "name": "hidden",
                    "desc": "Whether this activity is archived.",
                    "type": "bool"
                },
                {
                    "name": "imageTagEnabled",
                    "desc": "Whether the image tag is enabled for this activity.",
                    "type": "bool"
                },
                {
                    "name": "expectedUrl",
                    "desc": "URL where this tag will be deployed. If specified, must be less than 256 characters long.",
                    "type": "string"
                },
                {
                    "name": "floodlightActivityGroupId",
                    "desc": "Floodlight activity group ID of this floodlight activity. This is a required field.",
                    "type": "int64"
                },
                {
                    "name": "floodlightConfigurationId",
                    "desc": "Floodlight configuration ID of this floodlight activity. If this field is left blank, the value will be copied over either from the activity group's floodlight configuration or from the existing activity's floodlight configuration.",
                    "type": "int64"
                },
                {
                    "name": "idDimensionValue",
                    "desc": "Dimension value for the ID of this floodlight activity. This is a read-only, auto-generated field.",
                    "type": "ref",
                    "refType": "DimensionValue"
                },
                {
                    "name": "subaccountId",
                    "desc": "Subaccount ID of this floodlight activity. This is a read-only field that can be left blank.",
                    "type": "int64"
                },
                {
                    "name": "defaultTags",
                    "desc": "Dynamic floodlight tags.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "FloodlightActivityDynamicTag"
                },
                {
                    "name": "secure",
                    "desc": "Whether this tag should use SSL.",
                    "type": "bool"
                },
                {
                    "name": "accountId",
                    "desc": "Account ID of this floodlight activity. This is a read-only field that can be left blank.",
                    "type": "int64"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#floodlightActivity\".",
                    "type": "string",
                    "default": "dfareporting#floodlightActivity"
                },
                {
                    "name": "tagFormat",
                    "desc": "Tag format type for the floodlight activity. If left blank, the tag format will default to HTML.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "HTML"
                        },
                        {
                            "name": "XHTML"
                        }
                    ]
                },
                {
                    "name": "advertiserId",
                    "desc": "Advertiser ID of this floodlight activity. If this field is left blank, the value will be copied over either from the activity group's advertiser or the existing activity's advertiser.",
                    "type": "int64"
                },
                {
                    "name": "floodlightActivityGroupName",
                    "desc": "Name of the associated floodlight activity group. This is a read-only field.",
                    "type": "string"
                },
                {
                    "name": "floodlightActivityGroupTagString",
                    "desc": "Tag string of the associated floodlight activity group. This is a read-only field.",
                    "type": "string"
                },
                {
                    "name": "floodlightActivityGroupType",
                    "desc": "Type of the associated floodlight activity group. This is a read-only field.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "COUNTER"
                        },
                        {
                            "name": "SALE"
                        }
                    ]
                },
                {
                    "name": "floodlightConfigurationIdDimensionValue",
                    "desc": "Dimension value for the ID of the floodlight configuration. This is a read-only, auto-generated field.",
                    "type": "ref",
                    "refType": "DimensionValue"
                },
                {
                    "name": "id",
                    "desc": "ID of this floodlight activity. This is a read-only, auto-generated field.",
                    "type": "int64"
                },
                {
                    "name": "cacheBustingType",
                    "desc": "Code type used for cache busting in the generated tag.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "ACTIVE_SERVER_PAGE"
                        },
                        {
                            "name": "COLD_FUSION"
                        },
                        {
                            "name": "JAVASCRIPT"
                        },
                        {
                            "name": "JSP"
                        },
                        {
                            "name": "PHP"
                        }
                    ]
                },
                {
                    "name": "tagString",
                    "desc": "Value of the cat= paramter in the floodlight tag, which the ad servers use to identify the activity. This is optional: if empty, a new tag string will be generated for you. This string must be 1 to 8 characters long, with valid characters being [a-z][A-Z][0-9][-][ _ ]. This tag string must also be unique among activities of the same activity group. This field is read-only after insertion.",
                    "type": "string"
                },
                {
                    "name": "advertiserIdDimensionValue",
                    "desc": "Dimension value for the ID of the advertiser. This is a read-only, auto-generated field.",
                    "type": "ref",
                    "refType": "DimensionValue"
                },
                {
                    "name": "notes",
                    "desc": "General notes or implementation instructions for the tag.",
                    "type": "string"
                },
                {
                    "name": "countingMethod",
                    "desc": "Counting method for conversions for this floodlight activity. This is a required field.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "ITEMS_SOLD_COUNTING"
                        },
                        {
                            "name": "SESSION_COUNTING"
                        },
                        {
                            "name": "STANDARD_COUNTING"
                        },
                        {
                            "name": "TRANSACTIONS_COUNTING"
                        },
                        {
                            "name": "UNIQUE_COUNTING"
                        }
                    ]
                },
                {
                    "name": "name",
                    "desc": "Name of this floodlight activity. This is a required field. Must be less than 129 characters long and cannot contain quotes.",
                    "type": "string"
                },
                {
                    "name": "publisherTags",
                    "desc": "Publisher dynamic floodlight tags.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "FloodlightActivityPublisherDynamicTag"
                },
                {
                    "name": "sslCompliant",
                    "desc": "Whether the floodlight activity is SSL-compliant. This is a read-only field, its value detected by the system from the floodlight tags.",
                    "type": "bool"
                },
                {
                    "name": "sslRequired",
                    "desc": "Whether this floodlight activity must be SSL-compliant.",
                    "type": "bool"
                },
                {
                    "name": "userDefinedVariableTypes",
                    "desc": "List of the user-defined variables used by this conversion tag. These map to the \"u[1-20]=\" in the tags. Each of these can have a user defined type.\nAcceptable values are:\n- \"U1\"\n- \"U2\"\n- \"U3\"\n- \"U4\"\n- \"U5\"\n- \"U6\"\n- \"U7\"\n- \"U8\"\n- \"U9\"\n- \"U10\"\n- \"U11\"\n- \"U12\"\n- \"U13\"\n- \"U14\"\n- \"U15\"\n- \"U16\"\n- \"U17\"\n- \"U18\"\n- \"U19\"\n- \"U20\"",
                    "collection": "array",
                    "type": "string"
                }
            ]
        },
        {
            "name": "ListPopulationClause",
            "desc": "A group clause made up of list population terms representing constraints joined by ORs.",
            "type": "object",
            "fields": [
                {
                    "name": "terms",
                    "desc": "Terms of this list population clause. Each clause is made up of list population terms representing constraints and are joined by ORs.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "ListPopulationTerm"
                }
            ]
        },
        {
            "name": "ListTargetingExpression",
            "desc": "Remarketing List Targeting Expression.",
            "type": "object",
            "fields": [
                {
                    "name": "expression",
                    "desc": "Expression describing which lists are being targeted by the ad.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "FloodlightReportCompatibleFields",
            "desc": "Represents fields that are compatible to be selected for a report of type \"FlOODLIGHT\".",
            "type": "object",
            "fields": [
                {
                    "name": "dimensionFilters",
                    "desc": "Dimensions which are compatible to be selected in the \"dimensionFilters\" section of the report.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Dimension"
                },
                {
                    "name": "dimensions",
                    "desc": "Dimensions which are compatible to be selected in the \"dimensions\" section of the report.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Dimension"
                },
                {
                    "name": "kind",
                    "desc": "The kind of resource this is, in this case dfareporting#floodlightReportCompatibleFields.",
                    "type": "string",
                    "default": "dfareporting#floodlightReportCompatibleFields"
                },
                {
                    "name": "metrics",
                    "desc": "Metrics which are compatible to be selected in the \"metricNames\" section of the report.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Metric"
                }
            ]
        },
        {
            "name": "AccountPermission",
            "desc": "AccountPermissions contains information about a particular account permission. Some features of DCM require an account permission to be present in the account.",
            "type": "object",
            "fields": [
                {
                    "name": "level",
                    "desc": "Administrative level required to enable this account permission.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "ADMINISTRATOR"
                        },
                        {
                            "name": "USER"
                        }
                    ]
                },
                {
                    "name": "name",
                    "desc": "Name of this account permission.",
                    "type": "string"
                },
                {
                    "name": "permissionGroupId",
                    "desc": "Permission group of this account permission.",
                    "type": "int64"
                },
                {
                    "name": "accountProfiles",
                    "desc": "Account profiles associated with this account permission.\n\nPossible values are:\n- \"ACCOUNT_PROFILE_BASIC\"\n- \"ACCOUNT_PROFILE_STANDARD\"",
                    "collection": "array",
                    "type": "string"
                },
                {
                    "name": "id",
                    "desc": "ID of this account permission.",
                    "type": "int64"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#accountPermission\".",
                    "type": "string",
                    "default": "dfareporting#accountPermission"
                }
            ]
        },
        {
            "name": "AdvertisersListResponse",
            "desc": "Advertiser List Response",
            "type": "object",
            "fields": [
                {
                    "name": "advertisers",
                    "desc": "Advertiser collection.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Advertiser"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#advertisersListResponse\".",
                    "type": "string",
                    "default": "dfareporting#advertisersListResponse"
                },
                {
                    "name": "nextPageToken",
                    "desc": "Pagination token to be used for the next list operation.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "CampaignCreativeAssociation",
            "desc": "Identifies a creative which has been associated with a given campaign.",
            "type": "object",
            "fields": [
                {
                    "name": "creativeId",
                    "desc": "ID of the creative associated with the campaign. This is a required field.",
                    "type": "int64"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#campaignCreativeAssociation\".",
                    "type": "string",
                    "default": "dfareporting#campaignCreativeAssociation"
                }
            ]
        },
        {
            "name": "CitiesListResponse",
            "desc": "City List Response",
            "type": "object",
            "fields": [
                {
                    "name": "cities",
                    "desc": "City collection.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "City"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#citiesListResponse\".",
                    "type": "string",
                    "default": "dfareporting#citiesListResponse"
                }
            ]
        },
        {
            "name": "CreativeOptimizationConfiguration",
            "desc": "Creative optimization settings.",
            "type": "object",
            "fields": [
                {
                    "name": "id",
                    "desc": "ID of this creative optimization config. This field is auto-generated when the campaign is inserted or updated. It can be null for existing campaigns.",
                    "type": "int64"
                },
                {
                    "name": "name",
                    "desc": "Name of this creative optimization config. This is a required field and must be less than 129 characters long.",
                    "type": "string"
                },
                {
                    "name": "optimizationActivitys",
                    "desc": "List of optimization activities associated with this configuration.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "OptimizationActivity"
                },
                {
                    "name": "optimizationModel",
                    "desc": "Optimization model for this configuration.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "CLICK"
                        },
                        {
                            "name": "POST_CLICK"
                        },
                        {
                            "name": "POST_CLICK_AND_IMPRESSION"
                        },
                        {
                            "name": "POST_IMPRESSION"
                        },
                        {
                            "name": "VIDEO_COMPLETION"
                        }
                    ]
                }
            ]
        },
        {
            "name": "DirectorySiteSettings",
            "desc": "Directory Site Settings",
            "type": "object",
            "fields": [
                {
                    "name": "dfp_settings",
                    "desc": "Directory site DFP settings.",
                    "type": "ref",
                    "refType": "DfpSettings"
                },
                {
                    "name": "instream_video_placement_accepted",
                    "desc": "Whether this site accepts in-stream video ads.",
                    "type": "bool"
                },
                {
                    "name": "interstitialPlacementAccepted",
                    "desc": "Whether this site accepts interstitial ads.",
                    "type": "bool"
                },
                {
                    "name": "nielsenOcrOptOut",
                    "desc": "Whether this directory site has disabled Nielsen OCR reach ratings.",
                    "type": "bool"
                },
                {
                    "name": "verificationTagOptOut",
                    "desc": "Whether this directory site has disabled generation of Verification ins tags.",
                    "type": "bool"
                },
                {
                    "name": "videoActiveViewOptOut",
                    "desc": "Whether this directory site has disabled active view for in-stream video creatives.",
                    "type": "bool"
                },
                {
                    "name": "activeViewOptOut",
                    "desc": "Whether this directory site has disabled active view creatives.",
                    "type": "bool"
                }
            ]
        },
        {
            "name": "FloodlightActivityGroup",
            "desc": "Contains properties of a Floodlight activity group.",
            "type": "object",
            "fields": [
                {
                    "name": "floodlightConfigurationIdDimensionValue",
                    "desc": "Dimension value for the ID of the floodlight configuration. This is a read-only, auto-generated field.",
                    "type": "ref",
                    "refType": "DimensionValue"
                },
                {
                    "name": "name",
                    "desc": "Name of this floodlight activity group. This is a required field. Must be less than 65 characters long and cannot contain quotes.",
                    "type": "string"
                },
                {
                    "name": "tagString",
                    "desc": "Value of the type= parameter in the floodlight tag, which the ad servers use to identify the activity group that the activity belongs to. This is optional: if empty, a new tag string will be generated for you. This string must be 1 to 8 characters long, with valid characters being [a-z][A-Z][0-9][-][ _ ]. This tag string must also be unique among activity groups of the same floodlight configuration. This field is read-only after insertion.",
                    "type": "string"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#floodlightActivityGroup\".",
                    "type": "string",
                    "default": "dfareporting#floodlightActivityGroup"
                },
                {
                    "name": "subaccountId",
                    "desc": "Subaccount ID of this floodlight activity group. This is a read-only field that can be left blank.",
                    "type": "int64"
                },
                {
                    "name": "accountId",
                    "desc": "Account ID of this floodlight activity group. This is a read-only field that can be left blank.",
                    "type": "int64"
                },
                {
                    "name": "advertiserId",
                    "desc": "Advertiser ID of this floodlight activity group. If this field is left blank, the value will be copied over either from the floodlight configuration's advertiser or from the existing activity group's advertiser.",
                    "type": "int64"
                },
                {
                    "name": "advertiserIdDimensionValue",
                    "desc": "Dimension value for the ID of the advertiser. This is a read-only, auto-generated field.",
                    "type": "ref",
                    "refType": "DimensionValue"
                },
                {
                    "name": "floodlightConfigurationId",
                    "desc": "Floodlight configuration ID of this floodlight activity group. This is a required field.",
                    "type": "int64"
                },
                {
                    "name": "id",
                    "desc": "ID of this floodlight activity group. This is a read-only, auto-generated field.",
                    "type": "int64"
                },
                {
                    "name": "idDimensionValue",
                    "desc": "Dimension value for the ID of this floodlight activity group. This is a read-only, auto-generated field.",
                    "type": "ref",
                    "refType": "DimensionValue"
                },
                {
                    "name": "type",
                    "desc": "Type of the floodlight activity group. This is a required field that is read-only after insertion.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "COUNTER"
                        },
                        {
                            "name": "SALE"
                        }
                    ]
                }
            ]
        },
        {
            "name": "Metric",
            "desc": "Represents a metric.",
            "type": "object",
            "fields": [
                {
                    "name": "kind",
                    "desc": "The kind of resource this is, in this case dfareporting#metric.",
                    "type": "string",
                    "default": "dfareporting#metric"
                },
                {
                    "name": "name",
                    "desc": "The metric name, e.g. dfa:impressions",
                    "type": "string"
                }
            ]
        },
        {
            "name": "PlacementTag",
            "desc": "Placement Tag",
            "type": "object",
            "fields": [
                {
                    "name": "placementId",
                    "desc": "Placement ID",
                    "type": "int64"
                },
                {
                    "name": "tagDatas",
                    "desc": "Tags generated for this placement.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "TagData"
                }
            ]
        },
        {
            "name": "Size",
            "desc": "Represents the dimensions of ads, placements, creatives, or creative assets.",
            "type": "object",
            "fields": [
                {
                    "name": "height",
                    "desc": "Height of this size.",
                    "type": "int32"
                },
                {
                    "name": "iab",
                    "desc": "IAB standard size. This is a read-only, auto-generated field.",
                    "type": "bool"
                },
                {
                    "name": "id",
                    "desc": "ID of this size. This is a read-only, auto-generated field.",
                    "type": "int64"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#size\".",
                    "type": "string",
                    "default": "dfareporting#size"
                },
                {
                    "name": "width",
                    "desc": "Width of this size.",
                    "type": "int32"
                }
            ]
        },
        {
            "name": "UserProfile",
            "desc": "Represents a UserProfile resource.",
            "type": "object",
            "fields": [
                {
                    "name": "kind",
                    "desc": "The kind of resource this is, in this case dfareporting#userProfile.",
                    "type": "string",
                    "default": "dfareporting#userProfile"
                },
                {
                    "name": "profileId",
                    "desc": "The unique ID of the user profile.",
                    "type": "int64"
                },
                {
                    "name": "subAccountId",
                    "desc": "The sub account ID this profile belongs to if applicable.",
                    "type": "int64"
                },
                {
                    "name": "subAccountName",
                    "desc": "The sub account name this profile belongs to if applicable.",
                    "type": "string"
                },
                {
                    "name": "userName",
                    "desc": "The user name.",
                    "type": "string"
                },
                {
                    "name": "accountId",
                    "desc": "The account ID to which this profile belongs.",
                    "type": "int64"
                },
                {
                    "name": "accountName",
                    "desc": "The account name this profile belongs to.",
                    "type": "string"
                },
                {
                    "name": "etag",
                    "desc": "The eTag of this response for caching purposes.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "Conversion",
            "desc": "A Conversion represents when a user successfully performs a desired action after seeing an ad.",
            "type": "object",
            "fields": [
                {
                    "name": "limitAdTracking",
                    "desc": "Whether Limit Ad Tracking is enabled. When set to true, the conversion will be used for reporting but not targeting. This will prevent remarketing.",
                    "type": "bool"
                },
                {
                    "name": "mobileDeviceId",
                    "desc": "The mobile device ID. This field is mutually exclusive with encryptedUserId and encryptedUserIdCandidates[]. This or encryptedUserId or encryptedUserIdCandidates[] is a required field.",
                    "type": "string"
                },
                {
                    "name": "ordinal",
                    "desc": "The ordinal of the conversion. Use this field to control how conversions of the same user and day are de-duplicated. This is a required field.",
                    "type": "string"
                },
                {
                    "name": "quantity",
                    "desc": "The quantity of the conversion.",
                    "type": "int64"
                },
                {
                    "name": "timestampMicros",
                    "desc": "The timestamp of conversion, in Unix epoch micros. This is a required field.",
                    "type": "int64"
                },
                {
                    "name": "encryptedUserId",
                    "desc": "The alphanumeric encrypted user ID. When set, encryptionInfo should also be specified. This field is mutually exclusive with encryptedUserIdCandidates[] and mobileDeviceId. This or encryptedUserIdCandidates[] or mobileDeviceId is a required field.",
                    "type": "string"
                },
                {
                    "name": "floodlightActivityId",
                    "desc": "Floodlight Activity ID of this conversion. This is a required field.",
                    "type": "int64"
                },
                {
                    "name": "floodlightConfigurationId",
                    "desc": "Floodlight Configuration ID of this conversion. This is a required field.",
                    "type": "int64"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#conversion\".",
                    "type": "string",
                    "default": "dfareporting#conversion"
                },
                {
                    "name": "value",
                    "desc": "The value of the conversion.",
                    "type": "float64"
                },
                {
                    "name": "childDirectedTreatment",
                    "desc": "Whether the conversion was directed toward children.",
                    "type": "bool"
                },
                {
                    "name": "customVariables",
                    "desc": "Custom floodlight variables.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "CustomFloodlightVariable"
                },
                {
                    "name": "encryptedUserIdCandidates",
                    "desc": "A list of the alphanumeric encrypted user IDs. Any user ID with exposure prior to the conversion timestamp will be used in the inserted conversion. If no such user ID is found then the conversion will be rejected with NO_COOKIE_MATCH_FOUND error. When set, encryptionInfo should also be specified. This field should only be used when calling conversions.batchinsert. This field is mutually exclusive with encryptedUserId and mobileDeviceId. This or encryptedUserId or mobileDeviceId is a required field.",
                    "collection": "array",
                    "type": "string"
                }
            ]
        },
        {
            "name": "DynamicTargetingKeysListResponse",
            "desc": "Dynamic Targeting Key List Response",
            "type": "object",
            "fields": [
                {
                    "name": "dynamicTargetingKeys",
                    "desc": "Dynamic targeting key collection.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "DynamicTargetingKey"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#dynamicTargetingKeysListResponse\".",
                    "type": "string",
                    "default": "dfareporting#dynamicTargetingKeysListResponse"
                }
            ]
        },
        {
            "name": "LandingPage",
            "desc": "Contains information about where a user's browser is taken after the user clicks an ad.",
            "type": "object",
            "fields": [
                {
                    "name": "id",
                    "desc": "ID of this landing page. This is a read-only, auto-generated field.",
                    "type": "int64"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#landingPage\".",
                    "type": "string",
                    "default": "dfareporting#landingPage"
                },
                {
                    "name": "name",
                    "desc": "Name of this landing page. This is a required field. It must be less than 256 characters long, and must be unique among landing pages of the same campaign.",
                    "type": "string"
                },
                {
                    "name": "url",
                    "desc": "URL of this landing page. This is a required field.",
                    "type": "string"
                },
                {
                    "name": "default",
                    "desc": "Whether or not this landing page will be assigned to any ads or creatives that do not have a landing page assigned explicitly. Only one default landing page is allowed per campaign.",
                    "type": "bool"
                }
            ]
        },
        {
            "name": "OperatingSystem",
            "desc": "Contains information about an operating system that can be targeted by ads.",
            "type": "object",
            "fields": [
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#operatingSystem\".",
                    "type": "string",
                    "default": "dfareporting#operatingSystem"
                },
                {
                    "name": "mobile",
                    "desc": "Whether this operating system is for mobile.",
                    "type": "bool"
                },
                {
                    "name": "name",
                    "desc": "Name of this operating system.",
                    "type": "string"
                },
                {
                    "name": "dartId",
                    "desc": "DART ID of this operating system. This is the ID used for targeting.",
                    "type": "int64"
                },
                {
                    "name": "desktop",
                    "desc": "Whether this operating system is for desktop.",
                    "type": "bool"
                }
            ]
        },
        {
            "name": "UserDefinedVariableConfiguration",
            "desc": "User Defined Variable configuration.",
            "type": "object",
            "fields": [
                {
                    "name": "dataType",
                    "desc": "Data type for the variable. This is a required field.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "NUMBER"
                        },
                        {
                            "name": "STRING"
                        }
                    ]
                },
                {
                    "name": "reportName",
                    "desc": "User-friendly name for the variable which will appear in reports. This is a required field, must be less than 64 characters long, and cannot contain the following characters: \"\"\u003c\u003e\".",
                    "type": "string"
                },
                {
                    "name": "variableType",
                    "desc": "Variable name in the tag. This is a required field.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "U1"
                        },
                        {
                            "name": "U10"
                        },
                        {
                            "name": "U100"
                        },
                        {
                            "name": "U11"
                        },
                        {
                            "name": "U12"
                        },
                        {
                            "name": "U13"
                        },
                        {
                            "name": "U14"
                        },
                        {
                            "name": "U15"
                        },
                        {
                            "name": "U16"
                        },
                        {
                            "name": "U17"
                        },
                        {
                            "name": "U18"
                        },
                        {
                            "name": "U19"
                        },
                        {
                            "name": "U2"
                        },
                        {
                            "name": "U20"
                        },
                        {
                            "name": "U21"
                        },
                        {
                            "name": "U22"
                        },
                        {
                            "name": "U23"
                        },
                        {
                            "name": "U24"
                        },
                        {
                            "name": "U25"
                        },
                        {
                            "name": "U26"
                        },
                        {
                            "name": "U27"
                        },
                        {
                            "name": "U28"
                        },
                        {
                            "name": "U29"
                        },
                        {
                            "name": "U3"
                        },
                        {
                            "name": "U30"
                        },
                        {
                            "name": "U31"
                        },
                        {
                            "name": "U32"
                        },
                        {
                            "name": "U33"
                        },
                        {
                            "name": "U34"
                        },
                        {
                            "name": "U35"
                        },
                        {
                            "name": "U36"
                        },
                        {
                            "name": "U37"
                        },
                        {
                            "name": "U38"
                        },
                        {
                            "name": "U39"
                        },
                        {
                            "name": "U4"
                        },
                        {
                            "name": "U40"
                        },
                        {
                            "name": "U41"
                        },
                        {
                            "name": "U42"
                        },
                        {
                            "name": "U43"
                        },
                        {
                            "name": "U44"
                        },
                        {
                            "name": "U45"
                        },
                        {
                            "name": "U46"
                        },
                        {
                            "name": "U47"
                        },
                        {
                            "name": "U48"
                        },
                        {
                            "name": "U49"
                        },
                        {
                            "name": "U5"
                        },
                        {
                            "name": "U50"
                        },
                        {
                            "name": "U51"
                        },
                        {
                            "name": "U52"
                        },
                        {
                            "name": "U53"
                        },
                        {
                            "name": "U54"
                        },
                        {
                            "name": "U55"
                        },
                        {
                            "name": "U56"
                        },
                        {
                            "name": "U57"
                        },
                        {
                            "name": "U58"
                        },
                        {
                            "name": "U59"
                        },
                        {
                            "name": "U6"
                        },
                        {
                            "name": "U60"
                        },
                        {
                            "name": "U61"
                        },
                        {
                            "name": "U62"
                        },
                        {
                            "name": "U63"
                        },
                        {
                            "name": "U64"
                        },
                        {
                            "name": "U65"
                        },
                        {
                            "name": "U66"
                        },
                        {
                            "name": "U67"
                        },
                        {
                            "name": "U68"
                        },
                        {
                            "name": "U69"
                        },
                        {
                            "name": "U7"
                        },
                        {
                            "name": "U70"
                        },
                        {
                            "name": "U71"
                        },
                        {
                            "name": "U72"
                        },
                        {
                            "name": "U73"
                        },
                        {
                            "name": "U74"
                        },
                        {
                            "name": "U75"
                        },
                        {
                            "name": "U76"
                        },
                        {
                            "name": "U77"
                        },
                        {
                            "name": "U78"
                        },
                        {
                            "name": "U79"
                        },
                        {
                            "name": "U8"
                        },
                        {
                            "name": "U80"
                        },
                        {
                            "name": "U81"
                        },
                        {
                            "name": "U82"
                        },
                        {
                            "name": "U83"
                        },
                        {
                            "name": "U84"
                        },
                        {
                            "name": "U85"
                        },
                        {
                            "name": "U86"
                        },
                        {
                            "name": "U87"
                        },
                        {
                            "name": "U88"
                        },
                        {
                            "name": "U89"
                        },
                        {
                            "name": "U9"
                        },
                        {
                            "name": "U90"
                        },
                        {
                            "name": "U91"
                        },
                        {
                            "name": "U92"
                        },
                        {
                            "name": "U93"
                        },
                        {
                            "name": "U94"
                        },
                        {
                            "name": "U95"
                        },
                        {
                            "name": "U96"
                        },
                        {
                            "name": "U97"
                        },
                        {
                            "name": "U98"
                        },
                        {
                            "name": "U99"
                        }
                    ]
                }
            ]
        },
        {
            "name": "Placement",
            "desc": "Contains properties of a placement.",
            "type": "object",
            "fields": [
                {
                    "name": "advertiserId",
                    "desc": "Advertiser ID of this placement. This field can be left blank.",
                    "type": "int64"
                },
                {
                    "name": "campaignId",
                    "desc": "Campaign ID of this placement. This field is a required field on insertion.",
                    "type": "int64"
                },
                {
                    "name": "contentCategoryId",
                    "desc": "ID of the content category assigned to this placement.",
                    "type": "int64"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#placement\".",
                    "type": "string",
                    "default": "dfareporting#placement"
                },
                {
                    "name": "paymentSource",
                    "desc": "Payment source for this placement. This is a required field that is read-only after insertion.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "PLACEMENT_AGENCY_PAID"
                        },
                        {
                            "name": "PLACEMENT_PUBLISHER_PAID"
                        }
                    ]
                },
                {
                    "name": "primary",
                    "desc": "Whether this placement is the primary placement of a roadblock (placement group). You cannot change this field from true to false. Setting this field to true will automatically set the primary field on the original primary placement of the roadblock to false, and it will automatically set the roadblock's primaryPlacementId field to the ID of this placement.",
                    "type": "bool"
                },
                {
                    "name": "publisherUpdateInfo",
                    "desc": "Information about the last publisher update. This is a read-only field.",
                    "type": "ref",
                    "refType": "LastModifiedInfo"
                },
                {
                    "name": "accountId",
                    "desc": "Account ID of this placement. This field can be left blank.",
                    "type": "int64"
                },
                {
                    "name": "videoSettings",
                    "desc": "A collection of settings which affect video creatives served through this placement. Applicable to placements with IN_STREAM_VIDEO compatibility.",
                    "type": "ref",
                    "refType": "VideoSettings"
                },
                {
                    "name": "siteId",
                    "desc": "Site ID associated with this placement. On insert, you must set either this field or the directorySiteId field to specify the site associated with this placement. This is a required field that is read-only after insertion.",
                    "type": "int64"
                },
                {
                    "name": "placementGroupId",
                    "desc": "ID of this placement's group, if applicable.",
                    "type": "int64"
                },
                {
                    "name": "placementStrategyId",
                    "desc": "ID of the placement strategy assigned to this placement.",
                    "type": "int64"
                },
                {
                    "name": "sslRequired",
                    "desc": "Whether creatives assigned to this placement must be SSL-compliant.",
                    "type": "bool"
                },
                {
                    "name": "createInfo",
                    "desc": "Information about the creation of this placement. This is a read-only field.",
                    "type": "ref",
                    "refType": "LastModifiedInfo"
                },
                {
                    "name": "status",
                    "desc": "Third-party placement status.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "ACKNOWLEDGE_ACCEPTANCE"
                        },
                        {
                            "name": "ACKNOWLEDGE_REJECTION"
                        },
                        {
                            "name": "DRAFT"
                        },
                        {
                            "name": "PAYMENT_ACCEPTED"
                        },
                        {
                            "name": "PAYMENT_REJECTED"
                        },
                        {
                            "name": "PENDING_REVIEW"
                        }
                    ]
                },
                {
                    "name": "pricingSchedule",
                    "desc": "Pricing schedule of this placement. This field is required on insertion, specifically subfields startDate, endDate and pricingType.",
                    "type": "ref",
                    "refType": "PricingSchedule"
                },
                {
                    "name": "subaccountId",
                    "desc": "Subaccount ID of this placement. This field can be left blank.",
                    "type": "int64"
                },
                {
                    "name": "tagFormats",
                    "desc": "Tag formats to generate for this placement. This field is required on insertion.\nAcceptable values are:\n- \"PLACEMENT_TAG_STANDARD\"\n- \"PLACEMENT_TAG_IFRAME_JAVASCRIPT\"\n- \"PLACEMENT_TAG_IFRAME_ILAYER\"\n- \"PLACEMENT_TAG_INTERNAL_REDIRECT\"\n- \"PLACEMENT_TAG_JAVASCRIPT\"\n- \"PLACEMENT_TAG_INTERSTITIAL_IFRAME_JAVASCRIPT\"\n- \"PLACEMENT_TAG_INTERSTITIAL_INTERNAL_REDIRECT\"\n- \"PLACEMENT_TAG_INTERSTITIAL_JAVASCRIPT\"\n- \"PLACEMENT_TAG_CLICK_COMMANDS\"\n- \"PLACEMENT_TAG_INSTREAM_VIDEO_PREFETCH\"\n- \"PLACEMENT_TAG_TRACKING\"\n- \"PLACEMENT_TAG_TRACKING_IFRAME\"\n- \"PLACEMENT_TAG_TRACKING_JAVASCRIPT\"",
                    "collection": "array",
                    "type": "string"
                },
                {
                    "name": "tagSetting",
                    "desc": "Tag settings for this placement.",
                    "type": "ref",
                    "refType": "TagSetting"
                },
                {
                    "name": "name",
                    "desc": "Name of this placement.This is a required field and must be less than 256 characters long.",
                    "type": "string"
                },
                {
                    "name": "id",
                    "desc": "ID of this placement. This is a read-only, auto-generated field.",
                    "type": "int64"
                },
                {
                    "name": "externalId",
                    "desc": "External ID for this placement.",
                    "type": "string"
                },
                {
                    "name": "directorySiteIdDimensionValue",
                    "desc": "Dimension value for the ID of the directory site. This is a read-only, auto-generated field.",
                    "type": "ref",
                    "refType": "DimensionValue"
                },
                {
                    "name": "keyName",
                    "desc": "Key name of this placement. This is a read-only, auto-generated field.",
                    "type": "string"
                },
                {
                    "name": "lastModifiedInfo",
                    "desc": "Information about the most recent modification of this placement. This is a read-only field.",
                    "type": "ref",
                    "refType": "LastModifiedInfo"
                },
                {
                    "name": "lookbackConfiguration",
                    "desc": "Lookback window settings for this placement.",
                    "type": "ref",
                    "refType": "LookbackConfiguration"
                },
                {
                    "name": "paymentApproved",
                    "desc": "Whether payment was approved for this placement. This is a read-only field relevant only to publisher-paid placements.",
                    "type": "bool"
                },
                {
                    "name": "comment",
                    "desc": "Comments for this placement.",
                    "type": "string"
                },
                {
                    "name": "compatibility",
                    "desc": "Placement compatibility. DISPLAY and DISPLAY_INTERSTITIAL refer to rendering on desktop, on mobile devices or in mobile apps for regular or interstitial ads respectively. APP and APP_INTERSTITIAL are no longer allowed for new placement insertions. Instead, use DISPLAY or DISPLAY_INTERSTITIAL. IN_STREAM_VIDEO refers to rendering in in-stream video ads developed with the VAST standard. This field is required on insertion.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "APP"
                        },
                        {
                            "name": "APP_INTERSTITIAL"
                        },
                        {
                            "name": "DISPLAY"
                        },
                        {
                            "name": "DISPLAY_INTERSTITIAL"
                        },
                        {
                            "name": "IN_STREAM_VIDEO"
                        }
                    ]
                },
                {
                    "name": "directorySiteId",
                    "desc": "Directory site ID of this placement. On insert, you must set either this field or the siteId field to specify the site associated with this placement. This is a required field that is read-only after insertion.",
                    "type": "int64"
                },
                {
                    "name": "siteIdDimensionValue",
                    "desc": "Dimension value for the ID of the site. This is a read-only, auto-generated field.",
                    "type": "ref",
                    "refType": "DimensionValue"
                },
                {
                    "name": "size",
                    "desc": "Size associated with this placement. When inserting or updating a placement, only the size ID field is used. This field is required on insertion.",
                    "type": "ref",
                    "refType": "Size"
                },
                {
                    "name": "advertiserIdDimensionValue",
                    "desc": "Dimension value for the ID of the advertiser. This is a read-only, auto-generated field.",
                    "type": "ref",
                    "refType": "DimensionValue"
                },
                {
                    "name": "campaignIdDimensionValue",
                    "desc": "Dimension value for the ID of the campaign. This is a read-only, auto-generated field.",
                    "type": "ref",
                    "refType": "DimensionValue"
                },
                {
                    "name": "idDimensionValue",
                    "desc": "Dimension value for the ID of this placement. This is a read-only, auto-generated field.",
                    "type": "ref",
                    "refType": "DimensionValue"
                },
                {
                    "name": "placementGroupIdDimensionValue",
                    "desc": "Dimension value for the ID of the placement group. This is a read-only, auto-generated field.",
                    "type": "ref",
                    "refType": "DimensionValue"
                },
                {
                    "name": "videoActiveViewOptOut",
                    "desc": "Whether Verification and ActiveView are disabled for in-stream video creatives for this placement. The same setting videoActiveViewOptOut exists on the site level -- the opt out occurs if either of these settings are true. These settings are distinct from DirectorySites.settings.activeViewOptOut or Sites.siteSettings.activeViewOptOut which only apply to display ads. However, Accounts.activeViewOptOut opts out both video traffic, as well as display ads, from Verification and ActiveView.",
                    "type": "bool"
                },
                {
                    "name": "vpaidAdapterChoice",
                    "desc": "VPAID adapter setting for this placement. Controls which VPAID format the measurement adapter will use for in-stream video creatives assigned to this placement.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "BOTH"
                        },
                        {
                            "name": "DEFAULT"
                        },
                        {
                            "name": "FLASH"
                        },
                        {
                            "name": "HTML5"
                        }
                    ]
                },
                {
                    "name": "archived",
                    "desc": "Whether this placement is archived.",
                    "type": "bool"
                }
            ]
        },
        {
            "name": "Activities",
            "desc": "Represents an activity group.",
            "type": "object",
            "fields": [
                {
                    "name": "filters",
                    "desc": "List of activity filters. The dimension values need to be all either of type \"dfa:activity\" or \"dfa:activityGroup\".",
                    "collection": "array",
                    "type": "ref",
                    "refType": "DimensionValue"
                },
                {
                    "name": "kind",
                    "desc": "The kind of resource this is, in this case dfareporting#activities.",
                    "type": "string",
                    "default": "dfareporting#activities"
                },
                {
                    "name": "metricNames",
                    "desc": "List of names of floodlight activity metrics.",
                    "collection": "array",
                    "type": "string"
                }
            ]
        },
        {
            "name": "CompanionClickThroughOverride",
            "desc": "Companion Click-through override.",
            "type": "object",
            "fields": [
                {
                    "name": "clickThroughUrl",
                    "desc": "Click-through URL of this companion click-through override.",
                    "type": "ref",
                    "refType": "ClickThroughUrl"
                },
                {
                    "name": "creativeId",
                    "desc": "ID of the creative for this companion click-through override.",
                    "type": "int64"
                }
            ]
        },
        {
            "name": "CreativeFieldAssignment",
            "desc": "Creative Field Assignment.",
            "type": "object",
            "fields": [
                {
                    "name": "creativeFieldId",
                    "desc": "ID of the creative field.",
                    "type": "int64"
                },
                {
                    "name": "creativeFieldValueId",
                    "desc": "ID of the creative field value.",
                    "type": "int64"
                }
            ]
        },
        {
            "name": "FloodlightActivityPublisherDynamicTag",
            "desc": "Publisher Dynamic Tag",
            "type": "object",
            "fields": [
                {
                    "name": "directorySiteId",
                    "desc": "Directory site ID of this dynamic tag. This is a write-only field that can be used as an alternative to the siteId field. When this resource is retrieved, only the siteId field will be populated.",
                    "type": "int64"
                },
                {
                    "name": "dynamicTag",
                    "desc": "Dynamic floodlight tag.",
                    "type": "ref",
                    "refType": "FloodlightActivityDynamicTag"
                },
                {
                    "name": "siteId",
                    "desc": "Site ID of this dynamic tag.",
                    "type": "int64"
                },
                {
                    "name": "siteIdDimensionValue",
                    "desc": "Dimension value for the ID of the site. This is a read-only, auto-generated field.",
                    "type": "ref",
                    "refType": "DimensionValue"
                },
                {
                    "name": "viewThrough",
                    "desc": "Whether this tag is applicable only for view-throughs.",
                    "type": "bool"
                },
                {
                    "name": "clickThrough",
                    "desc": "Whether this tag is applicable only for click-throughs.",
                    "type": "bool"
                }
            ]
        },
        {
            "name": "Language",
            "desc": "Contains information about a language that can be targeted by ads.",
            "type": "object",
            "fields": [
                {
                    "name": "id",
                    "desc": "Language ID of this language. This is the ID used for targeting and generating reports.",
                    "type": "int64"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#language\".",
                    "type": "string",
                    "default": "dfareporting#language"
                },
                {
                    "name": "languageCode",
                    "desc": "Format of language code is an ISO 639 two-letter language code optionally followed by an underscore followed by an ISO 3166 code. Examples are \"en\" for English or \"zh_CN\" for Simplified Chinese.",
                    "type": "string"
                },
                {
                    "name": "name",
                    "desc": "Name of this language.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "Metro",
            "desc": "Contains information about a metro region that can be targeted by ads.",
            "type": "object",
            "fields": [
                {
                    "name": "metroCode",
                    "desc": "Metro code of this metro region. This is equivalent to dma_id.",
                    "type": "string"
                },
                {
                    "name": "name",
                    "desc": "Name of this metro region.",
                    "type": "string"
                },
                {
                    "name": "countryCode",
                    "desc": "Country code of the country to which this metro region belongs.",
                    "type": "string"
                },
                {
                    "name": "countryDartId",
                    "desc": "DART ID of the country to which this metro region belongs.",
                    "type": "int64"
                },
                {
                    "name": "dartId",
                    "desc": "DART ID of this metro region.",
                    "type": "int64"
                },
                {
                    "name": "dmaId",
                    "desc": "DMA ID of this metro region. This is the ID used for targeting and generating reports, and is equivalent to metro_code.",
                    "type": "int64"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#metro\".",
                    "type": "string",
                    "default": "dfareporting#metro"
                }
            ]
        },
        {
            "name": "PathToConversionReportCompatibleFields",
            "desc": "Represents fields that are compatible to be selected for a report of type \"PATH_TO_CONVERSION\".",
            "type": "object",
            "fields": [
                {
                    "name": "conversionDimensions",
                    "desc": "Conversion dimensions which are compatible to be selected in the \"conversionDimensions\" section of the report.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Dimension"
                },
                {
                    "name": "customFloodlightVariables",
                    "desc": "Custom floodlight variables which are compatible to be selected in the \"customFloodlightVariables\" section of the report.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Dimension"
                },
                {
                    "name": "kind",
                    "desc": "The kind of resource this is, in this case dfareporting#pathToConversionReportCompatibleFields.",
                    "type": "string",
                    "default": "dfareporting#pathToConversionReportCompatibleFields"
                },
                {
                    "name": "metrics",
                    "desc": "Metrics which are compatible to be selected in the \"metricNames\" section of the report.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Metric"
                },
                {
                    "name": "perInteractionDimensions",
                    "desc": "Per-interaction dimensions which are compatible to be selected in the \"perInteractionDimensions\" section of the report.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Dimension"
                }
            ]
        },
        {
            "name": "SitesListResponse",
            "desc": "Site List Response",
            "type": "object",
            "fields": [
                {
                    "name": "sites",
                    "desc": "Site collection.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Site"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#sitesListResponse\".",
                    "type": "string",
                    "default": "dfareporting#sitesListResponse"
                },
                {
                    "name": "nextPageToken",
                    "desc": "Pagination token to be used for the next list operation.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "OrderContact",
            "desc": "Contact of an order.",
            "type": "object",
            "fields": [
                {
                    "name": "signatureUserProfileId",
                    "desc": "ID of the user profile containing the signature that will be embedded into order documents.",
                    "type": "int64"
                },
                {
                    "name": "contactInfo",
                    "desc": "Free-form information about this contact. It could be any information related to this contact in addition to type, title, name, and signature user profile ID.",
                    "type": "string"
                },
                {
                    "name": "contactName",
                    "desc": "Name of this contact.",
                    "type": "string"
                },
                {
                    "name": "contactTitle",
                    "desc": "Title of this contact.",
                    "type": "string"
                },
                {
                    "name": "contactType",
                    "desc": "Type of this contact.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "PLANNING_ORDER_CONTACT_BUYER_BILLING_CONTACT"
                        },
                        {
                            "name": "PLANNING_ORDER_CONTACT_BUYER_CONTACT"
                        },
                        {
                            "name": "PLANNING_ORDER_CONTACT_SELLER_CONTACT"
                        }
                    ]
                }
            ]
        },
        {
            "name": "ReportList",
            "desc": "Represents the list of reports.",
            "type": "object",
            "fields": [
                {
                    "name": "etag",
                    "desc": "The eTag of this response for caching purposes.",
                    "type": "string"
                },
                {
                    "name": "items",
                    "desc": "The reports returned in this response.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Report"
                },
                {
                    "name": "kind",
                    "desc": "The kind of list this is, in this case dfareporting#reportList.",
                    "type": "string",
                    "default": "dfareporting#reportList"
                },
                {
                    "name": "nextPageToken",
                    "desc": "Continuation token used to page through reports. To retrieve the next page of results, set the next request's \"pageToken\" to the value of this field. The page token is only valid for a limited amount of time and should not be persisted.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "AccountUserProfilesListResponse",
            "desc": "Account User Profile List Response",
            "type": "object",
            "fields": [
                {
                    "name": "accountUserProfiles",
                    "desc": "Account user profile collection.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "AccountUserProfile"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#accountUserProfilesListResponse\".",
                    "type": "string",
                    "default": "dfareporting#accountUserProfilesListResponse"
                },
                {
                    "name": "nextPageToken",
                    "desc": "Pagination token to be used for the next list operation.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "AdSlot",
            "desc": "Ad Slot",
            "type": "object",
            "fields": [
                {
                    "name": "linkedPlacementId",
                    "desc": "ID of the placement from an external platform that is linked to this ad slot.",
                    "type": "int64"
                },
                {
                    "name": "name",
                    "desc": "Name of this ad slot.",
                    "type": "string"
                },
                {
                    "name": "paymentSourceType",
                    "desc": "Payment source type of this ad slot.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "PLANNING_PAYMENT_SOURCE_TYPE_AGENCY_PAID"
                        },
                        {
                            "name": "PLANNING_PAYMENT_SOURCE_TYPE_PUBLISHER_PAID"
                        }
                    ]
                },
                {
                    "name": "primary",
                    "desc": "Primary ad slot of a roadblock inventory item.",
                    "type": "bool"
                },
                {
                    "name": "width",
                    "desc": "Width of this ad slot.",
                    "type": "int64"
                },
                {
                    "name": "comment",
                    "desc": "Comment for this ad slot.",
                    "type": "string"
                },
                {
                    "name": "compatibility",
                    "desc": "Ad slot compatibility. DISPLAY and DISPLAY_INTERSTITIAL refer to rendering either on desktop, mobile devices or in mobile apps for regular or interstitial ads respectively. APP and APP_INTERSTITIAL are for rendering in mobile apps. IN_STREAM_VIDEO refers to rendering in in-stream video ads developed with the VAST standard.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "APP"
                        },
                        {
                            "name": "APP_INTERSTITIAL"
                        },
                        {
                            "name": "DISPLAY"
                        },
                        {
                            "name": "DISPLAY_INTERSTITIAL"
                        },
                        {
                            "name": "IN_STREAM_VIDEO"
                        }
                    ]
                },
                {
                    "name": "height",
                    "desc": "Height of this ad slot.",
                    "type": "int64"
                }
            ]
        },
        {
            "name": "ConnectionType",
            "desc": "Contains information about an internet connection type that can be targeted by ads. Clients can use the connection type to target mobile vs. broadband users.",
            "type": "object",
            "fields": [
                {
                    "name": "id",
                    "desc": "ID of this connection type.",
                    "type": "int64"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#connectionType\".",
                    "type": "string",
                    "default": "dfareporting#connectionType"
                },
                {
                    "name": "name",
                    "desc": "Name of this connection type.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "CreativesListResponse",
            "desc": "Creative List Response",
            "type": "object",
            "fields": [
                {
                    "name": "creatives",
                    "desc": "Creative collection.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Creative"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#creativesListResponse\".",
                    "type": "string",
                    "default": "dfareporting#creativesListResponse"
                },
                {
                    "name": "nextPageToken",
                    "desc": "Pagination token to be used for the next list operation.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "OperatingSystemsListResponse",
            "desc": "Operating System List Response",
            "type": "object",
            "fields": [
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#operatingSystemsListResponse\".",
                    "type": "string",
                    "default": "dfareporting#operatingSystemsListResponse"
                },
                {
                    "name": "operatingSystems",
                    "desc": "Operating system collection.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "OperatingSystem"
                }
            ]
        },
        {
            "name": "TargetableRemarketingList",
            "desc": "Contains properties of a targetable remarketing list. Remarketing enables you to create lists of users who have performed specific actions on a site, then target ads to members of those lists. This resource is a read-only view of a remarketing list to be used to faciliate targeting ads to specific lists. Remarketing lists that are owned by your advertisers and those that are shared to your advertisers or account are accessible via this resource. To manage remarketing lists that are owned by your advertisers, use the RemarketingLists resource.",
            "type": "object",
            "fields": [
                {
                    "name": "accountId",
                    "desc": "Account ID of this remarketing list. This is a read-only, auto-generated field that is only returned in GET requests.",
                    "type": "int64"
                },
                {
                    "name": "active",
                    "desc": "Whether this targetable remarketing list is active.",
                    "type": "bool"
                },
                {
                    "name": "advertiserId",
                    "desc": "Dimension value for the advertiser ID that owns this targetable remarketing list.",
                    "type": "int64"
                },
                {
                    "name": "advertiserIdDimensionValue",
                    "desc": "Dimension value for the ID of the advertiser.",
                    "type": "ref",
                    "refType": "DimensionValue"
                },
                {
                    "name": "description",
                    "desc": "Targetable remarketing list description.",
                    "type": "string"
                },
                {
                    "name": "listSize",
                    "desc": "Number of users currently in the list. This is a read-only field.",
                    "type": "int64"
                },
                {
                    "name": "id",
                    "desc": "Targetable remarketing list ID.",
                    "type": "int64"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#targetableRemarketingList\".",
                    "type": "string",
                    "default": "dfareporting#targetableRemarketingList"
                },
                {
                    "name": "lifeSpan",
                    "desc": "Number of days that a user should remain in the targetable remarketing list without an impression.",
                    "type": "int64"
                },
                {
                    "name": "listSource",
                    "desc": "Product from which this targetable remarketing list was originated.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "REMARKETING_LIST_SOURCE_ADX"
                        },
                        {
                            "name": "REMARKETING_LIST_SOURCE_DBM"
                        },
                        {
                            "name": "REMARKETING_LIST_SOURCE_DFA"
                        },
                        {
                            "name": "REMARKETING_LIST_SOURCE_DFP"
                        },
                        {
                            "name": "REMARKETING_LIST_SOURCE_DMP"
                        },
                        {
                            "name": "REMARKETING_LIST_SOURCE_GA"
                        },
                        {
                            "name": "REMARKETING_LIST_SOURCE_GPLUS"
                        },
                        {
                            "name": "REMARKETING_LIST_SOURCE_OTHER"
                        },
                        {
                            "name": "REMARKETING_LIST_SOURCE_PLAY_STORE"
                        },
                        {
                            "name": "REMARKETING_LIST_SOURCE_XFP"
                        },
                        {
                            "name": "REMARKETING_LIST_SOURCE_YOUTUBE"
                        }
                    ]
                },
                {
                    "name": "name",
                    "desc": "Name of the targetable remarketing list. Is no greater than 128 characters long.",
                    "type": "string"
                },
                {
                    "name": "subaccountId",
                    "desc": "Subaccount ID of this remarketing list. This is a read-only, auto-generated field that is only returned in GET requests.",
                    "type": "int64"
                }
            ]
        },
        {
            "name": "TechnologyTargeting",
            "desc": "Technology Targeting.",
            "type": "object",
            "fields": [
                {
                    "name": "connectionTypes",
                    "desc": "Connection types that this ad targets. For each connection type only id is required. The other fields are populated automatically when the ad is inserted or updated.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "ConnectionType"
                },
                {
                    "name": "mobileCarriers",
                    "desc": "Mobile carriers that this ad targets. For each mobile carrier only id is required, and the other fields are populated automatically when the ad is inserted or updated. If targeting a mobile carrier, do not set targeting for any zip codes.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "MobileCarrier"
                },
                {
                    "name": "operatingSystemVersions",
                    "desc": "Operating system versions that this ad targets. To target all versions, use operatingSystems. For each operating system version, only id is required. The other fields are populated automatically when the ad is inserted or updated. If targeting an operating system version, do not set targeting for the corresponding operating system in operatingSystems.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "OperatingSystemVersion"
                },
                {
                    "name": "operatingSystems",
                    "desc": "Operating systems that this ad targets. To target specific versions, use operatingSystemVersions. For each operating system only dartId is required. The other fields are populated automatically when the ad is inserted or updated. If targeting an operating system, do not set targeting for operating system versions for the same operating system.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "OperatingSystem"
                },
                {
                    "name": "platformTypes",
                    "desc": "Platform types that this ad targets. For example, desktop, mobile, or tablet. For each platform type, only id is required, and the other fields are populated automatically when the ad is inserted or updated.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "PlatformType"
                },
                {
                    "name": "browsers",
                    "desc": "Browsers that this ad targets. For each browser either set browserVersionId or dartId along with the version numbers. If both are specified, only browserVersionId will be used. The other fields are populated automatically when the ad is inserted or updated.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Browser"
                }
            ]
        },
        {
            "name": "Report",
            "desc": "Represents a Report resource.",
            "type": "object",
            "fields": [
                {
                    "name": "floodlightCriteria",
                    "desc": "The report criteria for a report of type \"FLOODLIGHT\".",
                    "type": "object",
                    "fields": [
                        {
                            "name": "metricNames",
                            "desc": "The list of names of metrics the report should include.",
                            "collection": "array",
                            "type": "string"
                        },
                        {
                            "name": "reportProperties",
                            "desc": "The properties of the report.",
                            "type": "object",
                            "fields": [
                                {
                                    "name": "includeUnattributedIPConversions",
                                    "desc": "Include conversions that have no associated cookies and no exposures. It’s therefore impossible to know how the user was exposed to your ads during the lookback window prior to a conversion.",
                                    "type": "bool"
                                },
                                {
                                    "name": "includeAttributedIPConversions",
                                    "desc": "Include conversions that have no cookie, but do have an exposure path.",
                                    "type": "bool"
                                },
                                {
                                    "name": "includeUnattributedCookieConversions",
                                    "desc": "Include conversions of users with a DoubleClick cookie but without an exposure. That means the user did not click or see an ad from the advertiser within the Floodlight group, or that the interaction happened outside the lookback window.",
                                    "type": "bool"
                                }
                            ]
                        },
                        {
                            "name": "customRichMediaEvents",
                            "desc": "The list of custom rich media events to include.",
                            "collection": "array",
                            "type": "ref",
                            "refType": "DimensionValue"
                        },
                        {
                            "name": "dateRange",
                            "desc": "The date range this report should be run for.",
                            "type": "ref",
                            "refType": "DateRange"
                        },
                        {
                            "name": "dimensionFilters",
                            "desc": "The list of filters on which dimensions are filtered.\nFilters for different dimensions are ANDed, filters for the same dimension are grouped together and ORed.",
                            "collection": "array",
                            "type": "ref",
                            "refType": "DimensionValue"
                        },
                        {
                            "name": "dimensions",
                            "desc": "The list of dimensions the report should include.",
                            "collection": "array",
                            "type": "ref",
                            "refType": "SortedDimension"
                        },
                        {
                            "name": "floodlightConfigId",
                            "desc": "The floodlight ID for which to show data in this report. All advertisers associated with that ID will automatically be added. The dimension of the value needs to be 'dfa:floodlightConfigId'.",
                            "type": "ref",
                            "refType": "DimensionValue"
                        }
                    ]
                },
                {
                    "name": "id",
                    "desc": "The unique ID identifying this report resource.",
                    "type": "int64"
                },
                {
                    "name": "name",
                    "desc": "The name of the report.",
                    "type": "string"
                },
                {
                    "name": "ownerProfileId",
                    "desc": "The user profile id of the owner of this report.",
                    "type": "int64"
                },
                {
                    "name": "subAccountId",
                    "desc": "The subaccount ID to which this report belongs if applicable.",
                    "type": "int64"
                },
                {
                    "name": "criteria",
                    "desc": "The report criteria for a report of type \"STANDARD\".",
                    "type": "object",
                    "fields": [
                        {
                            "name": "dimensionFilters",
                            "desc": "The list of filters on which dimensions are filtered.\nFilters for different dimensions are ANDed, filters for the same dimension are grouped together and ORed.",
                            "collection": "array",
                            "type": "ref",
                            "refType": "DimensionValue"
                        },
                        {
                            "name": "dimensions",
                            "desc": "The list of standard dimensions the report should include.",
                            "collection": "array",
                            "type": "ref",
                            "refType": "SortedDimension"
                        },
                        {
                            "name": "metricNames",
                            "desc": "The list of names of metrics the report should include.",
                            "collection": "array",
                            "type": "string"
                        },
                        {
                            "name": "activities",
                            "desc": "Activity group.",
                            "type": "ref",
                            "refType": "Activities"
                        },
                        {
                            "name": "customRichMediaEvents",
                            "desc": "Custom Rich Media Events group.",
                            "type": "ref",
                            "refType": "CustomRichMediaEvents"
                        },
                        {
                            "name": "dateRange",
                            "desc": "The date range for which this report should be run.",
                            "type": "ref",
                            "refType": "DateRange"
                        }
                    ]
                },
                {
                    "name": "crossDimensionReachCriteria",
                    "desc": "The report criteria for a report of type \"CROSS_DIMENSION_REACH\".",
                    "type": "object",
                    "fields": [
                        {
                            "name": "pivoted",
                            "desc": "Whether the report is pivoted or not. Defaults to true.",
                            "type": "bool"
                        },
                        {
                            "name": "breakdown",
                            "desc": "The list of dimensions the report should include.",
                            "collection": "array",
                            "type": "ref",
                            "refType": "SortedDimension"
                        },
                        {
                            "name": "dateRange",
                            "desc": "The date range this report should be run for.",
                            "type": "ref",
                            "refType": "DateRange"
                        },
                        {
                            "name": "dimension",
                            "desc": "The dimension option.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "ADVERTISER"
                                },
                                {
                                    "name": "CAMPAIGN"
                                },
                                {
                                    "name": "SITE_BY_ADVERTISER"
                                },
                                {
                                    "name": "SITE_BY_CAMPAIGN"
                                }
                            ]
                        },
                        {
                            "name": "dimensionFilters",
                            "desc": "The list of filters on which dimensions are filtered.",
                            "collection": "array",
                            "type": "ref",
                            "refType": "DimensionValue"
                        },
                        {
                            "name": "metricNames",
                            "desc": "The list of names of metrics the report should include.",
                            "collection": "array",
                            "type": "string"
                        },
                        {
                            "name": "overlapMetricNames",
                            "desc": "The list of names of overlap metrics the report should include.",
                            "collection": "array",
                            "type": "string"
                        }
                    ]
                },
                {
                    "name": "etag",
                    "desc": "The eTag of this response for caching purposes.",
                    "type": "string"
                },
                {
                    "name": "type",
                    "desc": "The type of the report.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "CROSS_DIMENSION_REACH"
                        },
                        {
                            "name": "FLOODLIGHT"
                        },
                        {
                            "name": "PATH_TO_CONVERSION"
                        },
                        {
                            "name": "REACH"
                        },
                        {
                            "name": "STANDARD"
                        }
                    ]
                },
                {
                    "name": "pathToConversionCriteria",
                    "desc": "The report criteria for a report of type \"PATH_TO_CONVERSION\".",
                    "type": "object",
                    "fields": [
                        {
                            "name": "customFloodlightVariables",
                            "desc": "The list of custom floodlight variables the report should include.",
                            "collection": "array",
                            "type": "ref",
                            "refType": "SortedDimension"
                        },
                        {
                            "name": "dateRange",
                            "desc": "The date range this report should be run for.",
                            "type": "ref",
                            "refType": "DateRange"
                        },
                        {
                            "name": "metricNames",
                            "desc": "The list of names of metrics the report should include.",
                            "collection": "array",
                            "type": "string"
                        },
                        {
                            "name": "conversionDimensions",
                            "desc": "The list of conversion dimensions the report should include.",
                            "collection": "array",
                            "type": "ref",
                            "refType": "SortedDimension"
                        },
                        {
                            "name": "customRichMediaEvents",
                            "desc": "The list of custom rich media events to include.",
                            "collection": "array",
                            "type": "ref",
                            "refType": "DimensionValue"
                        },
                        {
                            "name": "floodlightConfigId",
                            "desc": "The floodlight ID for which to show data in this report. All advertisers associated with that ID will automatically be added. The dimension of the value needs to be 'dfa:floodlightConfigId'.",
                            "type": "ref",
                            "refType": "DimensionValue"
                        },
                        {
                            "name": "perInteractionDimensions",
                            "desc": "The list of per interaction dimensions the report should include.",
                            "collection": "array",
                            "type": "ref",
                            "refType": "SortedDimension"
                        },
                        {
                            "name": "reportProperties",
                            "desc": "The properties of the report.",
                            "type": "object",
                            "fields": [
                                {
                                    "name": "impressionsLookbackWindow",
                                    "desc": "DFA checks to see if an impression interaction occurred within the specified period of time before a conversion. By default the value is pulled from Floodlight or you can manually enter a custom value. Valid values: 1-90.",
                                    "type": "int32"
                                },
                                {
                                    "name": "includeUnattributedCookieConversions",
                                    "desc": "Include conversions of users with a DoubleClick cookie but without an exposure. That means the user did not click or see an ad from the advertiser within the Floodlight group, or that the interaction happened outside the lookback window.",
                                    "type": "bool"
                                },
                                {
                                    "name": "maximumInteractionGap",
                                    "desc": "The maximum amount of time that can take place between interactions (clicks or impressions) by the same user. Valid values: 1-90.",
                                    "type": "int32"
                                },
                                {
                                    "name": "maximumClickInteractions",
                                    "desc": "The maximum number of click interactions to include in the report. Advertisers currently paying for E2C reports get up to 200 (100 clicks, 100 impressions). If another advertiser in your network is paying for E2C, you can have up to 5 total exposures per report.",
                                    "type": "int32"
                                },
                                {
                                    "name": "maximumImpressionInteractions",
                                    "desc": "The maximum number of click interactions to include in the report. Advertisers currently paying for E2C reports get up to 200 (100 clicks, 100 impressions). If another advertiser in your network is paying for E2C, you can have up to 5 total exposures per report.",
                                    "type": "int32"
                                },
                                {
                                    "name": "pivotOnInteractionPath",
                                    "desc": "Enable pivoting on interaction path.",
                                    "type": "bool"
                                },
                                {
                                    "name": "clicksLookbackWindow",
                                    "desc": "DFA checks to see if a click interaction occurred within the specified period of time before a conversion. By default the value is pulled from Floodlight or you can manually enter a custom value. Valid values: 1-90.",
                                    "type": "int32"
                                },
                                {
                                    "name": "includeAttributedIPConversions",
                                    "desc": "Deprecated: has no effect.",
                                    "type": "bool"
                                },
                                {
                                    "name": "includeUnattributedIPConversions",
                                    "desc": "Include conversions that have no associated cookies and no exposures. It’s therefore impossible to know how the user was exposed to your ads during the lookback window prior to a conversion.",
                                    "type": "bool"
                                }
                            ]
                        },
                        {
                            "name": "activityFilters",
                            "desc": "The list of 'dfa:activity' values to filter on.",
                            "collection": "array",
                            "type": "ref",
                            "refType": "DimensionValue"
                        }
                    ]
                },
                {
                    "name": "reachCriteria",
                    "desc": "The report criteria for a report of type \"REACH\".",
                    "type": "object",
                    "fields": [
                        {
                            "name": "dimensionFilters",
                            "desc": "The list of filters on which dimensions are filtered.\nFilters for different dimensions are ANDed, filters for the same dimension are grouped together and ORed.",
                            "collection": "array",
                            "type": "ref",
                            "refType": "DimensionValue"
                        },
                        {
                            "name": "dimensions",
                            "desc": "The list of dimensions the report should include.",
                            "collection": "array",
                            "type": "ref",
                            "refType": "SortedDimension"
                        },
                        {
                            "name": "enableAllDimensionCombinations",
                            "desc": "Whether to enable all reach dimension combinations in the report. Defaults to false. If enabled, the date range of the report should be within the last three months.",
                            "type": "bool"
                        },
                        {
                            "name": "metricNames",
                            "desc": "The list of names of metrics the report should include.",
                            "collection": "array",
                            "type": "string"
                        },
                        {
                            "name": "reachByFrequencyMetricNames",
                            "desc": "The list of names of  Reach By Frequency metrics the report should include.",
                            "collection": "array",
                            "type": "string"
                        },
                        {
                            "name": "activities",
                            "desc": "Activity group.",
                            "type": "ref",
                            "refType": "Activities"
                        },
                        {
                            "name": "customRichMediaEvents",
                            "desc": "Custom Rich Media Events group.",
                            "type": "ref",
                            "refType": "CustomRichMediaEvents"
                        },
                        {
                            "name": "dateRange",
                            "desc": "The date range this report should be run for.",
                            "type": "ref",
                            "refType": "DateRange"
                        }
                    ]
                },
                {
                    "name": "delivery",
                    "desc": "The report's email delivery settings.",
                    "type": "object",
                    "fields": [
                        {
                            "name": "emailOwner",
                            "desc": "Whether the report should be emailed to the report owner.",
                            "type": "bool"
                        },
                        {
                            "name": "emailOwnerDeliveryType",
                            "desc": "The type of delivery for the owner to receive, if enabled.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "ATTACHMENT"
                                },
                                {
                                    "name": "LINK"
                                }
                            ]
                        },
                        {
                            "name": "message",
                            "desc": "The message to be sent with each email.",
                            "type": "string"
                        },
                        {
                            "name": "recipients",
                            "desc": "The list of recipients to which to email the report.",
                            "collection": "array",
                            "type": "ref",
                            "refType": "Recipient"
                        }
                    ]
                },
                {
                    "name": "lastModifiedTime",
                    "desc": "The timestamp (in milliseconds since epoch) of when this report was last modified.",
                    "type": "uint64"
                },
                {
                    "name": "kind",
                    "desc": "The kind of resource this is, in this case dfareporting#report.",
                    "type": "string",
                    "default": "dfareporting#report"
                },
                {
                    "name": "schedule",
                    "desc": "The report's schedule. Can only be set if the report's 'dateRange' is a relative date range and the relative date range is not \"TODAY\".",
                    "type": "object",
                    "fields": [
                        {
                            "name": "repeats",
                            "desc": "The interval for which the report is repeated. Note:  \n- \"DAILY\" also requires field \"every\" to be set. \n- \"WEEKLY\" also requires fields \"every\" and \"repeatsOnWeekDays\" to be set. \n- \"MONTHLY\" also requires fields \"every\" and \"runsOnDayOfMonth\" to be set.",
                            "type": "string"
                        },
                        {
                            "name": "repeatsOnWeekDays",
                            "desc": "List of week days \"WEEKLY\" on which scheduled reports should run.",
                            "collection": "array",
                            "type": "string"
                        },
                        {
                            "name": "runsOnDayOfMonth",
                            "desc": "Enum to define for \"MONTHLY\" scheduled reports whether reports should be repeated on the same day of the month as \"startDate\" or the same day of the week of the month.\nExample: If 'startDate' is Monday, April 2nd 2012 (2012-04-02), \"DAY_OF_MONTH\" would run subsequent reports on the 2nd of every Month, and \"WEEK_OF_MONTH\" would run subsequent reports on the first Monday of the month.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "DAY_OF_MONTH"
                                },
                                {
                                    "name": "WEEK_OF_MONTH"
                                }
                            ]
                        },
                        {
                            "name": "startDate",
                            "desc": "Start date of date range for which scheduled reports should be run.",
                            "type": "date"
                        },
                        {
                            "name": "active",
                            "desc": "Whether the schedule is active or not. Must be set to either true or false.",
                            "type": "bool"
                        },
                        {
                            "name": "every",
                            "desc": "Defines every how many days, weeks or months the report should be run. Needs to be set when \"repeats\" is either \"DAILY\", \"WEEKLY\" or \"MONTHLY\".",
                            "type": "int32"
                        },
                        {
                            "name": "expirationDate",
                            "desc": "The expiration date when the scheduled report stops running.",
                            "type": "date"
                        }
                    ]
                },
                {
                    "name": "accountId",
                    "desc": "The account ID to which this report belongs.",
                    "type": "int64"
                },
                {
                    "name": "fileName",
                    "desc": "The filename used when generating report files for this report.",
                    "type": "string"
                },
                {
                    "name": "format",
                    "desc": "The output format of the report. If not specified, default format is \"CSV\". Note that the actual format in the completed report file might differ if for instance the report's size exceeds the format's capabilities. \"CSV\" will then be the fallback format.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "CSV"
                        },
                        {
                            "name": "EXCEL"
                        }
                    ]
                }
            ]
        },
        {
            "name": "ContentCategoriesListResponse",
            "desc": "Content Category List Response",
            "type": "object",
            "fields": [
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#contentCategoriesListResponse\".",
                    "type": "string",
                    "default": "dfareporting#contentCategoriesListResponse"
                },
                {
                    "name": "nextPageToken",
                    "desc": "Pagination token to be used for the next list operation.",
                    "type": "string"
                },
                {
                    "name": "contentCategories",
                    "desc": "Content category collection.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "ContentCategory"
                }
            ]
        },
        {
            "name": "DimensionValueRequest",
            "desc": "Represents a DimensionValuesRequest.",
            "type": "object",
            "fields": [
                {
                    "name": "filters",
                    "desc": "The list of filters by which to filter values. The filters are ANDed.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "DimensionFilter"
                },
                {
                    "name": "kind",
                    "desc": "The kind of request this is, in this case dfareporting#dimensionValueRequest.",
                    "type": "string",
                    "default": "dfareporting#dimensionValueRequest"
                },
                {
                    "name": "startDate",
                    "desc": "The start date of the date range for which to retrieve dimension values. A string of the format \"yyyy-MM-dd\".",
                    "type": "date"
                },
                {
                    "name": "dimensionName",
                    "desc": "The name of the dimension for which values should be requested.",
                    "type": "string"
                },
                {
                    "name": "endDate",
                    "desc": "The end date of the date range for which to retrieve dimension values. A string of the format \"yyyy-MM-dd\".",
                    "type": "date"
                }
            ]
        },
        {
            "name": "EventTag",
            "desc": "Contains properties of an event tag.",
            "type": "object",
            "fields": [
                {
                    "name": "campaignIdDimensionValue",
                    "desc": "Dimension value for the ID of the campaign. This is a read-only, auto-generated field.",
                    "type": "ref",
                    "refType": "DimensionValue"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#eventTag\".",
                    "type": "string",
                    "default": "dfareporting#eventTag"
                },
                {
                    "name": "siteIds",
                    "desc": "Filter list of site IDs associated with this event tag. The siteFilterType determines whether this is a whitelist or blacklist filter.",
                    "collection": "array",
                    "type": "int64"
                },
                {
                    "name": "subaccountId",
                    "desc": "Subaccount ID of this event tag. This is a read-only field that can be left blank.",
                    "type": "int64"
                },
                {
                    "name": "type",
                    "desc": "Event tag type. Can be used to specify whether to use a third-party pixel, a third-party JavaScript URL, or a third-party click-through URL for either impression or click tracking. This is a required field.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "CLICK_THROUGH_EVENT_TAG"
                        },
                        {
                            "name": "IMPRESSION_IMAGE_EVENT_TAG"
                        },
                        {
                            "name": "IMPRESSION_JAVASCRIPT_EVENT_TAG"
                        }
                    ]
                },
                {
                    "name": "urlEscapeLevels",
                    "desc": "Number of times the landing page URL should be URL-escaped before being appended to the click-through event tag URL. Only applies to click-through event tags as specified by the event tag type.",
                    "type": "int32"
                },
                {
                    "name": "campaignId",
                    "desc": "Campaign ID of this event tag. This field or the advertiserId field is required on insertion.",
                    "type": "int64"
                },
                {
                    "name": "name",
                    "desc": "Name of this event tag. This is a required field and must be less than 256 characters long.",
                    "type": "string"
                },
                {
                    "name": "sslCompliant",
                    "desc": "Whether this tag is SSL-compliant or not. This is a read-only field.",
                    "type": "bool"
                },
                {
                    "name": "status",
                    "desc": "Status of this event tag. Must be ENABLED for this event tag to fire. This is a required field.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "DISABLED"
                        },
                        {
                            "name": "ENABLED"
                        }
                    ]
                },
                {
                    "name": "accountId",
                    "desc": "Account ID of this event tag. This is a read-only field that can be left blank.",
                    "type": "int64"
                },
                {
                    "name": "excludeFromAdxRequests",
                    "desc": "Whether to remove this event tag from ads that are trafficked through DoubleClick Bid Manager to Ad Exchange. This may be useful if the event tag uses a pixel that is unapproved for Ad Exchange bids on one or more networks, such as the Google Display Network.",
                    "type": "bool"
                },
                {
                    "name": "siteFilterType",
                    "desc": "Site filter type for this event tag. If no type is specified then the event tag will be applied to all sites.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "BLACKLIST"
                        },
                        {
                            "name": "WHITELIST"
                        }
                    ]
                },
                {
                    "name": "advertiserId",
                    "desc": "Advertiser ID of this event tag. This field or the campaignId field is required on insertion.",
                    "type": "int64"
                },
                {
                    "name": "enabledByDefault",
                    "desc": "Whether this event tag should be automatically enabled for all of the advertiser's campaigns and ads.",
                    "type": "bool"
                },
                {
                    "name": "id",
                    "desc": "ID of this event tag. This is a read-only, auto-generated field.",
                    "type": "int64"
                },
                {
                    "name": "url",
                    "desc": "Payload URL for this event tag. The URL on a click-through event tag should have a landing page URL appended to the end of it. This field is required on insertion.",
                    "type": "string"
                },
                {
                    "name": "advertiserIdDimensionValue",
                    "desc": "Dimension value for the ID of the advertiser. This is a read-only, auto-generated field.",
                    "type": "ref",
                    "refType": "DimensionValue"
                }
            ]
        },
        {
            "name": "Flight",
            "desc": "Flight",
            "type": "object",
            "fields": [
                {
                    "name": "endDate",
                    "desc": "Inventory item flight end date.",
                    "type": "date"
                },
                {
                    "name": "rateOrCost",
                    "desc": "Rate or cost of this flight.",
                    "type": "int64"
                },
                {
                    "name": "startDate",
                    "desc": "Inventory item flight start date.",
                    "type": "date"
                },
                {
                    "name": "units",
                    "desc": "Units of this flight.",
                    "type": "int64"
                }
            ]
        },
        {
            "name": "ObjectFilter",
            "desc": "Object Filter.",
            "type": "object",
            "fields": [
                {
                    "name": "objectIds",
                    "desc": "Applicable when status is ASSIGNED. The user has access to objects with these object IDs.",
                    "collection": "array",
                    "type": "int64"
                },
                {
                    "name": "status",
                    "desc": "Status of the filter. NONE means the user has access to none of the objects. ALL means the user has access to all objects. ASSIGNED means the user has access to the objects with IDs in the objectIds list.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "ALL"
                        },
                        {
                            "name": "ASSIGNED"
                        },
                        {
                            "name": "NONE"
                        }
                    ]
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#objectFilter\".",
                    "type": "string",
                    "default": "dfareporting#objectFilter"
                }
            ]
        },
        {
            "name": "PostalCodesListResponse",
            "desc": "Postal Code List Response",
            "type": "object",
            "fields": [
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#postalCodesListResponse\".",
                    "type": "string",
                    "default": "dfareporting#postalCodesListResponse"
                },
                {
                    "name": "postalCodes",
                    "desc": "Postal code collection.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "PostalCode"
                }
            ]
        },
        {
            "name": "ProjectsListResponse",
            "desc": "Project List Response",
            "type": "object",
            "fields": [
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#projectsListResponse\".",
                    "type": "string",
                    "default": "dfareporting#projectsListResponse"
                },
                {
                    "name": "nextPageToken",
                    "desc": "Pagination token to be used for the next list operation.",
                    "type": "string"
                },
                {
                    "name": "projects",
                    "desc": "Project collection.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Project"
                }
            ]
        },
        {
            "name": "Site",
            "desc": "Contains properties of a site.",
            "type": "object",
            "fields": [
                {
                    "name": "siteSettings",
                    "desc": "Site-wide settings.",
                    "type": "ref",
                    "refType": "SiteSettings"
                },
                {
                    "name": "subaccountId",
                    "desc": "Subaccount ID of this site. This is a read-only field that can be left blank.",
                    "type": "int64"
                },
                {
                    "name": "accountId",
                    "desc": "Account ID of this site. This is a read-only field that can be left blank.",
                    "type": "int64"
                },
                {
                    "name": "directorySiteId",
                    "desc": "Directory site associated with this site. This is a required field that is read-only after insertion.",
                    "type": "int64"
                },
                {
                    "name": "idDimensionValue",
                    "desc": "Dimension value for the ID of this site. This is a read-only, auto-generated field.",
                    "type": "ref",
                    "refType": "DimensionValue"
                },
                {
                    "name": "keyName",
                    "desc": "Key name of this site. This is a read-only, auto-generated field.",
                    "type": "string"
                },
                {
                    "name": "name",
                    "desc": "Name of this site.This is a required field. Must be less than 128 characters long. If this site is under a subaccount, the name must be unique among sites of the same subaccount. Otherwise, this site is a top-level site, and the name must be unique among top-level sites of the same account.",
                    "type": "string"
                },
                {
                    "name": "siteContacts",
                    "desc": "Site contacts.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "SiteContact"
                },
                {
                    "name": "approved",
                    "desc": "Whether this site is approved.",
                    "type": "bool"
                },
                {
                    "name": "directorySiteIdDimensionValue",
                    "desc": "Dimension value for the ID of the directory site. This is a read-only, auto-generated field.",
                    "type": "ref",
                    "refType": "DimensionValue"
                },
                {
                    "name": "id",
                    "desc": "ID of this site. This is a read-only, auto-generated field.",
                    "type": "int64"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#site\".",
                    "type": "string",
                    "default": "dfareporting#site"
                }
            ]
        },
        {
            "name": "SortedDimension",
            "desc": "Represents a sorted dimension.",
            "type": "object",
            "fields": [
                {
                    "name": "sortOrder",
                    "desc": "An optional sort order for the dimension column.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "ASCENDING"
                        },
                        {
                            "name": "DESCENDING"
                        }
                    ]
                },
                {
                    "name": "kind",
                    "desc": "The kind of resource this is, in this case dfareporting#sortedDimension.",
                    "type": "string",
                    "default": "dfareporting#sortedDimension"
                },
                {
                    "name": "name",
                    "desc": "The name of the dimension.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "File",
            "desc": "Represents a File resource. A file contains the metadata for a report run. It shows the status of the run and holds the URLs to the generated report data if the run is finished and the status is \"REPORT_AVAILABLE\".",
            "type": "object",
            "fields": [
                {
                    "name": "format",
                    "desc": "The output format of the report. Only available once the file is available.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "CSV"
                        },
                        {
                            "name": "EXCEL"
                        }
                    ]
                },
                {
                    "name": "kind",
                    "desc": "The kind of resource this is, in this case dfareporting#file.",
                    "type": "string",
                    "default": "dfareporting#file"
                },
                {
                    "name": "reportId",
                    "desc": "The ID of the report this file was generated from.",
                    "type": "int64"
                },
                {
                    "name": "status",
                    "desc": "The status of the report file.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "CANCELLED"
                        },
                        {
                            "name": "FAILED"
                        },
                        {
                            "name": "PROCESSING"
                        },
                        {
                            "name": "REPORT_AVAILABLE"
                        }
                    ]
                },
                {
                    "name": "urls",
                    "desc": "The URLs where the completed report file can be downloaded.",
                    "type": "object",
                    "fields": [
                        {
                            "name": "browserUrl",
                            "desc": "The URL for downloading the report data through a browser.",
                            "type": "string"
                        },
                        {
                            "name": "apiUrl",
                            "desc": "The URL for downloading the report data through the API.",
                            "type": "string"
                        }
                    ]
                },
                {
                    "name": "dateRange",
                    "desc": "The date range for which the file has report data. The date range will always be the absolute date range for which the report is run.",
                    "type": "ref",
                    "refType": "DateRange"
                },
                {
                    "name": "etag",
                    "desc": "The eTag of this response for caching purposes.",
                    "type": "string"
                },
                {
                    "name": "fileName",
                    "desc": "The filename of the file.",
                    "type": "string"
                },
                {
                    "name": "id",
                    "desc": "The unique ID of this report file.",
                    "type": "int64"
                },
                {
                    "name": "lastModifiedTime",
                    "desc": "The timestamp in milliseconds since epoch when this file was last modified.",
                    "type": "int64"
                }
            ]
        },
        {
            "name": "FloodlightConfigurationsListResponse",
            "desc": "Floodlight Configuration List Response",
            "type": "object",
            "fields": [
                {
                    "name": "floodlightConfigurations",
                    "desc": "Floodlight configuration collection.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "FloodlightConfiguration"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#floodlightConfigurationsListResponse\".",
                    "type": "string",
                    "default": "dfareporting#floodlightConfigurationsListResponse"
                }
            ]
        },
        {
            "name": "FrequencyCap",
            "desc": "Frequency Cap.",
            "type": "object",
            "fields": [
                {
                    "name": "duration",
                    "desc": "Duration of time, in seconds, for this frequency cap. The maximum duration is 90 days in seconds, or 7,776,000.",
                    "type": "int64"
                },
                {
                    "name": "impressions",
                    "desc": "Number of times an individual user can be served the ad within the specified duration. The maximum allowed is 15.",
                    "type": "int64"
                }
            ]
        },
        {
            "name": "FsCommand",
            "desc": "FsCommand.",
            "type": "object",
            "fields": [
                {
                    "name": "left",
                    "desc": "Distance from the left of the browser.Applicable when positionOption is DISTANCE_FROM_TOP_LEFT_CORNER.",
                    "type": "int32"
                },
                {
                    "name": "positionOption",
                    "desc": "Position in the browser where the window will open.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "CENTERED"
                        },
                        {
                            "name": "DISTANCE_FROM_TOP_LEFT_CORNER"
                        }
                    ]
                },
                {
                    "name": "top",
                    "desc": "Distance from the top of the browser. Applicable when positionOption is DISTANCE_FROM_TOP_LEFT_CORNER.",
                    "type": "int32"
                },
                {
                    "name": "windowHeight",
                    "desc": "Height of the window.",
                    "type": "int32"
                },
                {
                    "name": "windowWidth",
                    "desc": "Width of the window.",
                    "type": "int32"
                }
            ]
        },
        {
            "name": "LastModifiedInfo",
            "desc": "Modification timestamp.",
            "type": "object",
            "fields": [
                {
                    "name": "time",
                    "desc": "Timestamp of the last change in milliseconds since epoch.",
                    "type": "int64"
                }
            ]
        },
        {
            "name": "ClickThroughUrlSuffixProperties",
            "desc": "Click Through URL Suffix settings.",
            "type": "object",
            "fields": [
                {
                    "name": "overrideInheritedSuffix",
                    "desc": "Whether this entity should override the inherited click-through URL suffix with its own defined value.",
                    "type": "bool"
                },
                {
                    "name": "clickThroughUrlSuffix",
                    "desc": "Click-through URL suffix to apply to all ads in this entity's scope. Must be less than 128 characters long.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "DirectorySitesListResponse",
            "desc": "Directory Site List Response",
            "type": "object",
            "fields": [
                {
                    "name": "directorySites",
                    "desc": "Directory site collection.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "DirectorySite"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#directorySitesListResponse\".",
                    "type": "string",
                    "default": "dfareporting#directorySitesListResponse"
                },
                {
                    "name": "nextPageToken",
                    "desc": "Pagination token to be used for the next list operation.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "GeoTargeting",
            "desc": "Geographical Targeting.",
            "type": "object",
            "fields": [
                {
                    "name": "regions",
                    "desc": "Regions to be targeted. For each region only dartId is required. The other fields are populated automatically when the ad is inserted or updated. If targeting a region, do not target or exclude the country of the region.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Region"
                },
                {
                    "name": "cities",
                    "desc": "Cities to be targeted. For each city only dartId is required. The other fields are populated automatically when the ad is inserted or updated. If targeting a city, do not target or exclude the country of the city, and do not target the metro or region of the city.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "City"
                },
                {
                    "name": "countries",
                    "desc": "Countries to be targeted or excluded from targeting, depending on the setting of the excludeCountries field. For each country only dartId is required. The other fields are populated automatically when the ad is inserted or updated. If targeting or excluding a country, do not target regions, cities, metros, or postal codes in the same country.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Country"
                },
                {
                    "name": "excludeCountries",
                    "desc": "Whether or not to exclude the countries in the countries field from targeting. If false, the countries field refers to countries which will be targeted by the ad.",
                    "type": "bool"
                },
                {
                    "name": "metros",
                    "desc": "Metros to be targeted. For each metro only dmaId is required. The other fields are populated automatically when the ad is inserted or updated. If targeting a metro, do not target or exclude the country of the metro.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Metro"
                },
                {
                    "name": "postalCodes",
                    "desc": "Postal codes to be targeted. For each postal code only id is required. The other fields are populated automatically when the ad is inserted or updated. If targeting a postal code, do not target or exclude the country of the postal code.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "PostalCode"
                }
            ]
        },
        {
            "name": "PlacementStrategy",
            "desc": "Contains properties of a placement strategy.",
            "type": "object",
            "fields": [
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#placementStrategy\".",
                    "type": "string",
                    "default": "dfareporting#placementStrategy"
                },
                {
                    "name": "name",
                    "desc": "Name of this placement strategy. This is a required field. It must be less than 256 characters long and unique among placement strategies of the same account.",
                    "type": "string"
                },
                {
                    "name": "accountId",
                    "desc": "Account ID of this placement strategy.This is a read-only field that can be left blank.",
                    "type": "int64"
                },
                {
                    "name": "id",
                    "desc": "ID of this placement strategy. This is a read-only, auto-generated field.",
                    "type": "int64"
                }
            ]
        },
        {
            "name": "ReachReportCompatibleFields",
            "desc": "Represents fields that are compatible to be selected for a report of type \"REACH\".",
            "type": "object",
            "fields": [
                {
                    "name": "metrics",
                    "desc": "Metrics which are compatible to be selected in the \"metricNames\" section of the report.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Metric"
                },
                {
                    "name": "pivotedActivityMetrics",
                    "desc": "Metrics which are compatible to be selected as activity metrics to pivot on in the \"activities\" section of the report.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Metric"
                },
                {
                    "name": "reachByFrequencyMetrics",
                    "desc": "Metrics which are compatible to be selected in the \"reachByFrequencyMetricNames\" section of the report.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Metric"
                },
                {
                    "name": "dimensionFilters",
                    "desc": "Dimensions which are compatible to be selected in the \"dimensionFilters\" section of the report.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Dimension"
                },
                {
                    "name": "dimensions",
                    "desc": "Dimensions which are compatible to be selected in the \"dimensions\" section of the report.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Dimension"
                },
                {
                    "name": "kind",
                    "desc": "The kind of resource this is, in this case dfareporting#reachReportCompatibleFields.",
                    "type": "string",
                    "default": "dfareporting#reachReportCompatibleFields"
                }
            ]
        },
        {
            "name": "CreativeGroupAssignment",
            "desc": "Creative Group Assignment.",
            "type": "object",
            "fields": [
                {
                    "name": "creativeGroupNumber",
                    "desc": "Creative group number of the creative group assignment.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "CREATIVE_GROUP_ONE"
                        },
                        {
                            "name": "CREATIVE_GROUP_TWO"
                        }
                    ]
                },
                {
                    "name": "creativeGroupId",
                    "desc": "ID of the creative group to be assigned.",
                    "type": "int64"
                }
            ]
        },
        {
            "name": "DateRange",
            "desc": "Represents a date range.",
            "type": "object",
            "fields": [
                {
                    "name": "endDate",
                    "desc": "The end date of the date range, inclusive. A string of the format: \"yyyy-MM-dd\".",
                    "type": "date"
                },
                {
                    "name": "kind",
                    "desc": "The kind of resource this is, in this case dfareporting#dateRange.",
                    "type": "string",
                    "default": "dfareporting#dateRange"
                },
                {
                    "name": "relativeDateRange",
                    "desc": "The date range relative to the date of when the report is run.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "LAST_24_MONTHS"
                        },
                        {
                            "name": "LAST_30_DAYS"
                        },
                        {
                            "name": "LAST_365_DAYS"
                        },
                        {
                            "name": "LAST_7_DAYS"
                        },
                        {
                            "name": "LAST_90_DAYS"
                        },
                        {
                            "name": "MONTH_TO_DATE"
                        },
                        {
                            "name": "PREVIOUS_MONTH"
                        },
                        {
                            "name": "PREVIOUS_QUARTER"
                        },
                        {
                            "name": "PREVIOUS_WEEK"
                        },
                        {
                            "name": "PREVIOUS_YEAR"
                        },
                        {
                            "name": "QUARTER_TO_DATE"
                        },
                        {
                            "name": "TODAY"
                        },
                        {
                            "name": "WEEK_TO_DATE"
                        },
                        {
                            "name": "YEAR_TO_DATE"
                        },
                        {
                            "name": "YESTERDAY"
                        }
                    ]
                },
                {
                    "name": "startDate",
                    "desc": "The start date of the date range, inclusive. A string of the format: \"yyyy-MM-dd\".",
                    "type": "date"
                }
            ]
        },
        {
            "name": "LookbackConfiguration",
            "desc": "Lookback configuration settings.",
            "type": "object",
            "fields": [
                {
                    "name": "clickDuration",
                    "desc": "Lookback window, in days, from the last time a given user clicked on one of your ads. If you enter 0, clicks will not be considered as triggering events for floodlight tracking. If you leave this field blank, the default value for your account will be used.",
                    "type": "int32"
                },
                {
                    "name": "postImpressionActivitiesDuration",
                    "desc": "Lookback window, in days, from the last time a given user viewed one of your ads. If you enter 0, impressions will not be considered as triggering events for floodlight tracking. If you leave this field blank, the default value for your account will be used.",
                    "type": "int32"
                }
            ]
        },
        {
            "name": "PlacementsListResponse",
            "desc": "Placement List Response",
            "type": "object",
            "fields": [
                {
                    "name": "placements",
                    "desc": "Placement collection.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Placement"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#placementsListResponse\".",
                    "type": "string",
                    "default": "dfareporting#placementsListResponse"
                },
                {
                    "name": "nextPageToken",
                    "desc": "Pagination token to be used for the next list operation.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "PlatformTypesListResponse",
            "desc": "Platform Type List Response",
            "type": "object",
            "fields": [
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#platformTypesListResponse\".",
                    "type": "string",
                    "default": "dfareporting#platformTypesListResponse"
                },
                {
                    "name": "platformTypes",
                    "desc": "Platform type collection.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "PlatformType"
                }
            ]
        },
        {
            "name": "SizesListResponse",
            "desc": "Size List Response",
            "type": "object",
            "fields": [
                {
                    "name": "sizes",
                    "desc": "Size collection.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Size"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#sizesListResponse\".",
                    "type": "string",
                    "default": "dfareporting#sizesListResponse"
                }
            ]
        },
        {
            "name": "Account",
            "desc": "Contains properties of a DCM account.",
            "type": "object",
            "fields": [
                {
                    "name": "accountProfile",
                    "desc": "Profile for this account. This is a read-only field that can be left blank.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "ACCOUNT_PROFILE_BASIC"
                        },
                        {
                            "name": "ACCOUNT_PROFILE_STANDARD"
                        }
                    ]
                },
                {
                    "name": "availablePermissionIds",
                    "desc": "User role permissions available to the user roles of this account.",
                    "collection": "array",
                    "type": "int64"
                },
                {
                    "name": "description",
                    "desc": "Description of this account.",
                    "type": "string"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#account\".",
                    "type": "string",
                    "default": "dfareporting#account"
                },
                {
                    "name": "activeAdsLimitTier",
                    "desc": "Maximum number of active ads allowed for this account.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "ACTIVE_ADS_TIER_100K"
                        },
                        {
                            "name": "ACTIVE_ADS_TIER_200K"
                        },
                        {
                            "name": "ACTIVE_ADS_TIER_300K"
                        },
                        {
                            "name": "ACTIVE_ADS_TIER_40K"
                        },
                        {
                            "name": "ACTIVE_ADS_TIER_500K"
                        },
                        {
                            "name": "ACTIVE_ADS_TIER_750K"
                        },
                        {
                            "name": "ACTIVE_ADS_TIER_75K"
                        }
                    ]
                },
                {
                    "name": "locale",
                    "desc": "Locale of this account.\nAcceptable values are: \n- \"cs\" (Czech) \n- \"de\" (German) \n- \"en\" (English) \n- \"en-GB\" (English United Kingdom) \n- \"es\" (Spanish) \n- \"fr\" (French) \n- \"it\" (Italian) \n- \"ja\" (Japanese) \n- \"ko\" (Korean) \n- \"pl\" (Polish) \n- \"pt-BR\" (Portuguese Brazil) \n- \"ru\" (Russian) \n- \"sv\" (Swedish) \n- \"tr\" (Turkish) \n- \"zh-CN\" (Chinese Simplified) \n- \"zh-TW\" (Chinese Traditional)",
                    "type": "string"
                },
                {
                    "name": "nielsenOcrEnabled",
                    "desc": "Whether campaigns created in this account will be enabled for Nielsen OCR reach ratings by default.",
                    "type": "bool"
                },
                {
                    "name": "reportsConfiguration",
                    "desc": "Reporting configuration of this account.",
                    "type": "ref",
                    "refType": "ReportsConfiguration"
                },
                {
                    "name": "name",
                    "desc": "Name of this account. This is a required field, and must be less than 128 characters long and be globally unique.",
                    "type": "string"
                },
                {
                    "name": "teaserSizeLimit",
                    "desc": "File size limit in kilobytes of Rich Media teaser creatives. Must be between 1 and 10240.",
                    "type": "int64"
                },
                {
                    "name": "active",
                    "desc": "Whether this account is active.",
                    "type": "bool"
                },
                {
                    "name": "currencyId",
                    "desc": "ID of currency associated with this account. This is a required field.\nAcceptable values are: \n- \"1\" for USD \n- \"2\" for GBP \n- \"3\" for ESP \n- \"4\" for SEK \n- \"5\" for CAD \n- \"6\" for JPY \n- \"7\" for DEM \n- \"8\" for AUD \n- \"9\" for FRF \n- \"10\" for ITL \n- \"11\" for DKK \n- \"12\" for NOK \n- \"13\" for FIM \n- \"14\" for ZAR \n- \"15\" for IEP \n- \"16\" for NLG \n- \"17\" for EUR \n- \"18\" for KRW \n- \"19\" for TWD \n- \"20\" for SGD \n- \"21\" for CNY \n- \"22\" for HKD \n- \"23\" for NZD \n- \"24\" for MYR \n- \"25\" for BRL \n- \"26\" for PTE \n- \"27\" for MXP \n- \"28\" for CLP \n- \"29\" for TRY \n- \"30\" for ARS \n- \"31\" for PEN \n- \"32\" for ILS \n- \"33\" for CHF \n- \"34\" for VEF \n- \"35\" for COP \n- \"36\" for GTQ \n- \"37\" for PLN \n- \"39\" for INR \n- \"40\" for THB \n- \"41\" for IDR \n- \"42\" for CZK \n- \"43\" for RON \n- \"44\" for HUF \n- \"45\" for RUB \n- \"46\" for AED \n- \"47\" for BGN \n- \"48\" for HRK",
                    "type": "int64"
                },
                {
                    "name": "defaultCreativeSizeId",
                    "desc": "Default placement dimensions for this account.",
                    "type": "int64"
                },
                {
                    "name": "id",
                    "desc": "ID of this account. This is a read-only, auto-generated field.",
                    "type": "int64"
                },
                {
                    "name": "shareReportsWithTwitter",
                    "desc": "Share Path to Conversion reports with Twitter.",
                    "type": "bool"
                },
                {
                    "name": "accountPermissionIds",
                    "desc": "Account permissions assigned to this account.",
                    "collection": "array",
                    "type": "int64"
                },
                {
                    "name": "activeViewOptOut",
                    "desc": "Whether to serve creatives with Active View tags. If disabled, viewability data will not be available for any impressions.",
                    "type": "bool"
                },
                {
                    "name": "countryId",
                    "desc": "ID of the country associated with this account.",
                    "type": "int64"
                },
                {
                    "name": "maximumImageSize",
                    "desc": "Maximum image size allowed for this account.",
                    "type": "int64"
                }
            ]
        },
        {
            "name": "AdvertiserGroup",
            "desc": "Groups advertisers together so that reports can be generated for the entire group at once.",
            "type": "object",
            "fields": [
                {
                    "name": "name",
                    "desc": "Name of this advertiser group. This is a required field and must be less than 256 characters long and unique among advertiser groups of the same account.",
                    "type": "string"
                },
                {
                    "name": "accountId",
                    "desc": "Account ID of this advertiser group. This is a read-only field that can be left blank.",
                    "type": "int64"
                },
                {
                    "name": "id",
                    "desc": "ID of this advertiser group. This is a read-only, auto-generated field.",
                    "type": "int64"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#advertiserGroup\".",
                    "type": "string",
                    "default": "dfareporting#advertiserGroup"
                }
            ]
        },
        {
            "name": "FloodlightActivityDynamicTag",
            "desc": "Dynamic Tag",
            "type": "object",
            "fields": [
                {
                    "name": "name",
                    "desc": "Name of this tag.",
                    "type": "string"
                },
                {
                    "name": "tag",
                    "desc": "Tag code.",
                    "type": "string"
                },
                {
                    "name": "id",
                    "desc": "ID of this dynamic tag. This is a read-only, auto-generated field.",
                    "type": "int64"
                }
            ]
        },
        {
            "name": "PlacementGroup",
            "desc": "Contains properties of a package or roadblock.",
            "type": "object",
            "fields": [
                {
                    "name": "campaignIdDimensionValue",
                    "desc": "Dimension value for the ID of the campaign. This is a read-only, auto-generated field.",
                    "type": "ref",
                    "refType": "DimensionValue"
                },
                {
                    "name": "directorySiteIdDimensionValue",
                    "desc": "Dimension value for the ID of the directory site. This is a read-only, auto-generated field.",
                    "type": "ref",
                    "refType": "DimensionValue"
                },
                {
                    "name": "id",
                    "desc": "ID of this placement group. This is a read-only, auto-generated field.",
                    "type": "int64"
                },
                {
                    "name": "pricingSchedule",
                    "desc": "Pricing schedule of this placement group. This field is required on insertion.",
                    "type": "ref",
                    "refType": "PricingSchedule"
                },
                {
                    "name": "lastModifiedInfo",
                    "desc": "Information about the most recent modification of this placement group. This is a read-only field.",
                    "type": "ref",
                    "refType": "LastModifiedInfo"
                },
                {
                    "name": "accountId",
                    "desc": "Account ID of this placement group. This is a read-only field that can be left blank.",
                    "type": "int64"
                },
                {
                    "name": "advertiserId",
                    "desc": "Advertiser ID of this placement group. This is a required field on insertion.",
                    "type": "int64"
                },
                {
                    "name": "comment",
                    "desc": "Comments for this placement group.",
                    "type": "string"
                },
                {
                    "name": "directorySiteId",
                    "desc": "Directory site ID associated with this placement group. On insert, you must set either this field or the site_id field to specify the site associated with this placement group. This is a required field that is read-only after insertion.",
                    "type": "int64"
                },
                {
                    "name": "externalId",
                    "desc": "External ID for this placement.",
                    "type": "string"
                },
                {
                    "name": "idDimensionValue",
                    "desc": "Dimension value for the ID of this placement group. This is a read-only, auto-generated field.",
                    "type": "ref",
                    "refType": "DimensionValue"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#placementGroup\".",
                    "type": "string",
                    "default": "dfareporting#placementGroup"
                },
                {
                    "name": "placementGroupType",
                    "desc": "Type of this placement group. A package is a simple group of placements that acts as a single pricing point for a group of tags. A roadblock is a group of placements that not only acts as a single pricing point, but also assumes that all the tags in it will be served at the same time. A roadblock requires one of its assigned placements to be marked as primary for reporting. This field is required on insertion.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "PLACEMENT_PACKAGE"
                        },
                        {
                            "name": "PLACEMENT_ROADBLOCK"
                        }
                    ]
                },
                {
                    "name": "primaryPlacementIdDimensionValue",
                    "desc": "Dimension value for the ID of the primary placement. This is a read-only, auto-generated field.",
                    "type": "ref",
                    "refType": "DimensionValue"
                },
                {
                    "name": "subaccountId",
                    "desc": "Subaccount ID of this placement group. This is a read-only field that can be left blank.",
                    "type": "int64"
                },
                {
                    "name": "advertiserIdDimensionValue",
                    "desc": "Dimension value for the ID of the advertiser. This is a read-only, auto-generated field.",
                    "type": "ref",
                    "refType": "DimensionValue"
                },
                {
                    "name": "archived",
                    "desc": "Whether this placement group is archived.",
                    "type": "bool"
                },
                {
                    "name": "campaignId",
                    "desc": "Campaign ID of this placement group. This field is required on insertion.",
                    "type": "int64"
                },
                {
                    "name": "childPlacementIds",
                    "desc": "IDs of placements which are assigned to this placement group. This is a read-only, auto-generated field.",
                    "collection": "array",
                    "type": "int64"
                },
                {
                    "name": "contentCategoryId",
                    "desc": "ID of the content category assigned to this placement group.",
                    "type": "int64"
                },
                {
                    "name": "createInfo",
                    "desc": "Information about the creation of this placement group. This is a read-only field.",
                    "type": "ref",
                    "refType": "LastModifiedInfo"
                },
                {
                    "name": "primaryPlacementId",
                    "desc": "ID of the primary placement, used to calculate the media cost of a roadblock (placement group). Modifying this field will automatically modify the primary field on all affected roadblock child placements.",
                    "type": "int64"
                },
                {
                    "name": "name",
                    "desc": "Name of this placement group. This is a required field and must be less than 256 characters long.",
                    "type": "string"
                },
                {
                    "name": "placementStrategyId",
                    "desc": "ID of the placement strategy assigned to this placement group.",
                    "type": "int64"
                },
                {
                    "name": "siteId",
                    "desc": "Site ID associated with this placement group. On insert, you must set either this field or the directorySiteId field to specify the site associated with this placement group. This is a required field that is read-only after insertion.",
                    "type": "int64"
                },
                {
                    "name": "siteIdDimensionValue",
                    "desc": "Dimension value for the ID of the site. This is a read-only, auto-generated field.",
                    "type": "ref",
                    "refType": "DimensionValue"
                }
            ]
        },
        {
            "name": "AccountUserProfile",
            "desc": "AccountUserProfiles contains properties of a DCM user profile. This resource is specifically for managing user profiles, whereas UserProfiles is for accessing the API.",
            "type": "object",
            "fields": [
                {
                    "name": "comments",
                    "desc": "Comments for this user profile.",
                    "type": "string"
                },
                {
                    "name": "id",
                    "desc": "ID of the user profile. This is a read-only, auto-generated field.",
                    "type": "int64"
                },
                {
                    "name": "traffickerType",
                    "desc": "Trafficker type of this user profile.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "EXTERNAL_TRAFFICKER"
                        },
                        {
                            "name": "INTERNAL_NON_TRAFFICKER"
                        },
                        {
                            "name": "INTERNAL_TRAFFICKER"
                        }
                    ]
                },
                {
                    "name": "userAccessType",
                    "desc": "User type of the user profile. This is a read-only field that can be left blank.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "INTERNAL_ADMINISTRATOR"
                        },
                        {
                            "name": "NORMAL_USER"
                        },
                        {
                            "name": "READ_ONLY_SUPER_USER"
                        },
                        {
                            "name": "SUPER_USER"
                        }
                    ]
                },
                {
                    "name": "active",
                    "desc": "Whether this user profile is active. This defaults to false, and must be set true on insert for the user profile to be usable.",
                    "type": "bool"
                },
                {
                    "name": "advertiserFilter",
                    "desc": "Filter that describes which advertisers are visible to the user profile.",
                    "type": "ref",
                    "refType": "ObjectFilter"
                },
                {
                    "name": "email",
                    "desc": "Email of the user profile. The email addresss must be linked to a Google Account. This field is required on insertion and is read-only after insertion.",
                    "type": "string"
                },
                {
                    "name": "locale",
                    "desc": "Locale of the user profile. This is a required field.\nAcceptable values are:  \n- \"cs\" (Czech) \n- \"de\" (German) \n- \"en\" (English) \n- \"en-GB\" (English United Kingdom) \n- \"es\" (Spanish) \n- \"fr\" (French) \n- \"it\" (Italian) \n- \"ja\" (Japanese) \n- \"ko\" (Korean) \n- \"pl\" (Polish) \n- \"pt-BR\" (Portuguese Brazil)\n- \"ru\" (Russian) \n- \"sv\" (Swedish) \n- \"tr\" (Turkish) \n- \"zh-CN\" (Chinese Simplified) \n- \"zh-TW\" (Chinese Traditional)",
                    "type": "string"
                },
                {
                    "name": "siteFilter",
                    "desc": "Filter that describes which sites are visible to the user profile.",
                    "type": "ref",
                    "refType": "ObjectFilter"
                },
                {
                    "name": "subaccountId",
                    "desc": "Subaccount ID of the user profile. This is a read-only field that can be left blank.",
                    "type": "int64"
                },
                {
                    "name": "userRoleFilter",
                    "desc": "Filter that describes which user roles are visible to the user profile.",
                    "type": "ref",
                    "refType": "ObjectFilter"
                },
                {
                    "name": "accountId",
                    "desc": "Account ID of the user profile. This is a read-only field that can be left blank.",
                    "type": "int64"
                },
                {
                    "name": "campaignFilter",
                    "desc": "Filter that describes which campaigns are visible to the user profile.",
                    "type": "ref",
                    "refType": "ObjectFilter"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#accountUserProfile\".",
                    "type": "string",
                    "default": "dfareporting#accountUserProfile"
                },
                {
                    "name": "name",
                    "desc": "Name of the user profile. This is a required field. Must be less than 64 characters long, must be globally unique, and cannot contain whitespace or any of the following characters: \"\u0026;\"#%,\".",
                    "type": "string"
                },
                {
                    "name": "userRoleId",
                    "desc": "User role ID of the user profile. This is a required field.",
                    "type": "int64"
                }
            ]
        },
        {
            "name": "ClickThroughUrl",
            "desc": "Click-through URL",
            "type": "object",
            "fields": [
                {
                    "name": "landingPageId",
                    "desc": "ID of the landing page for the click-through URL. Applicable if the defaultLandingPage field is set to false.",
                    "type": "int64"
                },
                {
                    "name": "computedClickThroughUrl",
                    "desc": "Read-only convenience field representing the actual URL that will be used for this click-through. The URL is computed as follows: \n- If defaultLandingPage is enabled then the campaign's default landing page URL is assigned to this field.\n- If defaultLandingPage is not enabled and a landingPageId is specified then that landing page's URL is assigned to this field.\n- If neither of the above cases apply, then the customClickThroughUrl is assigned to this field.",
                    "type": "string"
                },
                {
                    "name": "customClickThroughUrl",
                    "desc": "Custom click-through URL. Applicable if the defaultLandingPage field is set to false and the landingPageId field is left unset.",
                    "type": "string"
                },
                {
                    "name": "defaultLandingPage",
                    "desc": "Whether the campaign default landing page is used.",
                    "type": "bool"
                }
            ]
        },
        {
            "name": "CountriesListResponse",
            "desc": "Country List Response",
            "type": "object",
            "fields": [
                {
                    "name": "countries",
                    "desc": "Country collection.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Country"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#countriesListResponse\".",
                    "type": "string",
                    "default": "dfareporting#countriesListResponse"
                }
            ]
        },
        {
            "name": "CreativeFieldValue",
            "desc": "Contains properties of a creative field value.",
            "type": "object",
            "fields": [
                {
                    "name": "id",
                    "desc": "ID of this creative field value. This is a read-only, auto-generated field.",
                    "type": "int64"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#creativeFieldValue\".",
                    "type": "string",
                    "default": "dfareporting#creativeFieldValue"
                },
                {
                    "name": "value",
                    "desc": "Value of this creative field value. It needs to be less than 256 characters in length and unique per creative field.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "UserRolePermissionsListResponse",
            "desc": "User Role Permission List Response",
            "type": "object",
            "fields": [
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#userRolePermissionsListResponse\".",
                    "type": "string",
                    "default": "dfareporting#userRolePermissionsListResponse"
                },
                {
                    "name": "userRolePermissions",
                    "desc": "User role permission collection.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "UserRolePermission"
                }
            ]
        },
        {
            "name": "RichMediaExitOverride",
            "desc": "Rich Media Exit Override.",
            "type": "object",
            "fields": [
                {
                    "name": "clickThroughUrl",
                    "desc": "Click-through URL of this rich media exit override. Applicable if the enabled field is set to true.",
                    "type": "ref",
                    "refType": "ClickThroughUrl"
                },
                {
                    "name": "enabled",
                    "desc": "Whether to use the clickThroughUrl. If false, the creative-level exit will be used.",
                    "type": "bool"
                },
                {
                    "name": "exitId",
                    "desc": "ID for the override to refer to a specific exit in the creative.",
                    "type": "int64"
                }
            ]
        },
        {
            "name": "AccountPermissionGroup",
            "desc": "AccountPermissionGroups contains a mapping of permission group IDs to names. A permission group is a grouping of account permissions.",
            "type": "object",
            "fields": [
                {
                    "name": "id",
                    "desc": "ID of this account permission group.",
                    "type": "int64"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#accountPermissionGroup\".",
                    "type": "string",
                    "default": "dfareporting#accountPermissionGroup"
                },
                {
                    "name": "name",
                    "desc": "Name of this account permission group.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "ChangeLogsListResponse",
            "desc": "Change Log List Response",
            "type": "object",
            "fields": [
                {
                    "name": "changeLogs",
                    "desc": "Change log collection.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "ChangeLog"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#changeLogsListResponse\".",
                    "type": "string",
                    "default": "dfareporting#changeLogsListResponse"
                },
                {
                    "name": "nextPageToken",
                    "desc": "Pagination token to be used for the next list operation.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "CreativeAssetSelection",
            "desc": "Encapsulates the list of rules for asset selection and a default asset in case none of the rules match. Applicable to INSTREAM_VIDEO creatives.",
            "type": "object",
            "fields": [
                {
                    "name": "defaultAssetId",
                    "desc": "A creativeAssets[].id. This should refer to one of the parent assets in this creative, and will be served if none of the rules match. This is a required field.",
                    "type": "int64"
                },
                {
                    "name": "rules",
                    "desc": "Rules determine which asset will be served to a viewer. Rules will be evaluated in the order in which they are stored in this list. This list must contain at least one rule. Applicable to INSTREAM_VIDEO creatives.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Rule"
                }
            ]
        },
        {
            "name": "DeliverySchedule",
            "desc": "Delivery Schedule.",
            "type": "object",
            "fields": [
                {
                    "name": "frequencyCap",
                    "desc": "Limit on the number of times an individual user can be served the ad within a specified period of time.",
                    "type": "ref",
                    "refType": "FrequencyCap"
                },
                {
                    "name": "hardCutoff",
                    "desc": "Whether or not hard cutoff is enabled. If true, the ad will not serve after the end date and time. Otherwise the ad will continue to be served until it has reached its delivery goals.",
                    "type": "bool"
                },
                {
                    "name": "impressionRatio",
                    "desc": "Impression ratio for this ad. This ratio determines how often each ad is served relative to the others. For example, if ad A has an impression ratio of 1 and ad B has an impression ratio of 3, then DCM will serve ad B three times as often as ad A. Must be between 1 and 10.",
                    "type": "int64"
                },
                {
                    "name": "priority",
                    "desc": "Serving priority of an ad, with respect to other ads. The lower the priority number, the greater the priority with which it is served.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "AD_PRIORITY_01"
                        },
                        {
                            "name": "AD_PRIORITY_02"
                        },
                        {
                            "name": "AD_PRIORITY_03"
                        },
                        {
                            "name": "AD_PRIORITY_04"
                        },
                        {
                            "name": "AD_PRIORITY_05"
                        },
                        {
                            "name": "AD_PRIORITY_06"
                        },
                        {
                            "name": "AD_PRIORITY_07"
                        },
                        {
                            "name": "AD_PRIORITY_08"
                        },
                        {
                            "name": "AD_PRIORITY_09"
                        },
                        {
                            "name": "AD_PRIORITY_10"
                        },
                        {
                            "name": "AD_PRIORITY_11"
                        },
                        {
                            "name": "AD_PRIORITY_12"
                        },
                        {
                            "name": "AD_PRIORITY_13"
                        },
                        {
                            "name": "AD_PRIORITY_14"
                        },
                        {
                            "name": "AD_PRIORITY_15"
                        },
                        {
                            "name": "AD_PRIORITY_16"
                        }
                    ]
                }
            ]
        },
        {
            "name": "DynamicTargetingKey",
            "desc": "Contains properties of a dynamic targeting key. Dynamic targeting keys are unique, user-friendly labels, created at the advertiser level in DCM, that can be assigned to ads, creatives, and placements and used for targeting with DoubleClick Studio dynamic creatives. Use these labels instead of numeric DCM IDs (such as placement IDs) to save time and avoid errors in your dynamic feeds.",
            "type": "object",
            "fields": [
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#dynamicTargetingKey\".",
                    "type": "string",
                    "default": "dfareporting#dynamicTargetingKey"
                },
                {
                    "name": "name",
                    "desc": "Name of this dynamic targeting key. This is a required field. Must be less than 256 characters long and cannot contain commas. All characters are converted to lowercase.",
                    "type": "string"
                },
                {
                    "name": "objectId",
                    "desc": "ID of the object of this dynamic targeting key. This is a required field.",
                    "type": "int64"
                },
                {
                    "name": "objectType",
                    "desc": "Type of the object of this dynamic targeting key. This is a required field.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "OBJECT_AD"
                        },
                        {
                            "name": "OBJECT_ADVERTISER"
                        },
                        {
                            "name": "OBJECT_CREATIVE"
                        },
                        {
                            "name": "OBJECT_PLACEMENT"
                        }
                    ]
                }
            ]
        },
        {
            "name": "FloodlightActivitiesGenerateTagResponse",
            "desc": "Floodlight Activity GenerateTag Response",
            "type": "object",
            "fields": [
                {
                    "name": "floodlightActivityTag",
                    "desc": "Generated tag for this floodlight activity.",
                    "type": "string"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#floodlightActivitiesGenerateTagResponse\".",
                    "type": "string",
                    "default": "dfareporting#floodlightActivitiesGenerateTagResponse"
                }
            ]
        },
        {
            "name": "PlatformType",
            "desc": "Contains information about a platform type that can be targeted by ads.",
            "type": "object",
            "fields": [
                {
                    "name": "id",
                    "desc": "ID of this platform type.",
                    "type": "int64"
                },
                {
                    "name": "kind",
                    "desc": "Identifies what kind of resource this is. Value: the fixed string \"dfareporting#platformType\".",
                    "type": "string",
                    "default": "dfareporting#platformType"
                },
                {
                    "name": "name",
                    "desc": "Name of this platform type.",
                    "type": "string"
                }
            ]
        }
    ],
    "resources": [
        {
            "name": "campaigns",
            "methods": [
                {
                    "path": "userprofiles/{profileId}/campaigns",
                    "httpMethod": "GET",
                    "name": "list",
                    "desc": "Retrieves a list of campaigns, possibly filtered. This method supports paging.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "optionalQueryParams": [
                        {
                            "name": "excludedIds",
                            "desc": "Exclude campaigns with these IDs.",
                            "type": "int64"
                        },
                        {
                            "name": "overriddenEventTagId",
                            "desc": "Select only campaigns that have overridden this event tag ID.",
                            "type": "int64"
                        },
                        {
                            "name": "sortField",
                            "desc": "Field by which to sort the list.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "ID"
                                },
                                {
                                    "name": "NAME"
                                }
                            ]
                        },
                        {
                            "name": "atLeastOneOptimizationActivity",
                            "desc": "Select only campaigns that have at least one optimization activity.",
                            "type": "bool"
                        },
                        {
                            "name": "ids",
                            "desc": "Select only campaigns with these IDs.",
                            "type": "int64"
                        },
                        {
                            "name": "sortOrder",
                            "desc": "Order of sorted results, default is ASCENDING.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "ASCENDING"
                                },
                                {
                                    "name": "DESCENDING"
                                }
                            ]
                        },
                        {
                            "name": "subaccountId",
                            "desc": "Select only campaigns that belong to this subaccount.",
                            "type": "int64"
                        },
                        {
                            "name": "advertiserIds",
                            "desc": "Select only campaigns that belong to these advertisers.",
                            "type": "int64"
                        },
                        {
                            "name": "archived",
                            "desc": "Select only archived campaigns. Don't set this field to select both archived and non-archived campaigns.",
                            "type": "bool"
                        },
                        {
                            "name": "maxResults",
                            "desc": "Maximum number of results to return.",
                            "type": "int32"
                        },
                        {
                            "name": "pageToken",
                            "desc": "Value of the nextPageToken from the previous result page.",
                            "type": "string"
                        },
                        {
                            "name": "searchString",
                            "desc": "Allows searching for campaigns by name or ID. Wildcards (*) are allowed. For example, \"campaign*2015\" will return campaigns with names like \"campaign June 2015\", \"campaign April 2015\", or simply \"campaign 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"campaign\" will match campaigns with name \"my campaign\", \"campaign 2015\", or simply \"campaign\".",
                            "type": "string"
                        },
                        {
                            "name": "advertiserGroupIds",
                            "desc": "Select only campaigns whose advertisers belong to these advertiser groups.",
                            "type": "int64"
                        }
                    ],
                    "response": "CampaignsListResponse"
                },
                {
                    "path": "userprofiles/{profileId}/campaigns",
                    "httpMethod": "PATCH",
                    "name": "patch",
                    "desc": "Updates an existing campaign. This method supports patch semantics.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "requiredQueryParams": [
                        {
                            "name": "id",
                            "desc": "Campaign ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "Campaign",
                    "response": "Campaign"
                },
                {
                    "path": "userprofiles/{profileId}/campaigns",
                    "httpMethod": "PUT",
                    "name": "update",
                    "desc": "Updates an existing campaign.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "Campaign",
                    "response": "Campaign"
                },
                {
                    "path": "userprofiles/{profileId}/campaigns/{id}",
                    "httpMethod": "GET",
                    "name": "get",
                    "desc": "Gets one campaign by ID.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "id",
                            "desc": "Campaign ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "response": "Campaign"
                },
                {
                    "path": "userprofiles/{profileId}/campaigns",
                    "httpMethod": "POST",
                    "name": "insert",
                    "desc": "Inserts a new campaign.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "requiredQueryParams": [
                        {
                            "name": "defaultLandingPageName",
                            "desc": "Default landing page name for this new campaign. Must be less than 256 characters long.",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "name": "defaultLandingPageUrl",
                            "desc": "Default landing page URL for this new campaign.",
                            "required": true,
                            "type": "string"
                        }
                    ],
                    "request": "Campaign",
                    "response": "Campaign"
                }
            ]
        },
        {
            "name": "dynamicTargetingKeys",
            "methods": [
                {
                    "path": "userprofiles/{profileId}/dynamicTargetingKeys/{objectId}",
                    "httpMethod": "DELETE",
                    "name": "delete",
                    "desc": "Deletes an existing dynamic targeting key.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "objectId",
                            "desc": "ID of the object of this dynamic targeting key. This is a required field.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "requiredQueryParams": [
                        {
                            "name": "name",
                            "desc": "Name of this dynamic targeting key. This is a required field. Must be less than 256 characters long and cannot contain commas. All characters are converted to lowercase.",
                            "required": true,
                            "type": "string"
                        },
                        {
                            "name": "objectType",
                            "desc": "Type of the object of this dynamic targeting key. This is a required field.",
                            "required": true,
                            "type": "string",
                            "enum": [
                                {
                                    "name": "OBJECT_AD"
                                },
                                {
                                    "name": "OBJECT_ADVERTISER"
                                },
                                {
                                    "name": "OBJECT_CREATIVE"
                                },
                                {
                                    "name": "OBJECT_PLACEMENT"
                                }
                            ]
                        }
                    ]
                },
                {
                    "path": "userprofiles/{profileId}/dynamicTargetingKeys",
                    "httpMethod": "POST",
                    "name": "insert",
                    "desc": "Inserts a new dynamic targeting key. Keys must be created at the advertiser level before being assigned to the advertiser's ads, creatives, or placements. There is a maximum of 1000 keys per advertiser, out of which a maximum of 20 keys can be assigned per ad, creative, or placement.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "DynamicTargetingKey",
                    "response": "DynamicTargetingKey"
                },
                {
                    "path": "userprofiles/{profileId}/dynamicTargetingKeys",
                    "httpMethod": "GET",
                    "name": "list",
                    "desc": "Retrieves a list of dynamic targeting keys.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "optionalQueryParams": [
                        {
                            "name": "advertiserId",
                            "desc": "Select only dynamic targeting keys whose object has this advertiser ID.",
                            "type": "int64"
                        },
                        {
                            "name": "names",
                            "desc": "Select only dynamic targeting keys exactly matching these names.",
                            "type": "string"
                        },
                        {
                            "name": "objectId",
                            "desc": "Select only dynamic targeting keys with this object ID.",
                            "type": "int64"
                        },
                        {
                            "name": "objectType",
                            "desc": "Select only dynamic targeting keys with this object type.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "OBJECT_AD"
                                },
                                {
                                    "name": "OBJECT_ADVERTISER"
                                },
                                {
                                    "name": "OBJECT_CREATIVE"
                                },
                                {
                                    "name": "OBJECT_PLACEMENT"
                                }
                            ]
                        }
                    ],
                    "response": "DynamicTargetingKeysListResponse"
                }
            ]
        },
        {
            "name": "videoFormats",
            "methods": [
                {
                    "path": "userprofiles/{profileId}/videoFormats/{id}",
                    "httpMethod": "GET",
                    "name": "get",
                    "desc": "Gets one video format by ID.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "id",
                            "desc": "Video format ID.",
                            "required": true,
                            "type": "int32"
                        }
                    ],
                    "response": "VideoFormat"
                },
                {
                    "path": "userprofiles/{profileId}/videoFormats",
                    "httpMethod": "GET",
                    "name": "list",
                    "desc": "Lists available video formats.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "response": "VideoFormatsListResponse"
                }
            ]
        },
        {
            "name": "campaignCreativeAssociations",
            "methods": [
                {
                    "path": "userprofiles/{profileId}/campaigns/{campaignId}/campaignCreativeAssociations",
                    "httpMethod": "POST",
                    "name": "insert",
                    "desc": "Associates a creative with the specified campaign. This method creates a default ad with dimensions matching the creative in the campaign if such a default ad does not exist already.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "campaignId",
                            "desc": "Campaign ID in this association.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "CampaignCreativeAssociation",
                    "response": "CampaignCreativeAssociation"
                },
                {
                    "path": "userprofiles/{profileId}/campaigns/{campaignId}/campaignCreativeAssociations",
                    "httpMethod": "GET",
                    "name": "list",
                    "desc": "Retrieves the list of creative IDs associated with the specified campaign. This method supports paging.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "campaignId",
                            "desc": "Campaign ID in this association.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "optionalQueryParams": [
                        {
                            "name": "sortOrder",
                            "desc": "Order of sorted results, default is ASCENDING.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "ASCENDING"
                                },
                                {
                                    "name": "DESCENDING"
                                }
                            ]
                        },
                        {
                            "name": "maxResults",
                            "desc": "Maximum number of results to return.",
                            "type": "int32"
                        },
                        {
                            "name": "pageToken",
                            "desc": "Value of the nextPageToken from the previous result page.",
                            "type": "string"
                        }
                    ],
                    "response": "CampaignCreativeAssociationsListResponse"
                }
            ]
        },
        {
            "name": "countries",
            "methods": [
                {
                    "path": "userprofiles/{profileId}/countries/{dartId}",
                    "httpMethod": "GET",
                    "name": "get",
                    "desc": "Gets one country by ID.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "dartId",
                            "desc": "Country DART ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "response": "Country"
                },
                {
                    "path": "userprofiles/{profileId}/countries",
                    "httpMethod": "GET",
                    "name": "list",
                    "desc": "Retrieves a list of countries.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "response": "CountriesListResponse"
                }
            ]
        },
        {
            "name": "creativeFieldValues",
            "methods": [
                {
                    "path": "userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues",
                    "httpMethod": "PATCH",
                    "name": "patch",
                    "desc": "Updates an existing creative field value. This method supports patch semantics.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "creativeFieldId",
                            "desc": "Creative field ID for this creative field value.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "requiredQueryParams": [
                        {
                            "name": "id",
                            "desc": "Creative Field Value ID",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "CreativeFieldValue",
                    "response": "CreativeFieldValue"
                },
                {
                    "path": "userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues",
                    "httpMethod": "PUT",
                    "name": "update",
                    "desc": "Updates an existing creative field value.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "creativeFieldId",
                            "desc": "Creative field ID for this creative field value.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "CreativeFieldValue",
                    "response": "CreativeFieldValue"
                },
                {
                    "path": "userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues/{id}",
                    "httpMethod": "DELETE",
                    "name": "delete",
                    "desc": "Deletes an existing creative field value.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "creativeFieldId",
                            "desc": "Creative field ID for this creative field value.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "id",
                            "desc": "Creative Field Value ID",
                            "required": true,
                            "type": "int64"
                        }
                    ]
                },
                {
                    "path": "userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues/{id}",
                    "httpMethod": "GET",
                    "name": "get",
                    "desc": "Gets one creative field value by ID.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "creativeFieldId",
                            "desc": "Creative field ID for this creative field value.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "id",
                            "desc": "Creative Field Value ID",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "response": "CreativeFieldValue"
                },
                {
                    "path": "userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues",
                    "httpMethod": "POST",
                    "name": "insert",
                    "desc": "Inserts a new creative field value.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "creativeFieldId",
                            "desc": "Creative field ID for this creative field value.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "CreativeFieldValue",
                    "response": "CreativeFieldValue"
                },
                {
                    "path": "userprofiles/{profileId}/creativeFields/{creativeFieldId}/creativeFieldValues",
                    "httpMethod": "GET",
                    "name": "list",
                    "desc": "Retrieves a list of creative field values, possibly filtered. This method supports paging.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "creativeFieldId",
                            "desc": "Creative field ID for this creative field value.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "optionalQueryParams": [
                        {
                            "name": "sortOrder",
                            "desc": "Order of sorted results, default is ASCENDING.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "ASCENDING"
                                },
                                {
                                    "name": "DESCENDING"
                                }
                            ]
                        },
                        {
                            "name": "ids",
                            "desc": "Select only creative field values with these IDs.",
                            "type": "int64"
                        },
                        {
                            "name": "maxResults",
                            "desc": "Maximum number of results to return.",
                            "type": "int32"
                        },
                        {
                            "name": "pageToken",
                            "desc": "Value of the nextPageToken from the previous result page.",
                            "type": "string"
                        },
                        {
                            "name": "searchString",
                            "desc": "Allows searching for creative field values by their values. Wildcards (e.g. *) are not allowed.",
                            "type": "string"
                        },
                        {
                            "name": "sortField",
                            "desc": "Field by which to sort the list.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "ID"
                                },
                                {
                                    "name": "VALUE"
                                }
                            ]
                        }
                    ],
                    "response": "CreativeFieldValuesListResponse"
                }
            ]
        },
        {
            "name": "floodlightActivities",
            "methods": [
                {
                    "path": "userprofiles/{profileId}/floodlightActivities",
                    "httpMethod": "PUT",
                    "name": "update",
                    "desc": "Updates an existing floodlight activity.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "FloodlightActivity",
                    "response": "FloodlightActivity"
                },
                {
                    "path": "userprofiles/{profileId}/floodlightActivities/{id}",
                    "httpMethod": "DELETE",
                    "name": "delete",
                    "desc": "Deletes an existing floodlight activity.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "id",
                            "desc": "Floodlight activity ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ]
                },
                {
                    "path": "userprofiles/{profileId}/floodlightActivities/generatetag",
                    "httpMethod": "POST",
                    "name": "generatetag",
                    "desc": "Generates a tag for a floodlight activity.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "optionalQueryParams": [
                        {
                            "name": "floodlightActivityId",
                            "desc": "Floodlight activity ID for which we want to generate a tag.",
                            "type": "int64"
                        }
                    ],
                    "response": "FloodlightActivitiesGenerateTagResponse"
                },
                {
                    "path": "userprofiles/{profileId}/floodlightActivities/{id}",
                    "httpMethod": "GET",
                    "name": "get",
                    "desc": "Gets one floodlight activity by ID.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "id",
                            "desc": "Floodlight activity ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "response": "FloodlightActivity"
                },
                {
                    "path": "userprofiles/{profileId}/floodlightActivities",
                    "httpMethod": "POST",
                    "name": "insert",
                    "desc": "Inserts a new floodlight activity.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "FloodlightActivity",
                    "response": "FloodlightActivity"
                },
                {
                    "path": "userprofiles/{profileId}/floodlightActivities",
                    "httpMethod": "GET",
                    "name": "list",
                    "desc": "Retrieves a list of floodlight activities, possibly filtered. This method supports paging.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "optionalQueryParams": [
                        {
                            "name": "advertiserId",
                            "desc": "Select only floodlight activities for the specified advertiser ID. Must specify either ids, advertiserId, or floodlightConfigurationId for a non-empty result.",
                            "type": "int64"
                        },
                        {
                            "name": "floodlightActivityGroupName",
                            "desc": "Select only floodlight activities with the specified floodlight activity group name.",
                            "type": "string"
                        },
                        {
                            "name": "floodlightActivityGroupTagString",
                            "desc": "Select only floodlight activities with the specified floodlight activity group tag string.",
                            "type": "string"
                        },
                        {
                            "name": "floodlightConfigurationId",
                            "desc": "Select only floodlight activities for the specified floodlight configuration ID. Must specify either ids, advertiserId, or floodlightConfigurationId for a non-empty result.",
                            "type": "int64"
                        },
                        {
                            "name": "ids",
                            "desc": "Select only floodlight activities with the specified IDs. Must specify either ids, advertiserId, or floodlightConfigurationId for a non-empty result.",
                            "type": "int64"
                        },
                        {
                            "name": "sortField",
                            "desc": "Field by which to sort the list.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "ID"
                                },
                                {
                                    "name": "NAME"
                                }
                            ]
                        },
                        {
                            "name": "floodlightActivityGroupType",
                            "desc": "Select only floodlight activities with the specified floodlight activity group type.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "COUNTER"
                                },
                                {
                                    "name": "SALE"
                                }
                            ]
                        },
                        {
                            "name": "searchString",
                            "desc": "Allows searching for objects by name or ID. Wildcards (*) are allowed. For example, \"floodlightactivity*2015\" will return objects with names like \"floodlightactivity June 2015\", \"floodlightactivity April 2015\", or simply \"floodlightactivity 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"floodlightactivity\" will match objects with name \"my floodlightactivity activity\", \"floodlightactivity 2015\", or simply \"floodlightactivity\".",
                            "type": "string"
                        },
                        {
                            "name": "floodlightActivityGroupIds",
                            "desc": "Select only floodlight activities with the specified floodlight activity group IDs.",
                            "type": "int64"
                        },
                        {
                            "name": "maxResults",
                            "desc": "Maximum number of results to return.",
                            "type": "int32"
                        },
                        {
                            "name": "pageToken",
                            "desc": "Value of the nextPageToken from the previous result page.",
                            "type": "string"
                        },
                        {
                            "name": "sortOrder",
                            "desc": "Order of sorted results, default is ASCENDING.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "ASCENDING"
                                },
                                {
                                    "name": "DESCENDING"
                                }
                            ]
                        },
                        {
                            "name": "tagString",
                            "desc": "Select only floodlight activities with the specified tag string.",
                            "type": "string"
                        }
                    ],
                    "response": "FloodlightActivitiesListResponse"
                },
                {
                    "path": "userprofiles/{profileId}/floodlightActivities",
                    "httpMethod": "PATCH",
                    "name": "patch",
                    "desc": "Updates an existing floodlight activity. This method supports patch semantics.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "requiredQueryParams": [
                        {
                            "name": "id",
                            "desc": "Floodlight activity ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "FloodlightActivity",
                    "response": "FloodlightActivity"
                }
            ]
        },
        {
            "name": "orders",
            "methods": [
                {
                    "path": "userprofiles/{profileId}/projects/{projectId}/orders/{id}",
                    "httpMethod": "GET",
                    "name": "get",
                    "desc": "Gets one order by ID.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "projectId",
                            "desc": "Project ID for orders.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "id",
                            "desc": "Order ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "response": "Order"
                },
                {
                    "path": "userprofiles/{profileId}/projects/{projectId}/orders",
                    "httpMethod": "GET",
                    "name": "list",
                    "desc": "Retrieves a list of orders, possibly filtered. This method supports paging.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "projectId",
                            "desc": "Project ID for orders.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "optionalQueryParams": [
                        {
                            "name": "pageToken",
                            "desc": "Value of the nextPageToken from the previous result page.",
                            "type": "string"
                        },
                        {
                            "name": "siteId",
                            "desc": "Select only orders that are associated with these site IDs.",
                            "type": "int64"
                        },
                        {
                            "name": "sortField",
                            "desc": "Field by which to sort the list.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "ID"
                                },
                                {
                                    "name": "NAME"
                                }
                            ]
                        },
                        {
                            "name": "ids",
                            "desc": "Select only orders with these IDs.",
                            "type": "int64"
                        },
                        {
                            "name": "maxResults",
                            "desc": "Maximum number of results to return.",
                            "type": "int32"
                        },
                        {
                            "name": "searchString",
                            "desc": "Allows searching for orders by name or ID. Wildcards (*) are allowed. For example, \"order*2015\" will return orders with names like \"order June 2015\", \"order April 2015\", or simply \"order 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"order\" will match orders with name \"my order\", \"order 2015\", or simply \"order\".",
                            "type": "string"
                        },
                        {
                            "name": "sortOrder",
                            "desc": "Order of sorted results, default is ASCENDING.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "ASCENDING"
                                },
                                {
                                    "name": "DESCENDING"
                                }
                            ]
                        }
                    ],
                    "response": "OrdersListResponse"
                }
            ]
        },
        {
            "name": "browsers",
            "methods": [
                {
                    "path": "userprofiles/{profileId}/browsers",
                    "httpMethod": "GET",
                    "name": "list",
                    "desc": "Retrieves a list of browsers.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "response": "BrowsersListResponse"
                }
            ]
        },
        {
            "name": "operatingSystemVersions",
            "methods": [
                {
                    "path": "userprofiles/{profileId}/operatingSystemVersions/{id}",
                    "httpMethod": "GET",
                    "name": "get",
                    "desc": "Gets one operating system version by ID.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "id",
                            "desc": "Operating system version ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "response": "OperatingSystemVersion"
                },
                {
                    "path": "userprofiles/{profileId}/operatingSystemVersions",
                    "httpMethod": "GET",
                    "name": "list",
                    "desc": "Retrieves a list of operating system versions.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "response": "OperatingSystemVersionsListResponse"
                }
            ]
        },
        {
            "name": "accountUserProfiles",
            "methods": [
                {
                    "path": "userprofiles/{profileId}/accountUserProfiles/{id}",
                    "httpMethod": "GET",
                    "name": "get",
                    "desc": "Gets one account user profile by ID.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "id",
                            "desc": "User profile ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "response": "AccountUserProfile"
                },
                {
                    "path": "userprofiles/{profileId}/accountUserProfiles",
                    "httpMethod": "POST",
                    "name": "insert",
                    "desc": "Inserts a new account user profile.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "AccountUserProfile",
                    "response": "AccountUserProfile"
                },
                {
                    "path": "userprofiles/{profileId}/accountUserProfiles",
                    "httpMethod": "GET",
                    "name": "list",
                    "desc": "Retrieves a list of account user profiles, possibly filtered. This method supports paging.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "optionalQueryParams": [
                        {
                            "name": "ids",
                            "desc": "Select only user profiles with these IDs.",
                            "type": "int64"
                        },
                        {
                            "name": "searchString",
                            "desc": "Allows searching for objects by name, ID or email. Wildcards (*) are allowed. For example, \"user profile*2015\" will return objects with names like \"user profile June 2015\", \"user profile April 2015\", or simply \"user profile 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"user profile\" will match objects with name \"my user profile\", \"user profile 2015\", or simply \"user profile\".",
                            "type": "string"
                        },
                        {
                            "name": "sortOrder",
                            "desc": "Order of sorted results, default is ASCENDING.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "ASCENDING"
                                },
                                {
                                    "name": "DESCENDING"
                                }
                            ]
                        },
                        {
                            "name": "userRoleId",
                            "desc": "Select only user profiles with the specified user role ID.",
                            "type": "int64"
                        },
                        {
                            "name": "subaccountId",
                            "desc": "Select only user profiles with the specified subaccount ID.",
                            "type": "int64"
                        },
                        {
                            "name": "active",
                            "desc": "Select only active user profiles.",
                            "type": "bool"
                        },
                        {
                            "name": "maxResults",
                            "desc": "Maximum number of results to return.",
                            "type": "int32"
                        },
                        {
                            "name": "pageToken",
                            "desc": "Value of the nextPageToken from the previous result page.",
                            "type": "string"
                        },
                        {
                            "name": "sortField",
                            "desc": "Field by which to sort the list.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "ID"
                                },
                                {
                                    "name": "NAME"
                                }
                            ]
                        }
                    ],
                    "response": "AccountUserProfilesListResponse"
                },
                {
                    "path": "userprofiles/{profileId}/accountUserProfiles",
                    "httpMethod": "PATCH",
                    "name": "patch",
                    "desc": "Updates an existing account user profile. This method supports patch semantics.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "requiredQueryParams": [
                        {
                            "name": "id",
                            "desc": "User profile ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "AccountUserProfile",
                    "response": "AccountUserProfile"
                },
                {
                    "path": "userprofiles/{profileId}/accountUserProfiles",
                    "httpMethod": "PUT",
                    "name": "update",
                    "desc": "Updates an existing account user profile.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "AccountUserProfile",
                    "response": "AccountUserProfile"
                }
            ]
        },
        {
            "name": "connectionTypes",
            "methods": [
                {
                    "path": "userprofiles/{profileId}/connectionTypes/{id}",
                    "httpMethod": "GET",
                    "name": "get",
                    "desc": "Gets one connection type by ID.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "id",
                            "desc": "Connection type ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "response": "ConnectionType"
                },
                {
                    "path": "userprofiles/{profileId}/connectionTypes",
                    "httpMethod": "GET",
                    "name": "list",
                    "desc": "Retrieves a list of connection types.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "response": "ConnectionTypesListResponse"
                }
            ]
        },
        {
            "name": "sites",
            "methods": [
                {
                    "path": "userprofiles/{profileId}/sites/{id}",
                    "httpMethod": "GET",
                    "name": "get",
                    "desc": "Gets one site by ID.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "id",
                            "desc": "Site ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "response": "Site"
                },
                {
                    "path": "userprofiles/{profileId}/sites",
                    "httpMethod": "POST",
                    "name": "insert",
                    "desc": "Inserts a new site.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "Site",
                    "response": "Site"
                },
                {
                    "path": "userprofiles/{profileId}/sites",
                    "httpMethod": "GET",
                    "name": "list",
                    "desc": "Retrieves a list of sites, possibly filtered. This method supports paging.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "optionalQueryParams": [
                        {
                            "name": "acceptsInStreamVideoPlacements",
                            "desc": "This search filter is no longer supported and will have no effect on the results returned.",
                            "type": "bool"
                        },
                        {
                            "name": "adWordsSite",
                            "desc": "Select only AdWords sites.",
                            "type": "bool"
                        },
                        {
                            "name": "unmappedSite",
                            "desc": "Select only sites that have not been mapped to a directory site.",
                            "type": "bool"
                        },
                        {
                            "name": "acceptsPublisherPaidPlacements",
                            "desc": "Select only sites that accept publisher paid placements.",
                            "type": "bool"
                        },
                        {
                            "name": "campaignIds",
                            "desc": "Select only sites with these campaign IDs.",
                            "type": "int64"
                        },
                        {
                            "name": "ids",
                            "desc": "Select only sites with these IDs.",
                            "type": "int64"
                        },
                        {
                            "name": "pageToken",
                            "desc": "Value of the nextPageToken from the previous result page.",
                            "type": "string"
                        },
                        {
                            "name": "acceptsInterstitialPlacements",
                            "desc": "This search filter is no longer supported and will have no effect on the results returned.",
                            "type": "bool"
                        },
                        {
                            "name": "maxResults",
                            "desc": "Maximum number of results to return.",
                            "type": "int32"
                        },
                        {
                            "name": "searchString",
                            "desc": "Allows searching for objects by name, ID or keyName. Wildcards (*) are allowed. For example, \"site*2015\" will return objects with names like \"site June 2015\", \"site April 2015\", or simply \"site 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"site\" will match objects with name \"my site\", \"site 2015\", or simply \"site\".",
                            "type": "string"
                        },
                        {
                            "name": "sortField",
                            "desc": "Field by which to sort the list.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "ID"
                                },
                                {
                                    "name": "NAME"
                                }
                            ]
                        },
                        {
                            "name": "approved",
                            "desc": "Select only approved sites.",
                            "type": "bool"
                        },
                        {
                            "name": "directorySiteIds",
                            "desc": "Select only sites with these directory site IDs.",
                            "type": "int64"
                        },
                        {
                            "name": "sortOrder",
                            "desc": "Order of sorted results, default is ASCENDING.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "ASCENDING"
                                },
                                {
                                    "name": "DESCENDING"
                                }
                            ]
                        },
                        {
                            "name": "subaccountId",
                            "desc": "Select only sites with this subaccount ID.",
                            "type": "int64"
                        }
                    ],
                    "response": "SitesListResponse"
                },
                {
                    "path": "userprofiles/{profileId}/sites",
                    "httpMethod": "PATCH",
                    "name": "patch",
                    "desc": "Updates an existing site. This method supports patch semantics.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "requiredQueryParams": [
                        {
                            "name": "id",
                            "desc": "Site ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "Site",
                    "response": "Site"
                },
                {
                    "path": "userprofiles/{profileId}/sites",
                    "httpMethod": "PUT",
                    "name": "update",
                    "desc": "Updates an existing site.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "Site",
                    "response": "Site"
                }
            ]
        },
        {
            "name": "accountPermissionGroups",
            "methods": [
                {
                    "path": "userprofiles/{profileId}/accountPermissionGroups/{id}",
                    "httpMethod": "GET",
                    "name": "get",
                    "desc": "Gets one account permission group by ID.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "id",
                            "desc": "Account permission group ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "response": "AccountPermissionGroup"
                },
                {
                    "path": "userprofiles/{profileId}/accountPermissionGroups",
                    "httpMethod": "GET",
                    "name": "list",
                    "desc": "Retrieves the list of account permission groups.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "response": "AccountPermissionGroupsListResponse"
                }
            ]
        },
        {
            "name": "eventTags",
            "methods": [
                {
                    "path": "userprofiles/{profileId}/eventTags/{id}",
                    "httpMethod": "DELETE",
                    "name": "delete",
                    "desc": "Deletes an existing event tag.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "id",
                            "desc": "Event tag ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ]
                },
                {
                    "path": "userprofiles/{profileId}/eventTags/{id}",
                    "httpMethod": "GET",
                    "name": "get",
                    "desc": "Gets one event tag by ID.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "id",
                            "desc": "Event tag ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "response": "EventTag"
                },
                {
                    "path": "userprofiles/{profileId}/eventTags",
                    "httpMethod": "POST",
                    "name": "insert",
                    "desc": "Inserts a new event tag.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "EventTag",
                    "response": "EventTag"
                },
                {
                    "path": "userprofiles/{profileId}/eventTags",
                    "httpMethod": "GET",
                    "name": "list",
                    "desc": "Retrieves a list of event tags, possibly filtered.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "optionalQueryParams": [
                        {
                            "name": "adId",
                            "desc": "Select only event tags that belong to this ad.",
                            "type": "int64"
                        },
                        {
                            "name": "advertiserId",
                            "desc": "Select only event tags that belong to this advertiser.",
                            "type": "int64"
                        },
                        {
                            "name": "sortOrder",
                            "desc": "Order of sorted results, default is ASCENDING.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "ASCENDING"
                                },
                                {
                                    "name": "DESCENDING"
                                }
                            ]
                        },
                        {
                            "name": "ids",
                            "desc": "Select only event tags with these IDs.",
                            "type": "int64"
                        },
                        {
                            "name": "searchString",
                            "desc": "Allows searching for objects by name or ID. Wildcards (*) are allowed. For example, \"eventtag*2015\" will return objects with names like \"eventtag June 2015\", \"eventtag April 2015\", or simply \"eventtag 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"eventtag\" will match objects with name \"my eventtag\", \"eventtag 2015\", or simply \"eventtag\".",
                            "type": "string"
                        },
                        {
                            "name": "sortField",
                            "desc": "Field by which to sort the list.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "ID"
                                },
                                {
                                    "name": "NAME"
                                }
                            ]
                        },
                        {
                            "name": "campaignId",
                            "desc": "Select only event tags that belong to this campaign.",
                            "type": "int64"
                        },
                        {
                            "name": "definitionsOnly",
                            "desc": "Examine only the specified campaign or advertiser's event tags for matching selector criteria. When set to false, the parent advertiser and parent campaign of the specified ad or campaign is examined as well. In addition, when set to false, the status field is examined as well, along with the enabledByDefault field. This parameter can not be set to true when adId is specified as ads do not define their own even tags.",
                            "type": "bool"
                        },
                        {
                            "name": "enabled",
                            "desc": "Select only enabled event tags. What is considered enabled or disabled depends on the definitionsOnly parameter. When definitionsOnly is set to true, only the specified advertiser or campaign's event tags' enabledByDefault field is examined. When definitionsOnly is set to false, the specified ad or specified campaign's parent advertiser's or parent campaign's event tags' enabledByDefault and status fields are examined as well.",
                            "type": "bool"
                        },
                        {
                            "name": "eventTagTypes",
                            "desc": "Select only event tags with the specified event tag types. Event tag types can be used to specify whether to use a third-party pixel, a third-party JavaScript URL, or a third-party click-through URL for either impression or click tracking.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "CLICK_THROUGH_EVENT_TAG"
                                },
                                {
                                    "name": "IMPRESSION_IMAGE_EVENT_TAG"
                                },
                                {
                                    "name": "IMPRESSION_JAVASCRIPT_EVENT_TAG"
                                }
                            ]
                        }
                    ],
                    "response": "EventTagsListResponse"
                },
                {
                    "path": "userprofiles/{profileId}/eventTags",
                    "httpMethod": "PATCH",
                    "name": "patch",
                    "desc": "Updates an existing event tag. This method supports patch semantics.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "requiredQueryParams": [
                        {
                            "name": "id",
                            "desc": "Event tag ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "EventTag",
                    "response": "EventTag"
                },
                {
                    "path": "userprofiles/{profileId}/eventTags",
                    "httpMethod": "PUT",
                    "name": "update",
                    "desc": "Updates an existing event tag.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "EventTag",
                    "response": "EventTag"
                }
            ]
        },
        {
            "name": "inventoryItems",
            "methods": [
                {
                    "path": "userprofiles/{profileId}/projects/{projectId}/inventoryItems/{id}",
                    "httpMethod": "GET",
                    "name": "get",
                    "desc": "Gets one inventory item by ID.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "projectId",
                            "desc": "Project ID for order documents.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "id",
                            "desc": "Inventory item ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "response": "InventoryItem"
                },
                {
                    "path": "userprofiles/{profileId}/projects/{projectId}/inventoryItems",
                    "httpMethod": "GET",
                    "name": "list",
                    "desc": "Retrieves a list of inventory items, possibly filtered. This method supports paging.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "projectId",
                            "desc": "Project ID for order documents.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "optionalQueryParams": [
                        {
                            "name": "sortOrder",
                            "desc": "Order of sorted results, default is ASCENDING.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "ASCENDING"
                                },
                                {
                                    "name": "DESCENDING"
                                }
                            ]
                        },
                        {
                            "name": "type",
                            "desc": "Select only inventory items with this type.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "PLANNING_PLACEMENT_TYPE_CREDIT"
                                },
                                {
                                    "name": "PLANNING_PLACEMENT_TYPE_REGULAR"
                                }
                            ]
                        },
                        {
                            "name": "orderId",
                            "desc": "Select only inventory items that belong to specified orders.",
                            "type": "int64"
                        },
                        {
                            "name": "siteId",
                            "desc": "Select only inventory items that are associated with these sites.",
                            "type": "int64"
                        },
                        {
                            "name": "maxResults",
                            "desc": "Maximum number of results to return.",
                            "type": "int32"
                        },
                        {
                            "name": "pageToken",
                            "desc": "Value of the nextPageToken from the previous result page.",
                            "type": "string"
                        },
                        {
                            "name": "sortField",
                            "desc": "Field by which to sort the list.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "ID"
                                },
                                {
                                    "name": "NAME"
                                }
                            ]
                        },
                        {
                            "name": "ids",
                            "desc": "Select only inventory items with these IDs.",
                            "type": "int64"
                        },
                        {
                            "name": "inPlan",
                            "desc": "Select only inventory items that are in plan.",
                            "type": "bool"
                        }
                    ],
                    "response": "InventoryItemsListResponse"
                }
            ]
        },
        {
            "name": "regions",
            "methods": [
                {
                    "path": "userprofiles/{profileId}/regions",
                    "httpMethod": "GET",
                    "name": "list",
                    "desc": "Retrieves a list of regions.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "response": "RegionsListResponse"
                }
            ]
        },
        {
            "name": "remarketingListShares",
            "methods": [
                {
                    "path": "userprofiles/{profileId}/remarketingListShares",
                    "httpMethod": "PUT",
                    "name": "update",
                    "desc": "Updates an existing remarketing list share.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "RemarketingListShare",
                    "response": "RemarketingListShare"
                },
                {
                    "path": "userprofiles/{profileId}/remarketingListShares/{remarketingListId}",
                    "httpMethod": "GET",
                    "name": "get",
                    "desc": "Gets one remarketing list share by remarketing list ID.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "remarketingListId",
                            "desc": "Remarketing list ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "response": "RemarketingListShare"
                },
                {
                    "path": "userprofiles/{profileId}/remarketingListShares",
                    "httpMethod": "PATCH",
                    "name": "patch",
                    "desc": "Updates an existing remarketing list share. This method supports patch semantics.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "requiredQueryParams": [
                        {
                            "name": "remarketingListId",
                            "desc": "Remarketing list ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "RemarketingListShare",
                    "response": "RemarketingListShare"
                }
            ]
        },
        {
            "name": "cities",
            "methods": [
                {
                    "path": "userprofiles/{profileId}/cities",
                    "httpMethod": "GET",
                    "name": "list",
                    "desc": "Retrieves a list of cities, possibly filtered.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "optionalQueryParams": [
                        {
                            "name": "countryDartIds",
                            "desc": "Select only cities from these countries.",
                            "type": "int64"
                        },
                        {
                            "name": "dartIds",
                            "desc": "Select only cities with these DART IDs.",
                            "type": "int64"
                        },
                        {
                            "name": "namePrefix",
                            "desc": "Select only cities with names starting with this prefix.",
                            "type": "string"
                        },
                        {
                            "name": "regionDartIds",
                            "desc": "Select only cities from these regions.",
                            "type": "int64"
                        }
                    ],
                    "response": "CitiesListResponse"
                }
            ]
        },
        {
            "name": "placements",
            "methods": [
                {
                    "path": "userprofiles/{profileId}/placements/generatetags",
                    "httpMethod": "POST",
                    "name": "generatetags",
                    "desc": "Generates tags for a placement.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "optionalQueryParams": [
                        {
                            "name": "tagFormats",
                            "desc": "Tag formats to generate for these placements.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "PLACEMENT_TAG_CLICK_COMMANDS"
                                },
                                {
                                    "name": "PLACEMENT_TAG_IFRAME_ILAYER"
                                },
                                {
                                    "name": "PLACEMENT_TAG_IFRAME_JAVASCRIPT"
                                },
                                {
                                    "name": "PLACEMENT_TAG_IFRAME_JAVASCRIPT_LEGACY"
                                },
                                {
                                    "name": "PLACEMENT_TAG_INSTREAM_VIDEO_PREFETCH"
                                },
                                {
                                    "name": "PLACEMENT_TAG_INSTREAM_VIDEO_PREFETCH_VAST_3"
                                },
                                {
                                    "name": "PLACEMENT_TAG_INTERNAL_REDIRECT"
                                },
                                {
                                    "name": "PLACEMENT_TAG_INTERSTITIAL_IFRAME_JAVASCRIPT"
                                },
                                {
                                    "name": "PLACEMENT_TAG_INTERSTITIAL_IFRAME_JAVASCRIPT_LEGACY"
                                },
                                {
                                    "name": "PLACEMENT_TAG_INTERSTITIAL_INTERNAL_REDIRECT"
                                },
                                {
                                    "name": "PLACEMENT_TAG_INTERSTITIAL_JAVASCRIPT"
                                },
                                {
                                    "name": "PLACEMENT_TAG_INTERSTITIAL_JAVASCRIPT_LEGACY"
                                },
                                {
                                    "name": "PLACEMENT_TAG_JAVASCRIPT"
                                },
                                {
                                    "name": "PLACEMENT_TAG_JAVASCRIPT_LEGACY"
                                },
                                {
                                    "name": "PLACEMENT_TAG_STANDARD"
                                },
                                {
                                    "name": "PLACEMENT_TAG_TRACKING"
                                },
                                {
                                    "name": "PLACEMENT_TAG_TRACKING_IFRAME"
                                },
                                {
                                    "name": "PLACEMENT_TAG_TRACKING_JAVASCRIPT"
                                }
                            ]
                        },
                        {
                            "name": "campaignId",
                            "desc": "Generate placements belonging to this campaign. This is a required field.",
                            "type": "int64"
                        },
                        {
                            "name": "placementIds",
                            "desc": "Generate tags for these placements.",
                            "type": "int64"
                        }
                    ],
                    "response": "PlacementsGenerateTagsResponse"
                },
                {
                    "path": "userprofiles/{profileId}/placements/{id}",
                    "httpMethod": "GET",
                    "name": "get",
                    "desc": "Gets one placement by ID.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "id",
                            "desc": "Placement ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "response": "Placement"
                },
                {
                    "path": "userprofiles/{profileId}/placements",
                    "httpMethod": "POST",
                    "name": "insert",
                    "desc": "Inserts a new placement.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "Placement",
                    "response": "Placement"
                },
                {
                    "path": "userprofiles/{profileId}/placements",
                    "httpMethod": "GET",
                    "name": "list",
                    "desc": "Retrieves a list of placements, possibly filtered. This method supports paging.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "optionalQueryParams": [
                        {
                            "name": "contentCategoryIds",
                            "desc": "Select only placements that are associated with these content categories.",
                            "type": "int64"
                        },
                        {
                            "name": "directorySiteIds",
                            "desc": "Select only placements that are associated with these directory sites.",
                            "type": "int64"
                        },
                        {
                            "name": "groupIds",
                            "desc": "Select only placements that belong to these placement groups.",
                            "type": "int64"
                        },
                        {
                            "name": "maxStartDate",
                            "desc": "Select only placements or placement groups whose start date is on or before the specified maxStartDate. The date should be formatted as \"yyyy-MM-dd\".",
                            "type": "string"
                        },
                        {
                            "name": "sortOrder",
                            "desc": "Order of sorted results, default is ASCENDING.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "ASCENDING"
                                },
                                {
                                    "name": "DESCENDING"
                                }
                            ]
                        },
                        {
                            "name": "campaignIds",
                            "desc": "Select only placements that belong to these campaigns.",
                            "type": "int64"
                        },
                        {
                            "name": "maxEndDate",
                            "desc": "Select only placements or placement groups whose end date is on or before the specified maxEndDate. The date should be formatted as \"yyyy-MM-dd\".",
                            "type": "string"
                        },
                        {
                            "name": "placementStrategyIds",
                            "desc": "Select only placements that are associated with these placement strategies.",
                            "type": "int64"
                        },
                        {
                            "name": "siteIds",
                            "desc": "Select only placements that are associated with these sites.",
                            "type": "int64"
                        },
                        {
                            "name": "compatibilities",
                            "desc": "Select only placements that are associated with these compatibilities. DISPLAY and DISPLAY_INTERSTITIAL refer to rendering either on desktop or on mobile devices for regular or interstitial ads respectively. APP and APP_INTERSTITIAL are for rendering in mobile apps. IN_STREAM_VIDEO refers to rendering in in-stream video ads developed with the VAST standard.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "APP"
                                },
                                {
                                    "name": "APP_INTERSTITIAL"
                                },
                                {
                                    "name": "DISPLAY"
                                },
                                {
                                    "name": "DISPLAY_INTERSTITIAL"
                                },
                                {
                                    "name": "IN_STREAM_VIDEO"
                                }
                            ]
                        },
                        {
                            "name": "ids",
                            "desc": "Select only placements with these IDs.",
                            "type": "int64"
                        },
                        {
                            "name": "maxResults",
                            "desc": "Maximum number of results to return.",
                            "type": "int32"
                        },
                        {
                            "name": "minStartDate",
                            "desc": "Select only placements or placement groups whose start date is on or after the specified minStartDate. The date should be formatted as \"yyyy-MM-dd\".",
                            "type": "string"
                        },
                        {
                            "name": "paymentSource",
                            "desc": "Select only placements with this payment source.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "PLACEMENT_AGENCY_PAID"
                                },
                                {
                                    "name": "PLACEMENT_PUBLISHER_PAID"
                                }
                            ]
                        },
                        {
                            "name": "sizeIds",
                            "desc": "Select only placements that are associated with these sizes.",
                            "type": "int64"
                        },
                        {
                            "name": "sortField",
                            "desc": "Field by which to sort the list.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "ID"
                                },
                                {
                                    "name": "NAME"
                                }
                            ]
                        },
                        {
                            "name": "archived",
                            "desc": "Select only archived placements. Don't set this field to select both archived and non-archived placements.",
                            "type": "bool"
                        },
                        {
                            "name": "minEndDate",
                            "desc": "Select only placements or placement groups whose end date is on or after the specified minEndDate. The date should be formatted as \"yyyy-MM-dd\".",
                            "type": "string"
                        },
                        {
                            "name": "pageToken",
                            "desc": "Value of the nextPageToken from the previous result page.",
                            "type": "string"
                        },
                        {
                            "name": "pricingTypes",
                            "desc": "Select only placements with these pricing types.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "PRICING_TYPE_CPA"
                                },
                                {
                                    "name": "PRICING_TYPE_CPC"
                                },
                                {
                                    "name": "PRICING_TYPE_CPM"
                                },
                                {
                                    "name": "PRICING_TYPE_CPM_ACTIVEVIEW"
                                },
                                {
                                    "name": "PRICING_TYPE_FLAT_RATE_CLICKS"
                                },
                                {
                                    "name": "PRICING_TYPE_FLAT_RATE_IMPRESSIONS"
                                }
                            ]
                        },
                        {
                            "name": "searchString",
                            "desc": "Allows searching for placements by name or ID. Wildcards (*) are allowed. For example, \"placement*2015\" will return placements with names like \"placement June 2015\", \"placement May 2015\", or simply \"placements 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"placement\" will match placements with name \"my placement\", \"placement 2015\", or simply \"placement\".",
                            "type": "string"
                        },
                        {
                            "name": "advertiserIds",
                            "desc": "Select only placements that belong to these advertisers.",
                            "type": "int64"
                        }
                    ],
                    "response": "PlacementsListResponse"
                },
                {
                    "path": "userprofiles/{profileId}/placements",
                    "httpMethod": "PATCH",
                    "name": "patch",
                    "desc": "Updates an existing placement. This method supports patch semantics.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "requiredQueryParams": [
                        {
                            "name": "id",
                            "desc": "Placement ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "Placement",
                    "response": "Placement"
                },
                {
                    "path": "userprofiles/{profileId}/placements",
                    "httpMethod": "PUT",
                    "name": "update",
                    "desc": "Updates an existing placement.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "Placement",
                    "response": "Placement"
                }
            ]
        },
        {
            "name": "remarketingLists",
            "methods": [
                {
                    "path": "userprofiles/{profileId}/remarketingLists/{id}",
                    "httpMethod": "GET",
                    "name": "get",
                    "desc": "Gets one remarketing list by ID.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "id",
                            "desc": "Remarketing list ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "response": "RemarketingList"
                },
                {
                    "path": "userprofiles/{profileId}/remarketingLists",
                    "httpMethod": "POST",
                    "name": "insert",
                    "desc": "Inserts a new remarketing list.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "RemarketingList",
                    "response": "RemarketingList"
                },
                {
                    "path": "userprofiles/{profileId}/remarketingLists",
                    "httpMethod": "GET",
                    "name": "list",
                    "desc": "Retrieves a list of remarketing lists, possibly filtered. This method supports paging.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "requiredQueryParams": [
                        {
                            "name": "advertiserId",
                            "desc": "Select only remarketing lists owned by this advertiser.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "optionalQueryParams": [
                        {
                            "name": "maxResults",
                            "desc": "Maximum number of results to return.",
                            "type": "int32"
                        },
                        {
                            "name": "sortField",
                            "desc": "Field by which to sort the list.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "ID"
                                },
                                {
                                    "name": "NAME"
                                }
                            ]
                        },
                        {
                            "name": "sortOrder",
                            "desc": "Order of sorted results, default is ASCENDING.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "ASCENDING"
                                },
                                {
                                    "name": "DESCENDING"
                                }
                            ]
                        },
                        {
                            "name": "active",
                            "desc": "Select only active or only inactive remarketing lists.",
                            "type": "bool"
                        },
                        {
                            "name": "floodlightActivityId",
                            "desc": "Select only remarketing lists that have this floodlight activity ID.",
                            "type": "int64"
                        },
                        {
                            "name": "name",
                            "desc": "Allows searching for objects by name or ID. Wildcards (*) are allowed. For example, \"remarketing list*2015\" will return objects with names like \"remarketing list June 2015\", \"remarketing list April 2015\", or simply \"remarketing list 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"remarketing list\" will match objects with name \"my remarketing list\", \"remarketing list 2015\", or simply \"remarketing list\".",
                            "type": "string"
                        },
                        {
                            "name": "pageToken",
                            "desc": "Value of the nextPageToken from the previous result page.",
                            "type": "string"
                        }
                    ],
                    "response": "RemarketingListsListResponse"
                },
                {
                    "path": "userprofiles/{profileId}/remarketingLists",
                    "httpMethod": "PATCH",
                    "name": "patch",
                    "desc": "Updates an existing remarketing list. This method supports patch semantics.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "requiredQueryParams": [
                        {
                            "name": "id",
                            "desc": "Remarketing list ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "RemarketingList",
                    "response": "RemarketingList"
                },
                {
                    "path": "userprofiles/{profileId}/remarketingLists",
                    "httpMethod": "PUT",
                    "name": "update",
                    "desc": "Updates an existing remarketing list.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "RemarketingList",
                    "response": "RemarketingList"
                }
            ]
        },
        {
            "name": "reports",
            "methods": [
                {
                    "path": "userprofiles/{profileId}/reports",
                    "httpMethod": "POST",
                    "name": "insert",
                    "desc": "Creates a report.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfareporting"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "The DFA user profile ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "Report",
                    "response": "Report"
                },
                {
                    "path": "userprofiles/{profileId}/reports",
                    "httpMethod": "GET",
                    "name": "list",
                    "desc": "Retrieves list of reports.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfareporting"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "The DFA user profile ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "optionalQueryParams": [
                        {
                            "name": "pageToken",
                            "desc": "The value of the nextToken from the previous result page.",
                            "type": "string"
                        },
                        {
                            "name": "scope",
                            "desc": "The scope that defines which results are returned, default is 'MINE'.",
                            "type": "string",
                            "default": "MINE",
                            "enum": [
                                {
                                    "name": "ALL",
                                    "desc": "All reports in account."
                                },
                                {
                                    "name": "MINE",
                                    "desc": "My reports."
                                }
                            ]
                        },
                        {
                            "name": "sortField",
                            "desc": "The field by which to sort the list.",
                            "type": "string",
                            "default": "LAST_MODIFIED_TIME",
                            "enum": [
                                {
                                    "name": "ID",
                                    "desc": "Sort by report ID."
                                },
                                {
                                    "name": "LAST_MODIFIED_TIME",
                                    "desc": "Sort by 'lastModifiedTime' field."
                                },
                                {
                                    "name": "NAME",
                                    "desc": "Sort by name of reports."
                                }
                            ]
                        },
                        {
                            "name": "sortOrder",
                            "desc": "Order of sorted results, default is 'DESCENDING'.",
                            "type": "string",
                            "default": "DESCENDING",
                            "enum": [
                                {
                                    "name": "ASCENDING",
                                    "desc": "Ascending order."
                                },
                                {
                                    "name": "DESCENDING",
                                    "desc": "Descending order."
                                }
                            ]
                        },
                        {
                            "name": "maxResults",
                            "desc": "Maximum number of results to return.",
                            "type": "int32",
                            "min": "0",
                            "max": "10"
                        }
                    ],
                    "response": "ReportList"
                },
                {
                    "path": "userprofiles/{profileId}/reports/{reportId}",
                    "httpMethod": "PATCH",
                    "name": "patch",
                    "desc": "Updates a report. This method supports patch semantics.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfareporting"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "The DFA user profile ID.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "reportId",
                            "desc": "The ID of the report.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "Report",
                    "response": "Report"
                },
                {
                    "path": "userprofiles/{profileId}/reports/{reportId}/run",
                    "httpMethod": "POST",
                    "name": "run",
                    "desc": "Runs a report.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfareporting"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "The DFA profile ID.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "reportId",
                            "desc": "The ID of the report.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "optionalQueryParams": [
                        {
                            "name": "synchronous",
                            "desc": "If set and true, tries to run the report synchronously.",
                            "type": "bool"
                        }
                    ],
                    "response": "File"
                },
                {
                    "path": "userprofiles/{profileId}/reports/{reportId}",
                    "httpMethod": "PUT",
                    "name": "update",
                    "desc": "Updates a report.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfareporting"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "The DFA user profile ID.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "reportId",
                            "desc": "The ID of the report.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "Report",
                    "response": "Report"
                },
                {
                    "path": "userprofiles/{profileId}/reports/{reportId}",
                    "httpMethod": "DELETE",
                    "name": "delete",
                    "desc": "Deletes a report by its ID.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfareporting"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "The DFA user profile ID.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "reportId",
                            "desc": "The ID of the report.",
                            "required": true,
                            "type": "int64"
                        }
                    ]
                },
                {
                    "path": "userprofiles/{profileId}/reports/{reportId}",
                    "httpMethod": "GET",
                    "name": "get",
                    "desc": "Retrieves a report by its ID.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfareporting"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "The DFA user profile ID.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "reportId",
                            "desc": "The ID of the report.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "response": "Report"
                }
            ],
            "resources": [
                {
                    "name": "compatibleFields",
                    "methods": [
                        {
                            "path": "userprofiles/{profileId}/reports/compatiblefields/query",
                            "httpMethod": "POST",
                            "name": "query",
                            "desc": "Returns the fields that are compatible to be selected in the respective sections of a report criteria, given the fields already selected in the input report and user permissions.",
                            "scopes": [
                                "https://www.googleapis.com/auth/dfareporting"
                            ],
                            "pathParams": [
                                {
                                    "name": "profileId",
                                    "desc": "The DFA user profile ID.",
                                    "required": true,
                                    "type": "int64"
                                }
                            ],
                            "request": "Report",
                            "response": "CompatibleFields"
                        }
                    ]
                },
                {
                    "name": "files",
                    "methods": [
                        {
                            "path": "userprofiles/{profileId}/reports/{reportId}/files/{fileId}",
                            "httpMethod": "GET",
                            "name": "get",
                            "desc": "Retrieves a report file.",
                            "scopes": [
                                "https://www.googleapis.com/auth/dfareporting"
                            ],
                            "pathParams": [
                                {
                                    "name": "profileId",
                                    "desc": "The DFA profile ID.",
                                    "required": true,
                                    "type": "int64"
                                },
                                {
                                    "name": "reportId",
                                    "desc": "The ID of the report.",
                                    "required": true,
                                    "type": "int64"
                                },
                                {
                                    "name": "fileId",
                                    "desc": "The ID of the report file.",
                                    "required": true,
                                    "type": "int64"
                                }
                            ],
                            "response": "File"
                        },
                        {
                            "path": "userprofiles/{profileId}/reports/{reportId}/files",
                            "httpMethod": "GET",
                            "name": "list",
                            "desc": "Lists files for a report.",
                            "scopes": [
                                "https://www.googleapis.com/auth/dfareporting"
                            ],
                            "pathParams": [
                                {
                                    "name": "profileId",
                                    "desc": "The DFA profile ID.",
                                    "required": true,
                                    "type": "int64"
                                },
                                {
                                    "name": "reportId",
                                    "desc": "The ID of the parent report.",
                                    "required": true,
                                    "type": "int64"
                                }
                            ],
                            "optionalQueryParams": [
                                {
                                    "name": "maxResults",
                                    "desc": "Maximum number of results to return.",
                                    "type": "int32",
                                    "min": "0",
                                    "max": "10"
                                },
                                {
                                    "name": "pageToken",
                                    "desc": "The value of the nextToken from the previous result page.",
                                    "type": "string"
                                },
                                {
                                    "name": "sortField",
                                    "desc": "The field by which to sort the list.",
                                    "type": "string",
                                    "default": "LAST_MODIFIED_TIME",
                                    "enum": [
                                        {
                                            "name": "ID",
                                            "desc": "Sort by file ID."
                                        },
                                        {
                                            "name": "LAST_MODIFIED_TIME",
                                            "desc": "Sort by 'lastmodifiedAt' field."
                                        }
                                    ]
                                },
                                {
                                    "name": "sortOrder",
                                    "desc": "Order of sorted results, default is 'DESCENDING'.",
                                    "type": "string",
                                    "default": "DESCENDING",
                                    "enum": [
                                        {
                                            "name": "ASCENDING",
                                            "desc": "Ascending order."
                                        },
                                        {
                                            "name": "DESCENDING",
                                            "desc": "Descending order."
                                        }
                                    ]
                                }
                            ],
                            "response": "FileList"
                        }
                    ]
                }
            ]
        },
        {
            "name": "targetingTemplates",
            "methods": [
                {
                    "path": "userprofiles/{profileId}/targetingTemplates/{id}",
                    "httpMethod": "GET",
                    "name": "get",
                    "desc": "Gets one targeting template by ID.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "id",
                            "desc": "Targeting template ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "response": "TargetingTemplate"
                },
                {
                    "path": "userprofiles/{profileId}/targetingTemplates",
                    "httpMethod": "POST",
                    "name": "insert",
                    "desc": "Inserts a new targeting template.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "TargetingTemplate",
                    "response": "TargetingTemplate"
                },
                {
                    "path": "userprofiles/{profileId}/targetingTemplates",
                    "httpMethod": "GET",
                    "name": "list",
                    "desc": "Retrieves a list of targeting templates, optionally filtered. This method supports paging.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "optionalQueryParams": [
                        {
                            "name": "maxResults",
                            "desc": "Maximum number of results to return.",
                            "type": "int32"
                        },
                        {
                            "name": "pageToken",
                            "desc": "Value of the nextPageToken from the previous result page.",
                            "type": "string"
                        },
                        {
                            "name": "searchString",
                            "desc": "Allows searching for objects by name or ID. Wildcards (*) are allowed. For example, \"template*2015\" will return objects with names like \"template June 2015\", \"template April 2015\", or simply \"template 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"template\" will match objects with name \"my template\", \"template 2015\", or simply \"template\".",
                            "type": "string"
                        },
                        {
                            "name": "sortField",
                            "desc": "Field by which to sort the list.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "ID"
                                },
                                {
                                    "name": "NAME"
                                }
                            ]
                        },
                        {
                            "name": "sortOrder",
                            "desc": "Order of sorted results, default is ASCENDING.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "ASCENDING"
                                },
                                {
                                    "name": "DESCENDING"
                                }
                            ]
                        },
                        {
                            "name": "advertiserId",
                            "desc": "Select only targeting templates with this advertiser ID.",
                            "type": "int64"
                        },
                        {
                            "name": "ids",
                            "desc": "Select only targeting templates with these IDs.",
                            "type": "int64"
                        }
                    ],
                    "response": "TargetingTemplatesListResponse"
                },
                {
                    "path": "userprofiles/{profileId}/targetingTemplates",
                    "httpMethod": "PATCH",
                    "name": "patch",
                    "desc": "Updates an existing targeting template. This method supports patch semantics.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "requiredQueryParams": [
                        {
                            "name": "id",
                            "desc": "Targeting template ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "TargetingTemplate",
                    "response": "TargetingTemplate"
                },
                {
                    "path": "userprofiles/{profileId}/targetingTemplates",
                    "httpMethod": "PUT",
                    "name": "update",
                    "desc": "Updates an existing targeting template.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "TargetingTemplate",
                    "response": "TargetingTemplate"
                }
            ]
        },
        {
            "name": "userRolePermissionGroups",
            "methods": [
                {
                    "path": "userprofiles/{profileId}/userRolePermissionGroups/{id}",
                    "httpMethod": "GET",
                    "name": "get",
                    "desc": "Gets one user role permission group by ID.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "id",
                            "desc": "User role permission group ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "response": "UserRolePermissionGroup"
                },
                {
                    "path": "userprofiles/{profileId}/userRolePermissionGroups",
                    "httpMethod": "GET",
                    "name": "list",
                    "desc": "Gets a list of all supported user role permission groups.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "response": "UserRolePermissionGroupsListResponse"
                }
            ]
        },
        {
            "name": "userRolePermissions",
            "methods": [
                {
                    "path": "userprofiles/{profileId}/userRolePermissions",
                    "httpMethod": "GET",
                    "name": "list",
                    "desc": "Gets a list of user role permissions, possibly filtered.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "optionalQueryParams": [
                        {
                            "name": "ids",
                            "desc": "Select only user role permissions with these IDs.",
                            "type": "int64"
                        }
                    ],
                    "response": "UserRolePermissionsListResponse"
                },
                {
                    "path": "userprofiles/{profileId}/userRolePermissions/{id}",
                    "httpMethod": "GET",
                    "name": "get",
                    "desc": "Gets one user role permission by ID.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "id",
                            "desc": "User role permission ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "response": "UserRolePermission"
                }
            ]
        },
        {
            "name": "creativeAssets",
            "methods": [
                {
                    "path": "userprofiles/{profileId}/creativeAssets/{advertiserId}/creativeAssets",
                    "httpMethod": "POST",
                    "name": "insert",
                    "desc": "Inserts a new creative asset.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "advertiserId",
                            "desc": "Advertiser ID of this creative. This is a required field.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "CreativeAssetMetadata",
                    "response": "CreativeAssetMetadata"
                }
            ]
        },
        {
            "name": "creativeFields",
            "methods": [
                {
                    "path": "userprofiles/{profileId}/creativeFields/{id}",
                    "httpMethod": "DELETE",
                    "name": "delete",
                    "desc": "Deletes an existing creative field.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "id",
                            "desc": "Creative Field ID",
                            "required": true,
                            "type": "int64"
                        }
                    ]
                },
                {
                    "path": "userprofiles/{profileId}/creativeFields/{id}",
                    "httpMethod": "GET",
                    "name": "get",
                    "desc": "Gets one creative field by ID.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "id",
                            "desc": "Creative Field ID",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "response": "CreativeField"
                },
                {
                    "path": "userprofiles/{profileId}/creativeFields",
                    "httpMethod": "POST",
                    "name": "insert",
                    "desc": "Inserts a new creative field.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "CreativeField",
                    "response": "CreativeField"
                },
                {
                    "path": "userprofiles/{profileId}/creativeFields",
                    "httpMethod": "GET",
                    "name": "list",
                    "desc": "Retrieves a list of creative fields, possibly filtered. This method supports paging.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "optionalQueryParams": [
                        {
                            "name": "ids",
                            "desc": "Select only creative fields with these IDs.",
                            "type": "int64"
                        },
                        {
                            "name": "maxResults",
                            "desc": "Maximum number of results to return.",
                            "type": "int32"
                        },
                        {
                            "name": "pageToken",
                            "desc": "Value of the nextPageToken from the previous result page.",
                            "type": "string"
                        },
                        {
                            "name": "searchString",
                            "desc": "Allows searching for creative fields by name or ID. Wildcards (*) are allowed. For example, \"creativefield*2015\" will return creative fields with names like \"creativefield June 2015\", \"creativefield April 2015\", or simply \"creativefield 2015\". Most of the searches also add wild-cards implicitly at the start and the end of the search string. For example, a search string of \"creativefield\" will match creative fields with the name \"my creativefield\", \"creativefield 2015\", or simply \"creativefield\".",
                            "type": "string"
                        },
                        {
                            "name": "sortField",
                            "desc": "Field by which to sort the list.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "ID"
                                },
                                {
                                    "name": "NAME"
                                }
                            ]
                        },
                        {
                            "name": "sortOrder",
                            "desc": "Order of sorted results, default is ASCENDING.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "ASCENDING"
                                },
                                {
                                    "name": "DESCENDING"
                                }
                            ]
                        },
                        {
                            "name": "advertiserIds",
                            "desc": "Select only creative fields that belong to these advertisers.",
                            "type": "int64"
                        }
                    ],
                    "response": "CreativeFieldsListResponse"
                },
                {
                    "path": "userprofiles/{profileId}/creativeFields",
                    "httpMethod": "PATCH",
                    "name": "patch",
                    "desc": "Updates an existing creative field. This method supports patch semantics.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "requiredQueryParams": [
                        {
                            "name": "id",
                            "desc": "Creative Field ID",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "CreativeField",
                    "response": "CreativeField"
                },
                {
                    "path": "userprofiles/{profileId}/creativeFields",
                    "httpMethod": "PUT",
                    "name": "update",
                    "desc": "Updates an existing creative field.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "CreativeField",
                    "response": "CreativeField"
                }
            ]
        },
        {
            "name": "creativeGroups",
            "methods": [
                {
                    "path": "userprofiles/{profileId}/creativeGroups/{id}",
                    "httpMethod": "GET",
                    "name": "get",
                    "desc": "Gets one creative group by ID.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "id",
                            "desc": "Creative group ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "response": "CreativeGroup"
                },
                {
                    "path": "userprofiles/{profileId}/creativeGroups",
                    "httpMethod": "POST",
                    "name": "insert",
                    "desc": "Inserts a new creative group.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "CreativeGroup",
                    "response": "CreativeGroup"
                },
                {
                    "path": "userprofiles/{profileId}/creativeGroups",
                    "httpMethod": "GET",
                    "name": "list",
                    "desc": "Retrieves a list of creative groups, possibly filtered. This method supports paging.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "optionalQueryParams": [
                        {
                            "name": "sortOrder",
                            "desc": "Order of sorted results, default is ASCENDING.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "ASCENDING"
                                },
                                {
                                    "name": "DESCENDING"
                                }
                            ]
                        },
                        {
                            "name": "advertiserIds",
                            "desc": "Select only creative groups that belong to these advertisers.",
                            "type": "int64"
                        },
                        {
                            "name": "groupNumber",
                            "desc": "Select only creative groups that belong to this subgroup.",
                            "type": "int32"
                        },
                        {
                            "name": "pageToken",
                            "desc": "Value of the nextPageToken from the previous result page.",
                            "type": "string"
                        },
                        {
                            "name": "searchString",
                            "desc": "Allows searching for creative groups by name or ID. Wildcards (*) are allowed. For example, \"creativegroup*2015\" will return creative groups with names like \"creativegroup June 2015\", \"creativegroup April 2015\", or simply \"creativegroup 2015\". Most of the searches also add wild-cards implicitly at the start and the end of the search string. For example, a search string of \"creativegroup\" will match creative groups with the name \"my creativegroup\", \"creativegroup 2015\", or simply \"creativegroup\".",
                            "type": "string"
                        },
                        {
                            "name": "ids",
                            "desc": "Select only creative groups with these IDs.",
                            "type": "int64"
                        },
                        {
                            "name": "maxResults",
                            "desc": "Maximum number of results to return.",
                            "type": "int32"
                        },
                        {
                            "name": "sortField",
                            "desc": "Field by which to sort the list.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "ID"
                                },
                                {
                                    "name": "NAME"
                                }
                            ]
                        }
                    ],
                    "response": "CreativeGroupsListResponse"
                },
                {
                    "path": "userprofiles/{profileId}/creativeGroups",
                    "httpMethod": "PATCH",
                    "name": "patch",
                    "desc": "Updates an existing creative group. This method supports patch semantics.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "requiredQueryParams": [
                        {
                            "name": "id",
                            "desc": "Creative group ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "CreativeGroup",
                    "response": "CreativeGroup"
                },
                {
                    "path": "userprofiles/{profileId}/creativeGroups",
                    "httpMethod": "PUT",
                    "name": "update",
                    "desc": "Updates an existing creative group.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "CreativeGroup",
                    "response": "CreativeGroup"
                }
            ]
        },
        {
            "name": "metros",
            "methods": [
                {
                    "path": "userprofiles/{profileId}/metros",
                    "httpMethod": "GET",
                    "name": "list",
                    "desc": "Retrieves a list of metros.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "response": "MetrosListResponse"
                }
            ]
        },
        {
            "name": "placementGroups",
            "methods": [
                {
                    "path": "userprofiles/{profileId}/placementGroups/{id}",
                    "httpMethod": "GET",
                    "name": "get",
                    "desc": "Gets one placement group by ID.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "id",
                            "desc": "Placement group ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "response": "PlacementGroup"
                },
                {
                    "path": "userprofiles/{profileId}/placementGroups",
                    "httpMethod": "POST",
                    "name": "insert",
                    "desc": "Inserts a new placement group.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "PlacementGroup",
                    "response": "PlacementGroup"
                },
                {
                    "path": "userprofiles/{profileId}/placementGroups",
                    "httpMethod": "GET",
                    "name": "list",
                    "desc": "Retrieves a list of placement groups, possibly filtered. This method supports paging.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "optionalQueryParams": [
                        {
                            "name": "campaignIds",
                            "desc": "Select only placement groups that belong to these campaigns.",
                            "type": "int64"
                        },
                        {
                            "name": "placementGroupType",
                            "desc": "Select only placement groups belonging with this group type. A package is a simple group of placements that acts as a single pricing point for a group of tags. A roadblock is a group of placements that not only acts as a single pricing point but also assumes that all the tags in it will be served at the same time. A roadblock requires one of its assigned placements to be marked as primary for reporting.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "PLACEMENT_PACKAGE"
                                },
                                {
                                    "name": "PLACEMENT_ROADBLOCK"
                                }
                            ]
                        },
                        {
                            "name": "pricingTypes",
                            "desc": "Select only placement groups with these pricing types.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "PRICING_TYPE_CPA"
                                },
                                {
                                    "name": "PRICING_TYPE_CPC"
                                },
                                {
                                    "name": "PRICING_TYPE_CPM"
                                },
                                {
                                    "name": "PRICING_TYPE_CPM_ACTIVEVIEW"
                                },
                                {
                                    "name": "PRICING_TYPE_FLAT_RATE_CLICKS"
                                },
                                {
                                    "name": "PRICING_TYPE_FLAT_RATE_IMPRESSIONS"
                                }
                            ]
                        },
                        {
                            "name": "minStartDate",
                            "desc": "Select only placements or placement groups whose start date is on or after the specified minStartDate. The date should be formatted as \"yyyy-MM-dd\".",
                            "type": "string"
                        },
                        {
                            "name": "sortField",
                            "desc": "Field by which to sort the list.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "ID"
                                },
                                {
                                    "name": "NAME"
                                }
                            ]
                        },
                        {
                            "name": "sortOrder",
                            "desc": "Order of sorted results, default is ASCENDING.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "ASCENDING"
                                },
                                {
                                    "name": "DESCENDING"
                                }
                            ]
                        },
                        {
                            "name": "advertiserIds",
                            "desc": "Select only placement groups that belong to these advertisers.",
                            "type": "int64"
                        },
                        {
                            "name": "archived",
                            "desc": "Select only archived placements. Don't set this field to select both archived and non-archived placements.",
                            "type": "bool"
                        },
                        {
                            "name": "contentCategoryIds",
                            "desc": "Select only placement groups that are associated with these content categories.",
                            "type": "int64"
                        },
                        {
                            "name": "ids",
                            "desc": "Select only placement groups with these IDs.",
                            "type": "int64"
                        },
                        {
                            "name": "placementStrategyIds",
                            "desc": "Select only placement groups that are associated with these placement strategies.",
                            "type": "int64"
                        },
                        {
                            "name": "siteIds",
                            "desc": "Select only placement groups that are associated with these sites.",
                            "type": "int64"
                        },
                        {
                            "name": "directorySiteIds",
                            "desc": "Select only placement groups that are associated with these directory sites.",
                            "type": "int64"
                        },
                        {
                            "name": "maxEndDate",
                            "desc": "Select only placements or placement groups whose end date is on or before the specified maxEndDate. The date should be formatted as \"yyyy-MM-dd\".",
                            "type": "string"
                        },
                        {
                            "name": "maxStartDate",
                            "desc": "Select only placements or placement groups whose start date is on or before the specified maxStartDate. The date should be formatted as \"yyyy-MM-dd\".",
                            "type": "string"
                        },
                        {
                            "name": "pageToken",
                            "desc": "Value of the nextPageToken from the previous result page.",
                            "type": "string"
                        },
                        {
                            "name": "maxResults",
                            "desc": "Maximum number of results to return.",
                            "type": "int32"
                        },
                        {
                            "name": "minEndDate",
                            "desc": "Select only placements or placement groups whose end date is on or after the specified minEndDate. The date should be formatted as \"yyyy-MM-dd\".",
                            "type": "string"
                        },
                        {
                            "name": "searchString",
                            "desc": "Allows searching for placement groups by name or ID. Wildcards (*) are allowed. For example, \"placement*2015\" will return placement groups with names like \"placement group June 2015\", \"placement group May 2015\", or simply \"placements 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"placementgroup\" will match placement groups with name \"my placementgroup\", \"placementgroup 2015\", or simply \"placementgroup\".",
                            "type": "string"
                        }
                    ],
                    "response": "PlacementGroupsListResponse"
                },
                {
                    "path": "userprofiles/{profileId}/placementGroups",
                    "httpMethod": "PATCH",
                    "name": "patch",
                    "desc": "Updates an existing placement group. This method supports patch semantics.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "requiredQueryParams": [
                        {
                            "name": "id",
                            "desc": "Placement group ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "PlacementGroup",
                    "response": "PlacementGroup"
                },
                {
                    "path": "userprofiles/{profileId}/placementGroups",
                    "httpMethod": "PUT",
                    "name": "update",
                    "desc": "Updates an existing placement group.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "PlacementGroup",
                    "response": "PlacementGroup"
                }
            ]
        },
        {
            "name": "targetableRemarketingLists",
            "methods": [
                {
                    "path": "userprofiles/{profileId}/targetableRemarketingLists/{id}",
                    "httpMethod": "GET",
                    "name": "get",
                    "desc": "Gets one remarketing list by ID.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "id",
                            "desc": "Remarketing list ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "response": "TargetableRemarketingList"
                },
                {
                    "path": "userprofiles/{profileId}/targetableRemarketingLists",
                    "httpMethod": "GET",
                    "name": "list",
                    "desc": "Retrieves a list of targetable remarketing lists, possibly filtered. This method supports paging.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "requiredQueryParams": [
                        {
                            "name": "advertiserId",
                            "desc": "Select only targetable remarketing lists targetable by these advertisers.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "optionalQueryParams": [
                        {
                            "name": "pageToken",
                            "desc": "Value of the nextPageToken from the previous result page.",
                            "type": "string"
                        },
                        {
                            "name": "sortField",
                            "desc": "Field by which to sort the list.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "ID"
                                },
                                {
                                    "name": "NAME"
                                }
                            ]
                        },
                        {
                            "name": "sortOrder",
                            "desc": "Order of sorted results, default is ASCENDING.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "ASCENDING"
                                },
                                {
                                    "name": "DESCENDING"
                                }
                            ]
                        },
                        {
                            "name": "active",
                            "desc": "Select only active or only inactive targetable remarketing lists.",
                            "type": "bool"
                        },
                        {
                            "name": "maxResults",
                            "desc": "Maximum number of results to return.",
                            "type": "int32"
                        },
                        {
                            "name": "name",
                            "desc": "Allows searching for objects by name or ID. Wildcards (*) are allowed. For example, \"remarketing list*2015\" will return objects with names like \"remarketing list June 2015\", \"remarketing list April 2015\", or simply \"remarketing list 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"remarketing list\" will match objects with name \"my remarketing list\", \"remarketing list 2015\", or simply \"remarketing list\".",
                            "type": "string"
                        }
                    ],
                    "response": "TargetableRemarketingListsListResponse"
                }
            ]
        },
        {
            "name": "ads",
            "methods": [
                {
                    "path": "userprofiles/{profileId}/ads/{id}",
                    "httpMethod": "GET",
                    "name": "get",
                    "desc": "Gets one ad by ID.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "id",
                            "desc": "Ad ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "response": "Ad"
                },
                {
                    "path": "userprofiles/{profileId}/ads",
                    "httpMethod": "POST",
                    "name": "insert",
                    "desc": "Inserts a new ad.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "Ad",
                    "response": "Ad"
                },
                {
                    "path": "userprofiles/{profileId}/ads",
                    "httpMethod": "GET",
                    "name": "list",
                    "desc": "Retrieves a list of ads, possibly filtered. This method supports paging.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "optionalQueryParams": [
                        {
                            "name": "advertiserId",
                            "desc": "Select only ads with this advertiser ID.",
                            "type": "int64"
                        },
                        {
                            "name": "pageToken",
                            "desc": "Value of the nextPageToken from the previous result page.",
                            "type": "string"
                        },
                        {
                            "name": "sortField",
                            "desc": "Field by which to sort the list.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "ID"
                                },
                                {
                                    "name": "NAME"
                                }
                            ]
                        },
                        {
                            "name": "landingPageIds",
                            "desc": "Select only ads with these landing page IDs.",
                            "type": "int64"
                        },
                        {
                            "name": "placementIds",
                            "desc": "Select only ads with these placement IDs assigned.",
                            "type": "int64"
                        },
                        {
                            "name": "searchString",
                            "desc": "Allows searching for objects by name or ID. Wildcards (*) are allowed. For example, \"ad*2015\" will return objects with names like \"ad June 2015\", \"ad April 2015\", or simply \"ad 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"ad\" will match objects with name \"my ad\", \"ad 2015\", or simply \"ad\".",
                            "type": "string"
                        },
                        {
                            "name": "sslCompliant",
                            "desc": "Select only ads that are SSL-compliant.",
                            "type": "bool"
                        },
                        {
                            "name": "type",
                            "desc": "Select only ads with these types.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "AD_SERVING_CLICK_TRACKER"
                                },
                                {
                                    "name": "AD_SERVING_DEFAULT_AD"
                                },
                                {
                                    "name": "AD_SERVING_STANDARD_AD"
                                },
                                {
                                    "name": "AD_SERVING_TRACKING"
                                }
                            ]
                        },
                        {
                            "name": "audienceSegmentIds",
                            "desc": "Select only ads with these audience segment IDs.",
                            "type": "int64"
                        },
                        {
                            "name": "campaignIds",
                            "desc": "Select only ads with these campaign IDs.",
                            "type": "int64"
                        },
                        {
                            "name": "creativeOptimizationConfigurationIds",
                            "desc": "Select only ads with these creative optimization configuration IDs.",
                            "type": "int64"
                        },
                        {
                            "name": "remarketingListIds",
                            "desc": "Select only ads whose list targeting expression use these remarketing list IDs.",
                            "type": "int64"
                        },
                        {
                            "name": "sizeIds",
                            "desc": "Select only ads with these size IDs.",
                            "type": "int64"
                        },
                        {
                            "name": "sortOrder",
                            "desc": "Order of sorted results, default is ASCENDING.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "ASCENDING"
                                },
                                {
                                    "name": "DESCENDING"
                                }
                            ]
                        },
                        {
                            "name": "archived",
                            "desc": "Select only archived ads.",
                            "type": "bool"
                        },
                        {
                            "name": "overriddenEventTagId",
                            "desc": "Select only ads with this event tag override ID.",
                            "type": "int64"
                        },
                        {
                            "name": "dynamicClickTracker",
                            "desc": "Select only dynamic click trackers. Applicable when type is AD_SERVING_CLICK_TRACKER. If true, select dynamic click trackers. If false, select static click trackers. Leave unset to select both.",
                            "type": "bool"
                        },
                        {
                            "name": "ids",
                            "desc": "Select only ads with these IDs.",
                            "type": "int64"
                        },
                        {
                            "name": "maxResults",
                            "desc": "Maximum number of results to return.",
                            "type": "int32"
                        },
                        {
                            "name": "sslRequired",
                            "desc": "Select only ads that require SSL.",
                            "type": "bool"
                        },
                        {
                            "name": "active",
                            "desc": "Select only active ads.",
                            "type": "bool"
                        },
                        {
                            "name": "compatibility",
                            "desc": "Select default ads with the specified compatibility. Applicable when type is AD_SERVING_DEFAULT_AD. DISPLAY and DISPLAY_INTERSTITIAL refer to rendering either on desktop or on mobile devices for regular or interstitial ads, respectively. APP and APP_INTERSTITIAL are for rendering in mobile apps. IN_STREAM_VIDEO refers to rendering an in-stream video ads developed with the VAST standard.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "APP"
                                },
                                {
                                    "name": "APP_INTERSTITIAL"
                                },
                                {
                                    "name": "DISPLAY"
                                },
                                {
                                    "name": "DISPLAY_INTERSTITIAL"
                                },
                                {
                                    "name": "IN_STREAM_VIDEO"
                                }
                            ]
                        },
                        {
                            "name": "creativeIds",
                            "desc": "Select only ads with these creative IDs assigned.",
                            "type": "int64"
                        }
                    ],
                    "response": "AdsListResponse"
                },
                {
                    "path": "userprofiles/{profileId}/ads",
                    "httpMethod": "PATCH",
                    "name": "patch",
                    "desc": "Updates an existing ad. This method supports patch semantics.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "requiredQueryParams": [
                        {
                            "name": "id",
                            "desc": "Ad ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "Ad",
                    "response": "Ad"
                },
                {
                    "path": "userprofiles/{profileId}/ads",
                    "httpMethod": "PUT",
                    "name": "update",
                    "desc": "Updates an existing ad.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "Ad",
                    "response": "Ad"
                }
            ]
        },
        {
            "name": "advertisers",
            "methods": [
                {
                    "path": "userprofiles/{profileId}/advertisers/{id}",
                    "httpMethod": "GET",
                    "name": "get",
                    "desc": "Gets one advertiser by ID.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "id",
                            "desc": "Advertiser ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "response": "Advertiser"
                },
                {
                    "path": "userprofiles/{profileId}/advertisers",
                    "httpMethod": "POST",
                    "name": "insert",
                    "desc": "Inserts a new advertiser.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "Advertiser",
                    "response": "Advertiser"
                },
                {
                    "path": "userprofiles/{profileId}/advertisers",
                    "httpMethod": "GET",
                    "name": "list",
                    "desc": "Retrieves a list of advertisers, possibly filtered. This method supports paging.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "optionalQueryParams": [
                        {
                            "name": "searchString",
                            "desc": "Allows searching for objects by name or ID. Wildcards (*) are allowed. For example, \"advertiser*2015\" will return objects with names like \"advertiser June 2015\", \"advertiser April 2015\", or simply \"advertiser 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"advertiser\" will match objects with name \"my advertiser\", \"advertiser 2015\", or simply \"advertiser\".",
                            "type": "string"
                        },
                        {
                            "name": "sortField",
                            "desc": "Field by which to sort the list.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "ID"
                                },
                                {
                                    "name": "NAME"
                                }
                            ]
                        },
                        {
                            "name": "sortOrder",
                            "desc": "Order of sorted results, default is ASCENDING.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "ASCENDING"
                                },
                                {
                                    "name": "DESCENDING"
                                }
                            ]
                        },
                        {
                            "name": "advertiserGroupIds",
                            "desc": "Select only advertisers with these advertiser group IDs.",
                            "type": "int64"
                        },
                        {
                            "name": "ids",
                            "desc": "Select only advertisers with these IDs.",
                            "type": "int64"
                        },
                        {
                            "name": "onlyParent",
                            "desc": "Select only advertisers which use another advertiser's floodlight configuration.",
                            "type": "bool"
                        },
                        {
                            "name": "pageToken",
                            "desc": "Value of the nextPageToken from the previous result page.",
                            "type": "string"
                        },
                        {
                            "name": "status",
                            "desc": "Select only advertisers with the specified status.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "APPROVED"
                                },
                                {
                                    "name": "ON_HOLD"
                                }
                            ]
                        },
                        {
                            "name": "subaccountId",
                            "desc": "Select only advertisers with these subaccount IDs.",
                            "type": "int64"
                        },
                        {
                            "name": "floodlightConfigurationIds",
                            "desc": "Select only advertisers with these floodlight configuration IDs.",
                            "type": "int64"
                        },
                        {
                            "name": "includeAdvertisersWithoutGroupsOnly",
                            "desc": "Select only advertisers which do not belong to any advertiser group.",
                            "type": "bool"
                        },
                        {
                            "name": "maxResults",
                            "desc": "Maximum number of results to return.",
                            "type": "int32"
                        }
                    ],
                    "response": "AdvertisersListResponse"
                },
                {
                    "path": "userprofiles/{profileId}/advertisers",
                    "httpMethod": "PATCH",
                    "name": "patch",
                    "desc": "Updates an existing advertiser. This method supports patch semantics.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "requiredQueryParams": [
                        {
                            "name": "id",
                            "desc": "Advertiser ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "Advertiser",
                    "response": "Advertiser"
                },
                {
                    "path": "userprofiles/{profileId}/advertisers",
                    "httpMethod": "PUT",
                    "name": "update",
                    "desc": "Updates an existing advertiser.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "Advertiser",
                    "response": "Advertiser"
                }
            ]
        },
        {
            "name": "conversions",
            "methods": [
                {
                    "path": "userprofiles/{profileId}/conversions/batchinsert",
                    "httpMethod": "POST",
                    "name": "batchinsert",
                    "desc": "Inserts conversions.",
                    "scopes": [
                        "https://www.googleapis.com/auth/ddmconversions"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "ConversionsBatchInsertRequest",
                    "response": "ConversionsBatchInsertResponse"
                }
            ]
        },
        {
            "name": "files",
            "methods": [
                {
                    "path": "reports/{reportId}/files/{fileId}",
                    "httpMethod": "GET",
                    "name": "get",
                    "desc": "Retrieves a report file by its report ID and file ID.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfareporting"
                    ],
                    "pathParams": [
                        {
                            "name": "reportId",
                            "desc": "The ID of the report.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "fileId",
                            "desc": "The ID of the report file.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "response": "File"
                },
                {
                    "path": "userprofiles/{profileId}/files",
                    "httpMethod": "GET",
                    "name": "list",
                    "desc": "Lists files for a user profile.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfareporting"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "The DFA profile ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "optionalQueryParams": [
                        {
                            "name": "maxResults",
                            "desc": "Maximum number of results to return.",
                            "type": "int32",
                            "min": "0",
                            "max": "10"
                        },
                        {
                            "name": "pageToken",
                            "desc": "The value of the nextToken from the previous result page.",
                            "type": "string"
                        },
                        {
                            "name": "scope",
                            "desc": "The scope that defines which results are returned, default is 'MINE'.",
                            "type": "string",
                            "default": "MINE",
                            "enum": [
                                {
                                    "name": "ALL",
                                    "desc": "All files in account."
                                },
                                {
                                    "name": "MINE",
                                    "desc": "My files."
                                },
                                {
                                    "name": "SHARED_WITH_ME",
                                    "desc": "Files shared with me."
                                }
                            ]
                        },
                        {
                            "name": "sortField",
                            "desc": "The field by which to sort the list.",
                            "type": "string",
                            "default": "LAST_MODIFIED_TIME",
                            "enum": [
                                {
                                    "name": "ID",
                                    "desc": "Sort by file ID."
                                },
                                {
                                    "name": "LAST_MODIFIED_TIME",
                                    "desc": "Sort by 'lastmodifiedAt' field."
                                }
                            ]
                        },
                        {
                            "name": "sortOrder",
                            "desc": "Order of sorted results, default is 'DESCENDING'.",
                            "type": "string",
                            "default": "DESCENDING",
                            "enum": [
                                {
                                    "name": "ASCENDING",
                                    "desc": "Ascending order."
                                },
                                {
                                    "name": "DESCENDING",
                                    "desc": "Descending order."
                                }
                            ]
                        }
                    ],
                    "response": "FileList"
                }
            ]
        },
        {
            "name": "placementStrategies",
            "methods": [
                {
                    "path": "userprofiles/{profileId}/placementStrategies/{id}",
                    "httpMethod": "DELETE",
                    "name": "delete",
                    "desc": "Deletes an existing placement strategy.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "id",
                            "desc": "Placement strategy ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ]
                },
                {
                    "path": "userprofiles/{profileId}/placementStrategies/{id}",
                    "httpMethod": "GET",
                    "name": "get",
                    "desc": "Gets one placement strategy by ID.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "id",
                            "desc": "Placement strategy ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "response": "PlacementStrategy"
                },
                {
                    "path": "userprofiles/{profileId}/placementStrategies",
                    "httpMethod": "POST",
                    "name": "insert",
                    "desc": "Inserts a new placement strategy.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "PlacementStrategy",
                    "response": "PlacementStrategy"
                },
                {
                    "path": "userprofiles/{profileId}/placementStrategies",
                    "httpMethod": "GET",
                    "name": "list",
                    "desc": "Retrieves a list of placement strategies, possibly filtered. This method supports paging.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "optionalQueryParams": [
                        {
                            "name": "searchString",
                            "desc": "Allows searching for objects by name or ID. Wildcards (*) are allowed. For example, \"placementstrategy*2015\" will return objects with names like \"placementstrategy June 2015\", \"placementstrategy April 2015\", or simply \"placementstrategy 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"placementstrategy\" will match objects with name \"my placementstrategy\", \"placementstrategy 2015\", or simply \"placementstrategy\".",
                            "type": "string"
                        },
                        {
                            "name": "sortField",
                            "desc": "Field by which to sort the list.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "ID"
                                },
                                {
                                    "name": "NAME"
                                }
                            ]
                        },
                        {
                            "name": "sortOrder",
                            "desc": "Order of sorted results, default is ASCENDING.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "ASCENDING"
                                },
                                {
                                    "name": "DESCENDING"
                                }
                            ]
                        },
                        {
                            "name": "ids",
                            "desc": "Select only placement strategies with these IDs.",
                            "type": "int64"
                        },
                        {
                            "name": "maxResults",
                            "desc": "Maximum number of results to return.",
                            "type": "int32"
                        },
                        {
                            "name": "pageToken",
                            "desc": "Value of the nextPageToken from the previous result page.",
                            "type": "string"
                        }
                    ],
                    "response": "PlacementStrategiesListResponse"
                },
                {
                    "path": "userprofiles/{profileId}/placementStrategies",
                    "httpMethod": "PATCH",
                    "name": "patch",
                    "desc": "Updates an existing placement strategy. This method supports patch semantics.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "requiredQueryParams": [
                        {
                            "name": "id",
                            "desc": "Placement strategy ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "PlacementStrategy",
                    "response": "PlacementStrategy"
                },
                {
                    "path": "userprofiles/{profileId}/placementStrategies",
                    "httpMethod": "PUT",
                    "name": "update",
                    "desc": "Updates an existing placement strategy.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "PlacementStrategy",
                    "response": "PlacementStrategy"
                }
            ]
        },
        {
            "name": "postalCodes",
            "methods": [
                {
                    "path": "userprofiles/{profileId}/postalCodes/{code}",
                    "httpMethod": "GET",
                    "name": "get",
                    "desc": "Gets one postal code by ID.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "code",
                            "desc": "Postal code ID.",
                            "required": true,
                            "type": "string"
                        }
                    ],
                    "response": "PostalCode"
                },
                {
                    "path": "userprofiles/{profileId}/postalCodes",
                    "httpMethod": "GET",
                    "name": "list",
                    "desc": "Retrieves a list of postal codes.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "response": "PostalCodesListResponse"
                }
            ]
        },
        {
            "name": "userProfiles",
            "methods": [
                {
                    "path": "userprofiles/{profileId}",
                    "httpMethod": "GET",
                    "name": "get",
                    "desc": "Gets one user profile by ID.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfareporting",
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "The user profile ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "response": "UserProfile"
                },
                {
                    "path": "userprofiles",
                    "httpMethod": "GET",
                    "name": "list",
                    "desc": "Retrieves list of user profiles for a user.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfareporting",
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "response": "UserProfileList"
                }
            ]
        },
        {
            "name": "changeLogs",
            "methods": [
                {
                    "path": "userprofiles/{profileId}/changeLogs/{id}",
                    "httpMethod": "GET",
                    "name": "get",
                    "desc": "Gets one change log by ID.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "id",
                            "desc": "Change log ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "response": "ChangeLog"
                },
                {
                    "path": "userprofiles/{profileId}/changeLogs",
                    "httpMethod": "GET",
                    "name": "list",
                    "desc": "Retrieves a list of change logs. This method supports paging.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "optionalQueryParams": [
                        {
                            "name": "action",
                            "desc": "Select only change logs with the specified action.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "ACTION_ADD"
                                },
                                {
                                    "name": "ACTION_ASSIGN"
                                },
                                {
                                    "name": "ACTION_ASSOCIATE"
                                },
                                {
                                    "name": "ACTION_CREATE"
                                },
                                {
                                    "name": "ACTION_DELETE"
                                },
                                {
                                    "name": "ACTION_DISABLE"
                                },
                                {
                                    "name": "ACTION_EMAIL_TAGS"
                                },
                                {
                                    "name": "ACTION_ENABLE"
                                },
                                {
                                    "name": "ACTION_LINK"
                                },
                                {
                                    "name": "ACTION_MARK_AS_DEFAULT"
                                },
                                {
                                    "name": "ACTION_PUSH"
                                },
                                {
                                    "name": "ACTION_REMOVE"
                                },
                                {
                                    "name": "ACTION_SEND"
                                },
                                {
                                    "name": "ACTION_SHARE"
                                },
                                {
                                    "name": "ACTION_UNASSIGN"
                                },
                                {
                                    "name": "ACTION_UNLINK"
                                },
                                {
                                    "name": "ACTION_UPDATE"
                                }
                            ]
                        },
                        {
                            "name": "ids",
                            "desc": "Select only change logs with these IDs.",
                            "type": "int64"
                        },
                        {
                            "name": "minChangeTime",
                            "desc": "Select only change logs whose change time is before the specified minChangeTime.The time should be formatted as an RFC3339 date/time string. For example, for 10:54 PM on July 18th, 2015, in the America/New York time zone, the format is \"2015-07-18T22:54:00-04:00\". In other words, the year, month, day, the letter T, the hour (24-hour clock system), minute, second, and then the time zone offset.",
                            "type": "string"
                        },
                        {
                            "name": "objectIds",
                            "desc": "Select only change logs with these object IDs.",
                            "type": "int64"
                        },
                        {
                            "name": "searchString",
                            "desc": "Select only change logs whose object ID, user name, old or new values match the search string.",
                            "type": "string"
                        },
                        {
                            "name": "maxChangeTime",
                            "desc": "Select only change logs whose change time is before the specified maxChangeTime.The time should be formatted as an RFC3339 date/time string. For example, for 10:54 PM on July 18th, 2015, in the America/New York time zone, the format is \"2015-07-18T22:54:00-04:00\". In other words, the year, month, day, the letter T, the hour (24-hour clock system), minute, second, and then the time zone offset.",
                            "type": "string"
                        },
                        {
                            "name": "maxResults",
                            "desc": "Maximum number of results to return.",
                            "type": "int32"
                        },
                        {
                            "name": "objectType",
                            "desc": "Select only change logs with the specified object type.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "OBJECT_ACCOUNT"
                                },
                                {
                                    "name": "OBJECT_ACCOUNT_BILLING_FEATURE"
                                },
                                {
                                    "name": "OBJECT_AD"
                                },
                                {
                                    "name": "OBJECT_ADVERTISER"
                                },
                                {
                                    "name": "OBJECT_ADVERTISER_GROUP"
                                },
                                {
                                    "name": "OBJECT_BILLING_ACCOUNT_GROUP"
                                },
                                {
                                    "name": "OBJECT_BILLING_FEATURE"
                                },
                                {
                                    "name": "OBJECT_BILLING_MINIMUM_FEE"
                                },
                                {
                                    "name": "OBJECT_BILLING_PROFILE"
                                },
                                {
                                    "name": "OBJECT_CAMPAIGN"
                                },
                                {
                                    "name": "OBJECT_CONTENT_CATEGORY"
                                },
                                {
                                    "name": "OBJECT_CREATIVE"
                                },
                                {
                                    "name": "OBJECT_CREATIVE_ASSET"
                                },
                                {
                                    "name": "OBJECT_CREATIVE_BUNDLE"
                                },
                                {
                                    "name": "OBJECT_CREATIVE_FIELD"
                                },
                                {
                                    "name": "OBJECT_CREATIVE_GROUP"
                                },
                                {
                                    "name": "OBJECT_DFA_SITE"
                                },
                                {
                                    "name": "OBJECT_EVENT_TAG"
                                },
                                {
                                    "name": "OBJECT_FLOODLIGHT_ACTIVITY_GROUP"
                                },
                                {
                                    "name": "OBJECT_FLOODLIGHT_ACTVITY"
                                },
                                {
                                    "name": "OBJECT_FLOODLIGHT_CONFIGURATION"
                                },
                                {
                                    "name": "OBJECT_INSTREAM_CREATIVE"
                                },
                                {
                                    "name": "OBJECT_LANDING_PAGE"
                                },
                                {
                                    "name": "OBJECT_MEDIA_ORDER"
                                },
                                {
                                    "name": "OBJECT_PLACEMENT"
                                },
                                {
                                    "name": "OBJECT_PLACEMENT_STRATEGY"
                                },
                                {
                                    "name": "OBJECT_PLAYSTORE_LINK"
                                },
                                {
                                    "name": "OBJECT_PROVIDED_LIST_CLIENT"
                                },
                                {
                                    "name": "OBJECT_RATE_CARD"
                                },
                                {
                                    "name": "OBJECT_REMARKETING_LIST"
                                },
                                {
                                    "name": "OBJECT_RICHMEDIA_CREATIVE"
                                },
                                {
                                    "name": "OBJECT_SD_SITE"
                                },
                                {
                                    "name": "OBJECT_SEARCH_LIFT_STUDY"
                                },
                                {
                                    "name": "OBJECT_SIZE"
                                },
                                {
                                    "name": "OBJECT_SUBACCOUNT"
                                },
                                {
                                    "name": "OBJECT_TARGETING_TEMPLATE"
                                },
                                {
                                    "name": "OBJECT_USER_PROFILE"
                                },
                                {
                                    "name": "OBJECT_USER_PROFILE_FILTER"
                                },
                                {
                                    "name": "OBJECT_USER_ROLE"
                                }
                            ]
                        },
                        {
                            "name": "pageToken",
                            "desc": "Value of the nextPageToken from the previous result page.",
                            "type": "string"
                        },
                        {
                            "name": "userProfileIds",
                            "desc": "Select only change logs with these user profile IDs.",
                            "type": "int64"
                        }
                    ],
                    "response": "ChangeLogsListResponse"
                }
            ]
        },
        {
            "name": "directorySiteContacts",
            "methods": [
                {
                    "path": "userprofiles/{profileId}/directorySiteContacts/{id}",
                    "httpMethod": "GET",
                    "name": "get",
                    "desc": "Gets one directory site contact by ID.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "id",
                            "desc": "Directory site contact ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "response": "DirectorySiteContact"
                },
                {
                    "path": "userprofiles/{profileId}/directorySiteContacts",
                    "httpMethod": "GET",
                    "name": "list",
                    "desc": "Retrieves a list of directory site contacts, possibly filtered. This method supports paging.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "optionalQueryParams": [
                        {
                            "name": "sortOrder",
                            "desc": "Order of sorted results, default is ASCENDING.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "ASCENDING"
                                },
                                {
                                    "name": "DESCENDING"
                                }
                            ]
                        },
                        {
                            "name": "directorySiteIds",
                            "desc": "Select only directory site contacts with these directory site IDs. This is a required field.",
                            "type": "int64"
                        },
                        {
                            "name": "ids",
                            "desc": "Select only directory site contacts with these IDs.",
                            "type": "int64"
                        },
                        {
                            "name": "maxResults",
                            "desc": "Maximum number of results to return.",
                            "type": "int32"
                        },
                        {
                            "name": "pageToken",
                            "desc": "Value of the nextPageToken from the previous result page.",
                            "type": "string"
                        },
                        {
                            "name": "searchString",
                            "desc": "Allows searching for objects by name, ID or email. Wildcards (*) are allowed. For example, \"directory site contact*2015\" will return objects with names like \"directory site contact June 2015\", \"directory site contact April 2015\", or simply \"directory site contact 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"directory site contact\" will match objects with name \"my directory site contact\", \"directory site contact 2015\", or simply \"directory site contact\".",
                            "type": "string"
                        },
                        {
                            "name": "sortField",
                            "desc": "Field by which to sort the list.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "ID"
                                },
                                {
                                    "name": "NAME"
                                }
                            ]
                        }
                    ],
                    "response": "DirectorySiteContactsListResponse"
                }
            ]
        },
        {
            "name": "directorySites",
            "methods": [
                {
                    "path": "userprofiles/{profileId}/directorySites",
                    "httpMethod": "POST",
                    "name": "insert",
                    "desc": "Inserts a new directory site.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "DirectorySite",
                    "response": "DirectorySite"
                },
                {
                    "path": "userprofiles/{profileId}/directorySites",
                    "httpMethod": "GET",
                    "name": "list",
                    "desc": "Retrieves a list of directory sites, possibly filtered. This method supports paging.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "optionalQueryParams": [
                        {
                            "name": "countryId",
                            "desc": "Select only directory sites with this country ID.",
                            "type": "int64"
                        },
                        {
                            "name": "sortOrder",
                            "desc": "Order of sorted results, default is ASCENDING.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "ASCENDING"
                                },
                                {
                                    "name": "DESCENDING"
                                }
                            ]
                        },
                        {
                            "name": "ids",
                            "desc": "Select only directory sites with these IDs.",
                            "type": "int64"
                        },
                        {
                            "name": "acceptsInStreamVideoPlacements",
                            "desc": "This search filter is no longer supported and will have no effect on the results returned.",
                            "type": "bool"
                        },
                        {
                            "name": "acceptsInterstitialPlacements",
                            "desc": "This search filter is no longer supported and will have no effect on the results returned.",
                            "type": "bool"
                        },
                        {
                            "name": "active",
                            "desc": "Select only active directory sites. Leave blank to retrieve both active and inactive directory sites.",
                            "type": "bool"
                        },
                        {
                            "name": "dfp_network_code",
                            "desc": "Select only directory sites with this DFP network code.",
                            "type": "string"
                        },
                        {
                            "name": "parentId",
                            "desc": "Select only directory sites with this parent ID.",
                            "type": "int64"
                        },
                        {
                            "name": "sortField",
                            "desc": "Field by which to sort the list.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "ID"
                                },
                                {
                                    "name": "NAME"
                                }
                            ]
                        },
                        {
                            "name": "acceptsPublisherPaidPlacements",
                            "desc": "Select only directory sites that accept publisher paid placements. This field can be left blank.",
                            "type": "bool"
                        },
                        {
                            "name": "maxResults",
                            "desc": "Maximum number of results to return.",
                            "type": "int32"
                        },
                        {
                            "name": "pageToken",
                            "desc": "Value of the nextPageToken from the previous result page.",
                            "type": "string"
                        },
                        {
                            "name": "searchString",
                            "desc": "Allows searching for objects by name, ID or URL. Wildcards (*) are allowed. For example, \"directory site*2015\" will return objects with names like \"directory site June 2015\", \"directory site April 2015\", or simply \"directory site 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"directory site\" will match objects with name \"my directory site\", \"directory site 2015\" or simply, \"directory site\".",
                            "type": "string"
                        }
                    ],
                    "response": "DirectorySitesListResponse"
                },
                {
                    "path": "userprofiles/{profileId}/directorySites/{id}",
                    "httpMethod": "GET",
                    "name": "get",
                    "desc": "Gets one directory site by ID.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "id",
                            "desc": "Directory site ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "response": "DirectorySite"
                }
            ]
        },
        {
            "name": "landingPages",
            "methods": [
                {
                    "path": "userprofiles/{profileId}/campaigns/{campaignId}/landingPages/{id}",
                    "httpMethod": "DELETE",
                    "name": "delete",
                    "desc": "Deletes an existing campaign landing page.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "campaignId",
                            "desc": "Landing page campaign ID.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "id",
                            "desc": "Landing page ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ]
                },
                {
                    "path": "userprofiles/{profileId}/campaigns/{campaignId}/landingPages/{id}",
                    "httpMethod": "GET",
                    "name": "get",
                    "desc": "Gets one campaign landing page by ID.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "campaignId",
                            "desc": "Landing page campaign ID.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "id",
                            "desc": "Landing page ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "response": "LandingPage"
                },
                {
                    "path": "userprofiles/{profileId}/campaigns/{campaignId}/landingPages",
                    "httpMethod": "POST",
                    "name": "insert",
                    "desc": "Inserts a new landing page for the specified campaign.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "campaignId",
                            "desc": "Landing page campaign ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "LandingPage",
                    "response": "LandingPage"
                },
                {
                    "path": "userprofiles/{profileId}/campaigns/{campaignId}/landingPages",
                    "httpMethod": "GET",
                    "name": "list",
                    "desc": "Retrieves the list of landing pages for the specified campaign.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "campaignId",
                            "desc": "Landing page campaign ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "response": "LandingPagesListResponse"
                },
                {
                    "path": "userprofiles/{profileId}/campaigns/{campaignId}/landingPages",
                    "httpMethod": "PATCH",
                    "name": "patch",
                    "desc": "Updates an existing campaign landing page. This method supports patch semantics.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "campaignId",
                            "desc": "Landing page campaign ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "requiredQueryParams": [
                        {
                            "name": "id",
                            "desc": "Landing page ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "LandingPage",
                    "response": "LandingPage"
                },
                {
                    "path": "userprofiles/{profileId}/campaigns/{campaignId}/landingPages",
                    "httpMethod": "PUT",
                    "name": "update",
                    "desc": "Updates an existing campaign landing page.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "campaignId",
                            "desc": "Landing page campaign ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "LandingPage",
                    "response": "LandingPage"
                }
            ]
        },
        {
            "name": "platformTypes",
            "methods": [
                {
                    "path": "userprofiles/{profileId}/platformTypes/{id}",
                    "httpMethod": "GET",
                    "name": "get",
                    "desc": "Gets one platform type by ID.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "id",
                            "desc": "Platform type ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "response": "PlatformType"
                },
                {
                    "path": "userprofiles/{profileId}/platformTypes",
                    "httpMethod": "GET",
                    "name": "list",
                    "desc": "Retrieves a list of platform types.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "response": "PlatformTypesListResponse"
                }
            ]
        },
        {
            "name": "accountActiveAdSummaries",
            "methods": [
                {
                    "path": "userprofiles/{profileId}/accountActiveAdSummaries/{summaryAccountId}",
                    "httpMethod": "GET",
                    "name": "get",
                    "desc": "Gets the account's active ad summary by account ID.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "summaryAccountId",
                            "desc": "Account ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "response": "AccountActiveAdSummary"
                }
            ]
        },
        {
            "name": "floodlightConfigurations",
            "methods": [
                {
                    "path": "userprofiles/{profileId}/floodlightConfigurations",
                    "httpMethod": "PUT",
                    "name": "update",
                    "desc": "Updates an existing floodlight configuration.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "FloodlightConfiguration",
                    "response": "FloodlightConfiguration"
                },
                {
                    "path": "userprofiles/{profileId}/floodlightConfigurations/{id}",
                    "httpMethod": "GET",
                    "name": "get",
                    "desc": "Gets one floodlight configuration by ID.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "id",
                            "desc": "Floodlight configuration ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "response": "FloodlightConfiguration"
                },
                {
                    "path": "userprofiles/{profileId}/floodlightConfigurations",
                    "httpMethod": "GET",
                    "name": "list",
                    "desc": "Retrieves a list of floodlight configurations, possibly filtered.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "optionalQueryParams": [
                        {
                            "name": "ids",
                            "desc": "Set of IDs of floodlight configurations to retrieve. Required field; otherwise an empty list will be returned.",
                            "type": "int64"
                        }
                    ],
                    "response": "FloodlightConfigurationsListResponse"
                },
                {
                    "path": "userprofiles/{profileId}/floodlightConfigurations",
                    "httpMethod": "PATCH",
                    "name": "patch",
                    "desc": "Updates an existing floodlight configuration. This method supports patch semantics.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "requiredQueryParams": [
                        {
                            "name": "id",
                            "desc": "Floodlight configuration ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "FloodlightConfiguration",
                    "response": "FloodlightConfiguration"
                }
            ]
        },
        {
            "name": "sizes",
            "methods": [
                {
                    "path": "userprofiles/{profileId}/sizes/{id}",
                    "httpMethod": "GET",
                    "name": "get",
                    "desc": "Gets one size by ID.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "id",
                            "desc": "Size ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "response": "Size"
                },
                {
                    "path": "userprofiles/{profileId}/sizes",
                    "httpMethod": "POST",
                    "name": "insert",
                    "desc": "Inserts a new size.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "Size",
                    "response": "Size"
                },
                {
                    "path": "userprofiles/{profileId}/sizes",
                    "httpMethod": "GET",
                    "name": "list",
                    "desc": "Retrieves a list of sizes, possibly filtered.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "optionalQueryParams": [
                        {
                            "name": "height",
                            "desc": "Select only sizes with this height.",
                            "type": "int32"
                        },
                        {
                            "name": "iabStandard",
                            "desc": "Select only IAB standard sizes.",
                            "type": "bool"
                        },
                        {
                            "name": "ids",
                            "desc": "Select only sizes with these IDs.",
                            "type": "int64"
                        },
                        {
                            "name": "width",
                            "desc": "Select only sizes with this width.",
                            "type": "int32"
                        }
                    ],
                    "response": "SizesListResponse"
                }
            ]
        },
        {
            "name": "creatives",
            "methods": [
                {
                    "path": "userprofiles/{profileId}/creatives/{id}",
                    "httpMethod": "GET",
                    "name": "get",
                    "desc": "Gets one creative by ID.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "id",
                            "desc": "Creative ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "response": "Creative"
                },
                {
                    "path": "userprofiles/{profileId}/creatives",
                    "httpMethod": "POST",
                    "name": "insert",
                    "desc": "Inserts a new creative.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "Creative",
                    "response": "Creative"
                },
                {
                    "path": "userprofiles/{profileId}/creatives",
                    "httpMethod": "GET",
                    "name": "list",
                    "desc": "Retrieves a list of creatives, possibly filtered. This method supports paging.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "optionalQueryParams": [
                        {
                            "name": "advertiserId",
                            "desc": "Select only creatives with this advertiser ID.",
                            "type": "int64"
                        },
                        {
                            "name": "companionCreativeIds",
                            "desc": "Select only in-stream video creatives with these companion IDs.",
                            "type": "int64"
                        },
                        {
                            "name": "searchString",
                            "desc": "Allows searching for objects by name or ID. Wildcards (*) are allowed. For example, \"creative*2015\" will return objects with names like \"creative June 2015\", \"creative April 2015\", or simply \"creative 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"creative\" will match objects with name \"my creative\", \"creative 2015\", or simply \"creative\".",
                            "type": "string"
                        },
                        {
                            "name": "active",
                            "desc": "Select only active creatives. Leave blank to select active and inactive creatives.",
                            "type": "bool"
                        },
                        {
                            "name": "campaignId",
                            "desc": "Select only creatives with this campaign ID.",
                            "type": "int64"
                        },
                        {
                            "name": "ids",
                            "desc": "Select only creatives with these IDs.",
                            "type": "int64"
                        },
                        {
                            "name": "maxResults",
                            "desc": "Maximum number of results to return.",
                            "type": "int32"
                        },
                        {
                            "name": "renderingIds",
                            "desc": "Select only creatives with these rendering IDs.",
                            "type": "int64"
                        },
                        {
                            "name": "sortField",
                            "desc": "Field by which to sort the list.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "ID"
                                },
                                {
                                    "name": "NAME"
                                }
                            ]
                        },
                        {
                            "name": "sortOrder",
                            "desc": "Order of sorted results, default is ASCENDING.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "ASCENDING"
                                },
                                {
                                    "name": "DESCENDING"
                                }
                            ]
                        },
                        {
                            "name": "creativeFieldIds",
                            "desc": "Select only creatives with these creative field IDs.",
                            "type": "int64"
                        },
                        {
                            "name": "pageToken",
                            "desc": "Value of the nextPageToken from the previous result page.",
                            "type": "string"
                        },
                        {
                            "name": "sizeIds",
                            "desc": "Select only creatives with these size IDs.",
                            "type": "int64"
                        },
                        {
                            "name": "studioCreativeId",
                            "desc": "Select only creatives corresponding to this Studio creative ID.",
                            "type": "int64"
                        },
                        {
                            "name": "types",
                            "desc": "Select only creatives with these creative types.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "BRAND_SAFE_DEFAULT_INSTREAM_VIDEO"
                                },
                                {
                                    "name": "CUSTOM_DISPLAY"
                                },
                                {
                                    "name": "CUSTOM_DISPLAY_INTERSTITIAL"
                                },
                                {
                                    "name": "DISPLAY"
                                },
                                {
                                    "name": "DISPLAY_IMAGE_GALLERY"
                                },
                                {
                                    "name": "DISPLAY_REDIRECT"
                                },
                                {
                                    "name": "FLASH_INPAGE"
                                },
                                {
                                    "name": "HTML5_BANNER"
                                },
                                {
                                    "name": "IMAGE"
                                },
                                {
                                    "name": "INSTREAM_VIDEO"
                                },
                                {
                                    "name": "INSTREAM_VIDEO_REDIRECT"
                                },
                                {
                                    "name": "INTERNAL_REDIRECT"
                                },
                                {
                                    "name": "INTERSTITIAL_INTERNAL_REDIRECT"
                                },
                                {
                                    "name": "RICH_MEDIA_DISPLAY_BANNER"
                                },
                                {
                                    "name": "RICH_MEDIA_DISPLAY_EXPANDING"
                                },
                                {
                                    "name": "RICH_MEDIA_DISPLAY_INTERSTITIAL"
                                },
                                {
                                    "name": "RICH_MEDIA_DISPLAY_MULTI_FLOATING_INTERSTITIAL"
                                },
                                {
                                    "name": "RICH_MEDIA_IM_EXPAND"
                                },
                                {
                                    "name": "RICH_MEDIA_INPAGE_FLOATING"
                                },
                                {
                                    "name": "RICH_MEDIA_MOBILE_IN_APP"
                                },
                                {
                                    "name": "RICH_MEDIA_PEEL_DOWN"
                                },
                                {
                                    "name": "TRACKING_TEXT"
                                },
                                {
                                    "name": "VPAID_LINEAR_VIDEO"
                                },
                                {
                                    "name": "VPAID_NON_LINEAR_VIDEO"
                                }
                            ]
                        },
                        {
                            "name": "archived",
                            "desc": "Select only archived creatives. Leave blank to select archived and unarchived creatives.",
                            "type": "bool"
                        }
                    ],
                    "response": "CreativesListResponse"
                },
                {
                    "path": "userprofiles/{profileId}/creatives",
                    "httpMethod": "PATCH",
                    "name": "patch",
                    "desc": "Updates an existing creative. This method supports patch semantics.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "requiredQueryParams": [
                        {
                            "name": "id",
                            "desc": "Creative ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "Creative",
                    "response": "Creative"
                },
                {
                    "path": "userprofiles/{profileId}/creatives",
                    "httpMethod": "PUT",
                    "name": "update",
                    "desc": "Updates an existing creative.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "Creative",
                    "response": "Creative"
                }
            ]
        },
        {
            "name": "orderDocuments",
            "methods": [
                {
                    "path": "userprofiles/{profileId}/projects/{projectId}/orderDocuments/{id}",
                    "httpMethod": "GET",
                    "name": "get",
                    "desc": "Gets one order document by ID.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "projectId",
                            "desc": "Project ID for order documents.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "id",
                            "desc": "Order document ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "response": "OrderDocument"
                },
                {
                    "path": "userprofiles/{profileId}/projects/{projectId}/orderDocuments",
                    "httpMethod": "GET",
                    "name": "list",
                    "desc": "Retrieves a list of order documents, possibly filtered. This method supports paging.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "projectId",
                            "desc": "Project ID for order documents.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "optionalQueryParams": [
                        {
                            "name": "searchString",
                            "desc": "Allows searching for order documents by name or ID. Wildcards (*) are allowed. For example, \"orderdocument*2015\" will return order documents with names like \"orderdocument June 2015\", \"orderdocument April 2015\", or simply \"orderdocument 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"orderdocument\" will match order documents with name \"my orderdocument\", \"orderdocument 2015\", or simply \"orderdocument\".",
                            "type": "string"
                        },
                        {
                            "name": "sortOrder",
                            "desc": "Order of sorted results, default is ASCENDING.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "ASCENDING"
                                },
                                {
                                    "name": "DESCENDING"
                                }
                            ]
                        },
                        {
                            "name": "approved",
                            "desc": "Select only order documents that have been approved by at least one user.",
                            "type": "bool"
                        },
                        {
                            "name": "pageToken",
                            "desc": "Value of the nextPageToken from the previous result page.",
                            "type": "string"
                        },
                        {
                            "name": "siteId",
                            "desc": "Select only order documents that are associated with these sites.",
                            "type": "int64"
                        },
                        {
                            "name": "sortField",
                            "desc": "Field by which to sort the list.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "ID"
                                },
                                {
                                    "name": "NAME"
                                }
                            ]
                        },
                        {
                            "name": "ids",
                            "desc": "Select only order documents with these IDs.",
                            "type": "int64"
                        },
                        {
                            "name": "maxResults",
                            "desc": "Maximum number of results to return.",
                            "type": "int32"
                        },
                        {
                            "name": "orderId",
                            "desc": "Select only order documents for specified orders.",
                            "type": "int64"
                        }
                    ],
                    "response": "OrderDocumentsListResponse"
                }
            ]
        },
        {
            "name": "accountPermissions",
            "methods": [
                {
                    "path": "userprofiles/{profileId}/accountPermissions",
                    "httpMethod": "GET",
                    "name": "list",
                    "desc": "Retrieves the list of account permissions.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "response": "AccountPermissionsListResponse"
                },
                {
                    "path": "userprofiles/{profileId}/accountPermissions/{id}",
                    "httpMethod": "GET",
                    "name": "get",
                    "desc": "Gets one account permission by ID.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "id",
                            "desc": "Account permission ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "response": "AccountPermission"
                }
            ]
        },
        {
            "name": "accounts",
            "methods": [
                {
                    "path": "userprofiles/{profileId}/accounts/{id}",
                    "httpMethod": "GET",
                    "name": "get",
                    "desc": "Gets one account by ID.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "id",
                            "desc": "Account ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "response": "Account"
                },
                {
                    "path": "userprofiles/{profileId}/accounts",
                    "httpMethod": "GET",
                    "name": "list",
                    "desc": "Retrieves the list of accounts, possibly filtered. This method supports paging.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "optionalQueryParams": [
                        {
                            "name": "active",
                            "desc": "Select only active accounts. Don't set this field to select both active and non-active accounts.",
                            "type": "bool"
                        },
                        {
                            "name": "ids",
                            "desc": "Select only accounts with these IDs.",
                            "type": "int64"
                        },
                        {
                            "name": "maxResults",
                            "desc": "Maximum number of results to return.",
                            "type": "int32"
                        },
                        {
                            "name": "pageToken",
                            "desc": "Value of the nextPageToken from the previous result page.",
                            "type": "string"
                        },
                        {
                            "name": "searchString",
                            "desc": "Allows searching for objects by name or ID. Wildcards (*) are allowed. For example, \"account*2015\" will return objects with names like \"account June 2015\", \"account April 2015\", or simply \"account 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"account\" will match objects with name \"my account\", \"account 2015\", or simply \"account\".",
                            "type": "string"
                        },
                        {
                            "name": "sortField",
                            "desc": "Field by which to sort the list.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "ID"
                                },
                                {
                                    "name": "NAME"
                                }
                            ]
                        },
                        {
                            "name": "sortOrder",
                            "desc": "Order of sorted results, default is ASCENDING.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "ASCENDING"
                                },
                                {
                                    "name": "DESCENDING"
                                }
                            ]
                        }
                    ],
                    "response": "AccountsListResponse"
                },
                {
                    "path": "userprofiles/{profileId}/accounts",
                    "httpMethod": "PATCH",
                    "name": "patch",
                    "desc": "Updates an existing account. This method supports patch semantics.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "requiredQueryParams": [
                        {
                            "name": "id",
                            "desc": "Account ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "Account",
                    "response": "Account"
                },
                {
                    "path": "userprofiles/{profileId}/accounts",
                    "httpMethod": "PUT",
                    "name": "update",
                    "desc": "Updates an existing account.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "Account",
                    "response": "Account"
                }
            ]
        },
        {
            "name": "operatingSystems",
            "methods": [
                {
                    "path": "userprofiles/{profileId}/operatingSystems/{dartId}",
                    "httpMethod": "GET",
                    "name": "get",
                    "desc": "Gets one operating system by DART ID.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "dartId",
                            "desc": "Operating system DART ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "response": "OperatingSystem"
                },
                {
                    "path": "userprofiles/{profileId}/operatingSystems",
                    "httpMethod": "GET",
                    "name": "list",
                    "desc": "Retrieves a list of operating systems.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "response": "OperatingSystemsListResponse"
                }
            ]
        },
        {
            "name": "userRoles",
            "methods": [
                {
                    "path": "userprofiles/{profileId}/userRoles/{id}",
                    "httpMethod": "DELETE",
                    "name": "delete",
                    "desc": "Deletes an existing user role.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "id",
                            "desc": "User role ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ]
                },
                {
                    "path": "userprofiles/{profileId}/userRoles/{id}",
                    "httpMethod": "GET",
                    "name": "get",
                    "desc": "Gets one user role by ID.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "id",
                            "desc": "User role ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "response": "UserRole"
                },
                {
                    "path": "userprofiles/{profileId}/userRoles",
                    "httpMethod": "POST",
                    "name": "insert",
                    "desc": "Inserts a new user role.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "UserRole",
                    "response": "UserRole"
                },
                {
                    "path": "userprofiles/{profileId}/userRoles",
                    "httpMethod": "GET",
                    "name": "list",
                    "desc": "Retrieves a list of user roles, possibly filtered. This method supports paging.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "optionalQueryParams": [
                        {
                            "name": "searchString",
                            "desc": "Allows searching for objects by name or ID. Wildcards (*) are allowed. For example, \"userrole*2015\" will return objects with names like \"userrole June 2015\", \"userrole April 2015\", or simply \"userrole 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"userrole\" will match objects with name \"my userrole\", \"userrole 2015\", or simply \"userrole\".",
                            "type": "string"
                        },
                        {
                            "name": "sortField",
                            "desc": "Field by which to sort the list.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "ID"
                                },
                                {
                                    "name": "NAME"
                                }
                            ]
                        },
                        {
                            "name": "sortOrder",
                            "desc": "Order of sorted results, default is ASCENDING.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "ASCENDING"
                                },
                                {
                                    "name": "DESCENDING"
                                }
                            ]
                        },
                        {
                            "name": "accountUserRoleOnly",
                            "desc": "Select only account level user roles not associated with any specific subaccount.",
                            "type": "bool"
                        },
                        {
                            "name": "ids",
                            "desc": "Select only user roles with the specified IDs.",
                            "type": "int64"
                        },
                        {
                            "name": "maxResults",
                            "desc": "Maximum number of results to return.",
                            "type": "int32"
                        },
                        {
                            "name": "pageToken",
                            "desc": "Value of the nextPageToken from the previous result page.",
                            "type": "string"
                        },
                        {
                            "name": "subaccountId",
                            "desc": "Select only user roles that belong to this subaccount.",
                            "type": "int64"
                        }
                    ],
                    "response": "UserRolesListResponse"
                },
                {
                    "path": "userprofiles/{profileId}/userRoles",
                    "httpMethod": "PATCH",
                    "name": "patch",
                    "desc": "Updates an existing user role. This method supports patch semantics.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "requiredQueryParams": [
                        {
                            "name": "id",
                            "desc": "User role ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "UserRole",
                    "response": "UserRole"
                },
                {
                    "path": "userprofiles/{profileId}/userRoles",
                    "httpMethod": "PUT",
                    "name": "update",
                    "desc": "Updates an existing user role.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "UserRole",
                    "response": "UserRole"
                }
            ]
        },
        {
            "name": "subaccounts",
            "methods": [
                {
                    "path": "userprofiles/{profileId}/subaccounts/{id}",
                    "httpMethod": "GET",
                    "name": "get",
                    "desc": "Gets one subaccount by ID.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "id",
                            "desc": "Subaccount ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "response": "Subaccount"
                },
                {
                    "path": "userprofiles/{profileId}/subaccounts",
                    "httpMethod": "POST",
                    "name": "insert",
                    "desc": "Inserts a new subaccount.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "Subaccount",
                    "response": "Subaccount"
                },
                {
                    "path": "userprofiles/{profileId}/subaccounts",
                    "httpMethod": "GET",
                    "name": "list",
                    "desc": "Gets a list of subaccounts, possibly filtered. This method supports paging.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "optionalQueryParams": [
                        {
                            "name": "sortField",
                            "desc": "Field by which to sort the list.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "ID"
                                },
                                {
                                    "name": "NAME"
                                }
                            ]
                        },
                        {
                            "name": "sortOrder",
                            "desc": "Order of sorted results, default is ASCENDING.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "ASCENDING"
                                },
                                {
                                    "name": "DESCENDING"
                                }
                            ]
                        },
                        {
                            "name": "ids",
                            "desc": "Select only subaccounts with these IDs.",
                            "type": "int64"
                        },
                        {
                            "name": "maxResults",
                            "desc": "Maximum number of results to return.",
                            "type": "int32"
                        },
                        {
                            "name": "pageToken",
                            "desc": "Value of the nextPageToken from the previous result page.",
                            "type": "string"
                        },
                        {
                            "name": "searchString",
                            "desc": "Allows searching for objects by name or ID. Wildcards (*) are allowed. For example, \"subaccount*2015\" will return objects with names like \"subaccount June 2015\", \"subaccount April 2015\", or simply \"subaccount 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"subaccount\" will match objects with name \"my subaccount\", \"subaccount 2015\", or simply \"subaccount\".",
                            "type": "string"
                        }
                    ],
                    "response": "SubaccountsListResponse"
                },
                {
                    "path": "userprofiles/{profileId}/subaccounts",
                    "httpMethod": "PATCH",
                    "name": "patch",
                    "desc": "Updates an existing subaccount. This method supports patch semantics.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "requiredQueryParams": [
                        {
                            "name": "id",
                            "desc": "Subaccount ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "Subaccount",
                    "response": "Subaccount"
                },
                {
                    "path": "userprofiles/{profileId}/subaccounts",
                    "httpMethod": "PUT",
                    "name": "update",
                    "desc": "Updates an existing subaccount.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "Subaccount",
                    "response": "Subaccount"
                }
            ]
        },
        {
            "name": "advertiserGroups",
            "methods": [
                {
                    "path": "userprofiles/{profileId}/advertiserGroups/{id}",
                    "httpMethod": "GET",
                    "name": "get",
                    "desc": "Gets one advertiser group by ID.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "id",
                            "desc": "Advertiser group ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "response": "AdvertiserGroup"
                },
                {
                    "path": "userprofiles/{profileId}/advertiserGroups",
                    "httpMethod": "POST",
                    "name": "insert",
                    "desc": "Inserts a new advertiser group.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "AdvertiserGroup",
                    "response": "AdvertiserGroup"
                },
                {
                    "path": "userprofiles/{profileId}/advertiserGroups",
                    "httpMethod": "GET",
                    "name": "list",
                    "desc": "Retrieves a list of advertiser groups, possibly filtered. This method supports paging.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "optionalQueryParams": [
                        {
                            "name": "ids",
                            "desc": "Select only advertiser groups with these IDs.",
                            "type": "int64"
                        },
                        {
                            "name": "maxResults",
                            "desc": "Maximum number of results to return.",
                            "type": "int32"
                        },
                        {
                            "name": "pageToken",
                            "desc": "Value of the nextPageToken from the previous result page.",
                            "type": "string"
                        },
                        {
                            "name": "searchString",
                            "desc": "Allows searching for objects by name or ID. Wildcards (*) are allowed. For example, \"advertiser*2015\" will return objects with names like \"advertiser group June 2015\", \"advertiser group April 2015\", or simply \"advertiser group 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"advertisergroup\" will match objects with name \"my advertisergroup\", \"advertisergroup 2015\", or simply \"advertisergroup\".",
                            "type": "string"
                        },
                        {
                            "name": "sortField",
                            "desc": "Field by which to sort the list.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "ID"
                                },
                                {
                                    "name": "NAME"
                                }
                            ]
                        },
                        {
                            "name": "sortOrder",
                            "desc": "Order of sorted results, default is ASCENDING.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "ASCENDING"
                                },
                                {
                                    "name": "DESCENDING"
                                }
                            ]
                        }
                    ],
                    "response": "AdvertiserGroupsListResponse"
                },
                {
                    "path": "userprofiles/{profileId}/advertiserGroups",
                    "httpMethod": "PATCH",
                    "name": "patch",
                    "desc": "Updates an existing advertiser group. This method supports patch semantics.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "requiredQueryParams": [
                        {
                            "name": "id",
                            "desc": "Advertiser group ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "AdvertiserGroup",
                    "response": "AdvertiserGroup"
                },
                {
                    "path": "userprofiles/{profileId}/advertiserGroups",
                    "httpMethod": "PUT",
                    "name": "update",
                    "desc": "Updates an existing advertiser group.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "AdvertiserGroup",
                    "response": "AdvertiserGroup"
                },
                {
                    "path": "userprofiles/{profileId}/advertiserGroups/{id}",
                    "httpMethod": "DELETE",
                    "name": "delete",
                    "desc": "Deletes an existing advertiser group.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "id",
                            "desc": "Advertiser group ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ]
                }
            ]
        },
        {
            "name": "languages",
            "methods": [
                {
                    "path": "userprofiles/{profileId}/languages",
                    "httpMethod": "GET",
                    "name": "list",
                    "desc": "Retrieves a list of languages.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "response": "LanguagesListResponse"
                }
            ]
        },
        {
            "name": "mobileCarriers",
            "methods": [
                {
                    "path": "userprofiles/{profileId}/mobileCarriers/{id}",
                    "httpMethod": "GET",
                    "name": "get",
                    "desc": "Gets one mobile carrier by ID.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "id",
                            "desc": "Mobile carrier ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "response": "MobileCarrier"
                },
                {
                    "path": "userprofiles/{profileId}/mobileCarriers",
                    "httpMethod": "GET",
                    "name": "list",
                    "desc": "Retrieves a list of mobile carriers.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "response": "MobileCarriersListResponse"
                }
            ]
        },
        {
            "name": "contentCategories",
            "methods": [
                {
                    "path": "userprofiles/{profileId}/contentCategories",
                    "httpMethod": "POST",
                    "name": "insert",
                    "desc": "Inserts a new content category.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "ContentCategory",
                    "response": "ContentCategory"
                },
                {
                    "path": "userprofiles/{profileId}/contentCategories",
                    "httpMethod": "GET",
                    "name": "list",
                    "desc": "Retrieves a list of content categories, possibly filtered. This method supports paging.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "optionalQueryParams": [
                        {
                            "name": "ids",
                            "desc": "Select only content categories with these IDs.",
                            "type": "int64"
                        },
                        {
                            "name": "maxResults",
                            "desc": "Maximum number of results to return.",
                            "type": "int32"
                        },
                        {
                            "name": "pageToken",
                            "desc": "Value of the nextPageToken from the previous result page.",
                            "type": "string"
                        },
                        {
                            "name": "searchString",
                            "desc": "Allows searching for objects by name or ID. Wildcards (*) are allowed. For example, \"contentcategory*2015\" will return objects with names like \"contentcategory June 2015\", \"contentcategory April 2015\", or simply \"contentcategory 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"contentcategory\" will match objects with name \"my contentcategory\", \"contentcategory 2015\", or simply \"contentcategory\".",
                            "type": "string"
                        },
                        {
                            "name": "sortField",
                            "desc": "Field by which to sort the list.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "ID"
                                },
                                {
                                    "name": "NAME"
                                }
                            ]
                        },
                        {
                            "name": "sortOrder",
                            "desc": "Order of sorted results, default is ASCENDING.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "ASCENDING"
                                },
                                {
                                    "name": "DESCENDING"
                                }
                            ]
                        }
                    ],
                    "response": "ContentCategoriesListResponse"
                },
                {
                    "path": "userprofiles/{profileId}/contentCategories",
                    "httpMethod": "PATCH",
                    "name": "patch",
                    "desc": "Updates an existing content category. This method supports patch semantics.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "requiredQueryParams": [
                        {
                            "name": "id",
                            "desc": "Content category ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "ContentCategory",
                    "response": "ContentCategory"
                },
                {
                    "path": "userprofiles/{profileId}/contentCategories",
                    "httpMethod": "PUT",
                    "name": "update",
                    "desc": "Updates an existing content category.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "ContentCategory",
                    "response": "ContentCategory"
                },
                {
                    "path": "userprofiles/{profileId}/contentCategories/{id}",
                    "httpMethod": "DELETE",
                    "name": "delete",
                    "desc": "Deletes an existing content category.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "id",
                            "desc": "Content category ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ]
                },
                {
                    "path": "userprofiles/{profileId}/contentCategories/{id}",
                    "httpMethod": "GET",
                    "name": "get",
                    "desc": "Gets one content category by ID.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "id",
                            "desc": "Content category ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "response": "ContentCategory"
                }
            ]
        },
        {
            "name": "dimensionValues",
            "methods": [
                {
                    "path": "userprofiles/{profileId}/dimensionvalues/query",
                    "httpMethod": "POST",
                    "name": "query",
                    "desc": "Retrieves list of report dimension values for a list of filters.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfareporting"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "The DFA user profile ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "optionalQueryParams": [
                        {
                            "name": "maxResults",
                            "desc": "Maximum number of results to return.",
                            "type": "int32",
                            "min": "0",
                            "max": "100"
                        },
                        {
                            "name": "pageToken",
                            "desc": "The value of the nextToken from the previous result page.",
                            "type": "string"
                        }
                    ],
                    "request": "DimensionValueRequest",
                    "response": "DimensionValueList"
                }
            ]
        },
        {
            "name": "floodlightActivityGroups",
            "methods": [
                {
                    "path": "userprofiles/{profileId}/floodlightActivityGroups",
                    "httpMethod": "POST",
                    "name": "insert",
                    "desc": "Inserts a new floodlight activity group.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "FloodlightActivityGroup",
                    "response": "FloodlightActivityGroup"
                },
                {
                    "path": "userprofiles/{profileId}/floodlightActivityGroups",
                    "httpMethod": "GET",
                    "name": "list",
                    "desc": "Retrieves a list of floodlight activity groups, possibly filtered. This method supports paging.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "optionalQueryParams": [
                        {
                            "name": "maxResults",
                            "desc": "Maximum number of results to return.",
                            "type": "int32"
                        },
                        {
                            "name": "sortField",
                            "desc": "Field by which to sort the list.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "ID"
                                },
                                {
                                    "name": "NAME"
                                }
                            ]
                        },
                        {
                            "name": "floodlightConfigurationId",
                            "desc": "Select only floodlight activity groups with the specified floodlight configuration ID. Must specify either advertiserId, or floodlightConfigurationId for a non-empty result.",
                            "type": "int64"
                        },
                        {
                            "name": "ids",
                            "desc": "Select only floodlight activity groups with the specified IDs. Must specify either advertiserId or floodlightConfigurationId for a non-empty result.",
                            "type": "int64"
                        },
                        {
                            "name": "searchString",
                            "desc": "Allows searching for objects by name or ID. Wildcards (*) are allowed. For example, \"floodlightactivitygroup*2015\" will return objects with names like \"floodlightactivitygroup June 2015\", \"floodlightactivitygroup April 2015\", or simply \"floodlightactivitygroup 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"floodlightactivitygroup\" will match objects with name \"my floodlightactivitygroup activity\", \"floodlightactivitygroup 2015\", or simply \"floodlightactivitygroup\".",
                            "type": "string"
                        },
                        {
                            "name": "sortOrder",
                            "desc": "Order of sorted results, default is ASCENDING.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "ASCENDING"
                                },
                                {
                                    "name": "DESCENDING"
                                }
                            ]
                        },
                        {
                            "name": "type",
                            "desc": "Select only floodlight activity groups with the specified floodlight activity group type.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "COUNTER"
                                },
                                {
                                    "name": "SALE"
                                }
                            ]
                        },
                        {
                            "name": "advertiserId",
                            "desc": "Select only floodlight activity groups with the specified advertiser ID. Must specify either advertiserId or floodlightConfigurationId for a non-empty result.",
                            "type": "int64"
                        },
                        {
                            "name": "pageToken",
                            "desc": "Value of the nextPageToken from the previous result page.",
                            "type": "string"
                        }
                    ],
                    "response": "FloodlightActivityGroupsListResponse"
                },
                {
                    "path": "userprofiles/{profileId}/floodlightActivityGroups",
                    "httpMethod": "PATCH",
                    "name": "patch",
                    "desc": "Updates an existing floodlight activity group. This method supports patch semantics.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "requiredQueryParams": [
                        {
                            "name": "id",
                            "desc": "Floodlight activity Group ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "FloodlightActivityGroup",
                    "response": "FloodlightActivityGroup"
                },
                {
                    "path": "userprofiles/{profileId}/floodlightActivityGroups",
                    "httpMethod": "PUT",
                    "name": "update",
                    "desc": "Updates an existing floodlight activity group.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "request": "FloodlightActivityGroup",
                    "response": "FloodlightActivityGroup"
                },
                {
                    "path": "userprofiles/{profileId}/floodlightActivityGroups/{id}",
                    "httpMethod": "GET",
                    "name": "get",
                    "desc": "Gets one floodlight activity group by ID.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "id",
                            "desc": "Floodlight activity Group ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "response": "FloodlightActivityGroup"
                }
            ]
        },
        {
            "name": "projects",
            "methods": [
                {
                    "path": "userprofiles/{profileId}/projects/{id}",
                    "httpMethod": "GET",
                    "name": "get",
                    "desc": "Gets one project by ID.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        },
                        {
                            "name": "id",
                            "desc": "Project ID.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "response": "Project"
                },
                {
                    "path": "userprofiles/{profileId}/projects",
                    "httpMethod": "GET",
                    "name": "list",
                    "desc": "Retrieves a list of projects, possibly filtered. This method supports paging.",
                    "scopes": [
                        "https://www.googleapis.com/auth/dfatrafficking"
                    ],
                    "pathParams": [
                        {
                            "name": "profileId",
                            "desc": "User profile ID associated with this request.",
                            "required": true,
                            "type": "int64"
                        }
                    ],
                    "optionalQueryParams": [
                        {
                            "name": "pageToken",
                            "desc": "Value of the nextPageToken from the previous result page.",
                            "type": "string"
                        },
                        {
                            "name": "searchString",
                            "desc": "Allows searching for projects by name or ID. Wildcards (*) are allowed. For example, \"project*2015\" will return projects with names like \"project June 2015\", \"project April 2015\", or simply \"project 2015\". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of \"project\" will match projects with name \"my project\", \"project 2015\", or simply \"project\".",
                            "type": "string"
                        },
                        {
                            "name": "sortField",
                            "desc": "Field by which to sort the list.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "ID"
                                },
                                {
                                    "name": "NAME"
                                }
                            ]
                        },
                        {
                            "name": "sortOrder",
                            "desc": "Order of sorted results, default is ASCENDING.",
                            "type": "string",
                            "enum": [
                                {
                                    "name": "ASCENDING"
                                },
                                {
                                    "name": "DESCENDING"
                                }
                            ]
                        },
                        {
                            "name": "advertiserIds",
                            "desc": "Select only projects with these advertiser IDs.",
                            "type": "int64"
                        },
                        {
                            "name": "ids",
                            "desc": "Select only projects with these IDs.",
                            "type": "int64"
                        },
                        {
                            "name": "maxResults",
                            "desc": "Maximum number of results to return.",
                            "type": "int32"
                        }
                    ],
                    "response": "ProjectsListResponse"
                }
            ]
        }
    ]
}