{
    "kind": "discovery#restDescription",
    "etag": "",
    "discoveryVersion": "v1",
    "id": "servicecontrol:v1",
    "name": "servicecontrol",
    "version": "v1",
    "title": "Google Service Control API",
    "description": "Google Service Control provides control plane functionality to managed services, such as logging, monitoring, and status checks.",
    "documentationLink": "https://cloud.google.com/service-control/",
    "protocol": "rest",
    "rootUrl": "https://servicecontrol.googleapis.com/",
    "auth": {
        "oauth2": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/servicecontrol"
        ]
    },
    "parameters": [
        {
            "name": "fields",
            "desc": "Selector specifying which fields to include in a partial response.",
            "type": "string"
        },
        {
            "name": "callback",
            "desc": "JSONP",
            "type": "string"
        },
        {
            "name": "key",
            "desc": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
            "type": "string"
        },
        {
            "name": "quotaUser",
            "desc": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
            "type": "string"
        },
        {
            "name": "pp",
            "desc": "Pretty-print response.",
            "type": "bool",
            "default": "true"
        },
        {
            "name": "oauth_token",
            "desc": "OAuth 2.0 token for the current user.",
            "type": "string"
        },
        {
            "name": "upload_protocol",
            "desc": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
            "type": "string"
        },
        {
            "name": "prettyPrint",
            "desc": "Returns response with indentations and line breaks.",
            "type": "bool",
            "default": "true"
        },
        {
            "name": "uploadType",
            "desc": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
            "type": "string"
        },
        {
            "name": "$.xgafv",
            "desc": "V1 error format.",
            "type": "string",
            "enum": [
                {
                    "name": "1",
                    "desc": "v1 error format"
                },
                {
                    "name": "2",
                    "desc": "v2 error format"
                }
            ]
        },
        {
            "name": "alt",
            "desc": "Data format for response.",
            "type": "string",
            "default": "json",
            "enum": [
                {
                    "name": "json",
                    "desc": "Responses with Content-Type of application/json"
                },
                {
                    "name": "media",
                    "desc": "Media download with context-dependent Content-Type"
                },
                {
                    "name": "proto",
                    "desc": "Responses with Content-Type of application/x-protobuf"
                }
            ]
        },
        {
            "name": "access_token",
            "desc": "OAuth access token.",
            "type": "string"
        },
        {
            "name": "bearer_token",
            "desc": "OAuth bearer token.",
            "type": "string"
        }
    ],
    "schemas": [
        {
            "name": "Distribution",
            "desc": "Distribution represents a frequency distribution of double-valued sample\npoints. It contains the size of the population of sample points plus\nadditional optional information:\n\n  - the arithmetic mean of the samples\n  - the minimum and maximum of the samples\n  - the sum-squared-deviation of the samples, used to compute variance\n  - a histogram of the values of the sample points",
            "type": "object",
            "fields": [
                {
                    "name": "exponentialBuckets",
                    "desc": "Buckets with exponentially growing width.",
                    "type": "ref",
                    "refType": "ExponentialBuckets"
                },
                {
                    "name": "linearBuckets",
                    "desc": "Buckets with constant width.",
                    "type": "ref",
                    "refType": "LinearBuckets"
                },
                {
                    "name": "count",
                    "desc": "The total number of samples in the distribution. Must be \u003e= 0.",
                    "type": "int64"
                },
                {
                    "name": "bucketCounts",
                    "desc": "The number of samples in each histogram bucket. `bucket_counts` are\noptional. If present, they must sum to the `count` value.\n\nThe buckets are defined below in `bucket_option`. There are N buckets.\n`bucket_counts[0]` is the number of samples in the underflow bucket.\n`bucket_counts[1]` to `bucket_counts[N-1]` are the numbers of samples\nin each of the finite buckets. And `bucket_counts[N] is the number\nof samples in the overflow bucket. See the comments of `bucket_option`\nbelow for more details.\n\nAny suffix of trailing zeros may be omitted.",
                    "collection": "array",
                    "type": "int64"
                },
                {
                    "name": "explicitBuckets",
                    "desc": "Buckets with arbitrary user-provided width.",
                    "type": "ref",
                    "refType": "ExplicitBuckets"
                },
                {
                    "name": "maximum",
                    "desc": "The maximum of the population of values. Ignored if `count` is zero.",
                    "type": "float64"
                },
                {
                    "name": "sumOfSquaredDeviation",
                    "desc": "The sum of squared deviations from the mean:\n  Sum[i=1..count]((x_i - mean)^2)\nwhere each x_i is a sample values. If `count` is zero then this field\nmust be zero, otherwise validation of the request fails.",
                    "type": "float64"
                },
                {
                    "name": "mean",
                    "desc": "The arithmetic mean of the samples in the distribution. If `count` is\nzero then this field must be zero.",
                    "type": "float64"
                },
                {
                    "name": "minimum",
                    "desc": "The minimum of the population of values. Ignored if `count` is zero.",
                    "type": "float64"
                }
            ]
        },
        {
            "name": "StartReconciliationResponse",
            "type": "object",
            "fields": [
                {
                    "name": "quotaMetrics",
                    "desc": "Metric values as tracked by One Platform before the start of\nreconciliation.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "MetricValueSet"
                },
                {
                    "name": "operationId",
                    "desc": "The same operation_id value used in the StartReconciliationRequest. Used\nfor logging and diagnostics purposes.",
                    "type": "string"
                },
                {
                    "name": "reconciliationErrors",
                    "desc": "Indicates the decision of the reconciliation start.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "QuotaError"
                },
                {
                    "name": "serviceConfigId",
                    "desc": "ID of the actual config used to process the request.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "CheckInfo",
            "type": "object",
            "fields": [
                {
                    "name": "unusedArguments",
                    "desc": "A list of fields and label keys that are ignored by the server.\nThe client doesn't need to send them for following requests to improve\nperformance and allow better aggregation.",
                    "collection": "array",
                    "type": "string"
                }
            ]
        },
        {
            "name": "ReportInfo",
            "type": "object",
            "fields": [
                {
                    "name": "quotaInfo",
                    "desc": "Quota usage info when processing the `Operation`.",
                    "type": "ref",
                    "refType": "QuotaInfo"
                },
                {
                    "name": "operationId",
                    "desc": "The Operation.operation_id value from the request.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "AuditLog",
            "desc": "Common audit log format for Google Cloud Platform API operations.\n\n",
            "type": "object",
            "fields": [
                {
                    "name": "requestMetadata",
                    "desc": "Metadata about the operation.",
                    "type": "ref",
                    "refType": "RequestMetadata"
                },
                {
                    "name": "numResponseItems",
                    "desc": "The number of items returned from a List or Query API method,\nif applicable.",
                    "type": "int64"
                },
                {
                    "name": "authenticationInfo",
                    "desc": "Authentication information.",
                    "type": "ref",
                    "refType": "AuthenticationInfo"
                },
                {
                    "name": "methodName",
                    "desc": "The name of the service method or operation.\nFor API calls, this should be the name of the API method.\nFor example,\n\n    \"google.datastore.v1.Datastore.RunQuery\"\n    \"google.logging.v1.LoggingService.DeleteLog\"",
                    "type": "string"
                },
                {
                    "name": "resourceName",
                    "desc": "The resource or collection that is the target of the operation.\nThe name is a scheme-less URI, not including the API service name.\nFor example:\n\n    \"shelves/SHELF_ID/books\"\n    \"shelves/SHELF_ID/books/BOOK_ID\"",
                    "type": "string"
                },
                {
                    "name": "serviceData",
                    "desc": "Other service-specific data about the request, response, and other\nactivities.",
                    "collection": "map",
                    "type": "any"
                },
                {
                    "name": "status",
                    "desc": "The status of the overall operation.",
                    "type": "ref",
                    "refType": "Status"
                },
                {
                    "name": "serviceName",
                    "desc": "The name of the API service performing the operation. For example,\n`\"datastore.googleapis.com\"`.",
                    "type": "string"
                },
                {
                    "name": "response",
                    "desc": "The operation response. This may not include all response elements,\nsuch as those that are too large, privacy-sensitive, or duplicated\nelsewhere in the log record.\nIt should never include user-generated data, such as file contents.\nWhen the JSON object represented here has a proto equivalent, the proto\nname will be indicated in the `@type` property.",
                    "collection": "map",
                    "type": "any"
                },
                {
                    "name": "authorizationInfo",
                    "desc": "Authorization information. If there are multiple\nresources or permissions involved, then there is\none AuthorizationInfo element for each {resource, permission} tuple.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "AuthorizationInfo"
                },
                {
                    "name": "request",
                    "desc": "The operation request. This may not include all request parameters,\nsuch as those that are too large, privacy-sensitive, or duplicated\nelsewhere in the log record.\nIt should never include user-generated data, such as file contents.\nWhen the JSON object represented here has a proto equivalent, the proto\nname will be indicated in the `@type` property.",
                    "collection": "map",
                    "type": "any"
                }
            ]
        },
        {
            "name": "Money",
            "desc": "Represents an amount of money with its currency type.",
            "type": "object",
            "fields": [
                {
                    "name": "nanos",
                    "desc": "Number of nano (10^-9) units of the amount.\nThe value must be between -999,999,999 and +999,999,999 inclusive.\nIf `units` is positive, `nanos` must be positive or zero.\nIf `units` is zero, `nanos` can be positive, zero, or negative.\nIf `units` is negative, `nanos` must be negative or zero.\nFor example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.",
                    "type": "int32"
                },
                {
                    "name": "units",
                    "desc": "The whole units of the amount.\nFor example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar.",
                    "type": "int64"
                },
                {
                    "name": "currencyCode",
                    "desc": "The 3-letter currency code defined in ISO 4217.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "AuthenticationInfo",
            "desc": "Authentication information for the operation.",
            "type": "object",
            "fields": [
                {
                    "name": "principalEmail",
                    "desc": "The email address of the authenticated user making the request.",
                    "type": "string"
                },
                {
                    "name": "authoritySelector",
                    "desc": "The authority selector specified by the requestor, if any.\nIt is not guaranteed that the principal was allowed to use this authority.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "CheckError",
            "desc": "Defines the errors to be returned in\ngoogle.api.servicecontrol.v1.CheckResponse.check_errors.",
            "type": "object",
            "fields": [
                {
                    "name": "code",
                    "desc": "The error code.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "ERROR_CODE_UNSPECIFIED",
                            "desc": "This is never used in `CheckResponse`."
                        },
                        {
                            "name": "NOT_FOUND",
                            "desc": "The consumer's project id was not found.\nSame as google.rpc.Code.NOT_FOUND."
                        },
                        {
                            "name": "PERMISSION_DENIED",
                            "desc": "The consumer doesn't have access to the specified resource.\nSame as google.rpc.Code.PERMISSION_DENIED."
                        },
                        {
                            "name": "RESOURCE_EXHAUSTED",
                            "desc": "Quota check failed. Same as google.rpc.Code.RESOURCE_EXHAUSTED."
                        },
                        {
                            "name": "BUDGET_EXCEEDED",
                            "desc": "Budget check failed."
                        },
                        {
                            "name": "DENIAL_OF_SERVICE_DETECTED",
                            "desc": "The consumer's request has been flagged as a DoS attack."
                        },
                        {
                            "name": "LOAD_SHEDDING",
                            "desc": "The consumer's request should be rejected in order to protect the service\nfrom being overloaded."
                        },
                        {
                            "name": "ABUSER_DETECTED",
                            "desc": "The consumer has been flagged as an abuser."
                        },
                        {
                            "name": "SERVICE_NOT_ACTIVATED",
                            "desc": "The consumer hasn't activated the service."
                        },
                        {
                            "name": "VISIBILITY_DENIED",
                            "desc": "The consumer cannot access the service due to visibility configuration."
                        },
                        {
                            "name": "BILLING_DISABLED",
                            "desc": "The consumer cannot access the service because billing is disabled."
                        },
                        {
                            "name": "PROJECT_DELETED",
                            "desc": "The consumer's project has been marked as deleted (soft deletion)."
                        },
                        {
                            "name": "PROJECT_INVALID",
                            "desc": "The consumer's project number or id does not represent a valid project."
                        },
                        {
                            "name": "IP_ADDRESS_BLOCKED",
                            "desc": "The IP address of the consumer is invalid for the specific consumer\nproject."
                        },
                        {
                            "name": "REFERER_BLOCKED",
                            "desc": "The referer address of the consumer request is invalid for the specific\nconsumer project."
                        },
                        {
                            "name": "CLIENT_APP_BLOCKED",
                            "desc": "The client application of the consumer request is invalid for the\nspecific consumer project."
                        },
                        {
                            "name": "API_TARGET_BLOCKED",
                            "desc": "The API targeted by this request is invalid for the specified consumer\nproject."
                        },
                        {
                            "name": "API_KEY_INVALID",
                            "desc": "The consumer's API key is invalid."
                        },
                        {
                            "name": "API_KEY_EXPIRED",
                            "desc": "The consumer's API Key has expired."
                        },
                        {
                            "name": "API_KEY_NOT_FOUND",
                            "desc": "The consumer's API Key was not found in config record."
                        },
                        {
                            "name": "SPATULA_HEADER_INVALID",
                            "desc": "The consumer's spatula header is invalid."
                        },
                        {
                            "name": "LOAS_ROLE_INVALID",
                            "desc": "The consumer's LOAS role is invalid."
                        },
                        {
                            "name": "NO_LOAS_PROJECT",
                            "desc": "The consumer's LOAS role has no associated project."
                        },
                        {
                            "name": "LOAS_PROJECT_DISABLED",
                            "desc": "The consumer's LOAS project is not `ACTIVE` in LoquatV2."
                        },
                        {
                            "name": "SECURITY_POLICY_VIOLATED",
                            "desc": "Request is not allowed as per security policies defined in Org Policy."
                        },
                        {
                            "name": "NAMESPACE_LOOKUP_UNAVAILABLE",
                            "desc": "The backend server for looking up project id/number is unavailable."
                        },
                        {
                            "name": "SERVICE_STATUS_UNAVAILABLE",
                            "desc": "The backend server for checking service status is unavailable."
                        },
                        {
                            "name": "BILLING_STATUS_UNAVAILABLE",
                            "desc": "The backend server for checking billing status is unavailable."
                        },
                        {
                            "name": "QUOTA_CHECK_UNAVAILABLE",
                            "desc": "The backend server for checking quota limits is unavailable."
                        },
                        {
                            "name": "LOAS_PROJECT_LOOKUP_UNAVAILABLE",
                            "desc": "The Spanner for looking up LOAS project is unavailable."
                        },
                        {
                            "name": "CLOUD_RESOURCE_MANAGER_BACKEND_UNAVAILABLE",
                            "desc": "Cloud Resource Manager backend server is unavailable."
                        },
                        {
                            "name": "SECURITY_POLICY_BACKEND_UNAVAILABLE",
                            "desc": "Backend server for evaluating security policy is unavailable."
                        }
                    ]
                },
                {
                    "name": "detail",
                    "desc": "Free-form text providing details on the error cause of the error.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "EndReconciliationResponse",
            "type": "object",
            "fields": [
                {
                    "name": "quotaMetrics",
                    "desc": "Metric values as tracked by One Platform before the adjustment was made.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "MetricValueSet"
                },
                {
                    "name": "operationId",
                    "desc": "The same operation_id value used in the EndReconciliationRequest. Used for\nlogging and diagnostics purposes.",
                    "type": "string"
                },
                {
                    "name": "reconciliationErrors",
                    "desc": "Indicates the decision of the reconciliation end.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "QuotaError"
                },
                {
                    "name": "serviceConfigId",
                    "desc": "ID of the actual config used to process the request.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "ExponentialBuckets",
            "desc": "Describing buckets with exponentially growing width.",
            "type": "object",
            "fields": [
                {
                    "name": "numFiniteBuckets",
                    "desc": "The number of finite buckets. With the underflow and overflow buckets,\nthe total number of buckets is `num_finite_buckets` + 2.\nSee comments on `bucket_options` for details.",
                    "type": "int32"
                },
                {
                    "name": "growthFactor",
                    "desc": "The i'th exponential bucket covers the interval\n  [scale * growth_factor^(i-1), scale * growth_factor^i)\nwhere i ranges from 1 to num_finite_buckets inclusive.\nMust be larger than 1.0.",
                    "type": "float64"
                },
                {
                    "name": "scale",
                    "desc": "The i'th exponential bucket covers the interval\n  [scale * growth_factor^(i-1), scale * growth_factor^i)\nwhere i ranges from 1 to num_finite_buckets inclusive.\nMust be \u003e 0.",
                    "type": "float64"
                }
            ]
        },
        {
            "name": "CheckRequest",
            "desc": "Request message for the Check method.",
            "type": "object",
            "fields": [
                {
                    "name": "requestProjectSettings",
                    "desc": "Requests the project settings to be returned as part of the check response.",
                    "type": "bool"
                },
                {
                    "name": "serviceConfigId",
                    "desc": "Specifies which version of service configuration should be used to process\nthe request.\n\nIf unspecified or no matching version can be found, the\nlatest one will be used.",
                    "type": "string"
                },
                {
                    "name": "skipActivationCheck",
                    "desc": "Indicates if service activation check should be skipped for this request.\nDefault behavior is to perform the check and apply relevant quota.",
                    "type": "bool"
                },
                {
                    "name": "operation",
                    "desc": "The operation to be checked.",
                    "type": "ref",
                    "refType": "Operation"
                }
            ]
        },
        {
            "name": "ReportRequest",
            "desc": "Request message for the Report method.",
            "type": "object",
            "fields": [
                {
                    "name": "operations",
                    "desc": "Operations to be reported.\n\nTypically the service should report one operation per request.\nPutting multiple operations into a single request is allowed, but should\nbe used only when multiple operations are natually available at the time\nof the report.\n\nIf multiple operations are in a single request, the total request size\nshould be no larger than 1MB. See ReportResponse.report_errors for\npartial failure behavior.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Operation"
                },
                {
                    "name": "serviceConfigId",
                    "desc": "Specifies which version of service config should be used to process the\nrequest.\n\nIf unspecified or no matching version can be found, the\nlatest one will be used.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "ReleaseQuotaResponse",
            "desc": "Response message for the ReleaseQuota method.",
            "type": "object",
            "fields": [
                {
                    "name": "serviceConfigId",
                    "desc": "ID of the actual config used to process the request.",
                    "type": "string"
                },
                {
                    "name": "releaseErrors",
                    "desc": "Indicates the decision of the release.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "QuotaError"
                },
                {
                    "name": "quotaMetrics",
                    "desc": "Quota metrics to indicate the result of release. Depending on the\nrequest, one or more of the following metrics will be included:\n\n1. For rate quota, per quota group or per quota metric released amount\nwill be specified using the following delta metric:\n  \"serviceruntime.googleapis.com/api/consumer/quota_refund_count\"\n\n2. For allocation quota, per quota metric total usage will be specified\nusing the following gauge metric:\n  \"serviceruntime.googleapis.com/allocation/consumer/quota_used_count\"",
                    "collection": "array",
                    "type": "ref",
                    "refType": "MetricValueSet"
                },
                {
                    "name": "operationId",
                    "desc": "The same operation_id value used in the ReleaseQuotaRequest. Used for\nlogging and diagnostics purposes.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "AllocateQuotaResponse",
            "desc": "Response message for the AllocateQuota method.",
            "type": "object",
            "fields": [
                {
                    "name": "allocateErrors",
                    "desc": "Indicates the decision of the allocate.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "QuotaError"
                },
                {
                    "name": "quotaMetrics",
                    "desc": "Quota metrics to indicate the result of allocation. Depending on the\nrequest, one or more of the following metrics will be included:\n\n1. For rate quota, per quota group or per quota metric incremental usage\nwill be specified using the following delta metric:\n  \"serviceruntime.googleapis.com/api/consumer/quota_used_count\"\n\n2. For allocation quota, per quota metric total usage will be specified\nusing the following gauge metric:\n  \"serviceruntime.googleapis.com/allocation/consumer/quota_used_count\"\n\n3. For both rate quota and allocation quota, the quota limit reached\ncondition will be specified using the following boolean metric:\n  \"serviceruntime.googleapis.com/quota/exceeded\"",
                    "collection": "array",
                    "type": "ref",
                    "refType": "MetricValueSet"
                },
                {
                    "name": "operationId",
                    "desc": "The same operation_id value used in the AllocateQuotaRequest. Used for\nlogging and diagnostics purposes.",
                    "type": "string"
                },
                {
                    "name": "serviceConfigId",
                    "desc": "ID of the actual config used to process the request.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "ReleaseQuotaRequest",
            "desc": "Request message for the ReleaseQuota method.",
            "type": "object",
            "fields": [
                {
                    "name": "serviceConfigId",
                    "desc": "Specifies which version of service configuration should be used to process\nthe request. If unspecified or no matching version can be found, the latest\none will be used.",
                    "type": "string"
                },
                {
                    "name": "releaseOperation",
                    "desc": "Operation that describes the quota release.",
                    "type": "ref",
                    "refType": "QuotaOperation"
                }
            ]
        },
        {
            "name": "ReportError",
            "desc": "Represents the processing error of one `Operation` in the request.",
            "type": "object",
            "fields": [
                {
                    "name": "operationId",
                    "desc": "The Operation.operation_id value from the request.",
                    "type": "string"
                },
                {
                    "name": "status",
                    "desc": "Details of the error when processing the `Operation`.",
                    "type": "ref",
                    "refType": "Status"
                }
            ]
        },
        {
            "name": "ReportResponse",
            "desc": "Response message for the Report method.",
            "type": "object",
            "fields": [
                {
                    "name": "reportInfos",
                    "desc": "Quota usage for each quota release `Operation` request.\n\nFully or partially failed quota release request may or may not be present\nin `report_quota_info`. For example, a failed quota release request will\nhave the current quota usage info when precise quota library returns the\ninfo. A deadline exceeded quota request will not have quota usage info.\n\nIf there is no quota release request, report_quota_info will be empty.\n",
                    "collection": "array",
                    "type": "ref",
                    "refType": "ReportInfo"
                },
                {
                    "name": "serviceConfigId",
                    "desc": "The actual config id used to process the request.",
                    "type": "string"
                },
                {
                    "name": "reportErrors",
                    "desc": "Partial failures, one for each `Operation` in the request that failed\nprocessing. There are three possible combinations of the RPC status:\n\n1. The combination of a successful RPC status and an empty `report_errors`\n   list indicates a complete success where all `Operations` in the\n   request are processed successfully.\n2. The combination of a successful RPC status and a non-empty\n   `report_errors` list indicates a partial success where some\n   `Operations` in the request succeeded. Each\n   `Operation` that failed processing has a corresponding item\n   in this list.\n3. A failed RPC status indicates a general non-deterministic failure.\n   When this happens, it's impossible to know which of the\n   'Operations' in the request succeeded or failed.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "ReportError"
                }
            ]
        },
        {
            "name": "Status",
            "desc": "The `Status` type defines a logical error model that is suitable for different\nprogramming environments, including REST APIs and RPC APIs. It is used by\n[gRPC](https://github.com/grpc). The error model is designed to be:\n\n- Simple to use and understand for most users\n- Flexible enough to meet unexpected needs\n\n# Overview\n\nThe `Status` message contains three pieces of data: error code, error message,\nand error details. The error code should be an enum value of\ngoogle.rpc.Code, but it may accept additional error codes if needed.  The\nerror message should be a developer-facing English message that helps\ndevelopers *understand* and *resolve* the error. If a localized user-facing\nerror message is needed, put the localized message in the error details or\nlocalize it in the client. The optional error details may contain arbitrary\ninformation about the error. There is a predefined set of error detail types\nin the package `google.rpc` which can be used for common error conditions.\n\n# Language mapping\n\nThe `Status` message is the logical representation of the error model, but it\nis not necessarily the actual wire format. When the `Status` message is\nexposed in different client libraries and different wire protocols, it can be\nmapped differently. For example, it will likely be mapped to some exceptions\nin Java, but more likely mapped to some error codes in C.\n\n# Other uses\n\nThe error model and the `Status` message can be used in a variety of\nenvironments, either with or without APIs, to provide a\nconsistent developer experience across different environments.\n\nExample uses of this error model include:\n\n- Partial errors. If a service needs to return partial errors to the client,\n    it may embed the `Status` in the normal response to indicate the partial\n    errors.\n\n- Workflow errors. A typical workflow has multiple steps. Each step may\n    have a `Status` message for error reporting purpose.\n\n- Batch operations. If a client uses batch request and batch response, the\n    `Status` message should be used directly inside batch response, one for\n    each error sub-response.\n\n- Asynchronous operations. If an API call embeds asynchronous operation\n    results in its response, the status of those operations should be\n    represented directly using the `Status` message.\n\n- Logging. If some API errors are stored in logs, the message `Status` could\n    be used directly after any stripping needed for security/privacy reasons.",
            "type": "object",
            "fields": [
                {
                    "name": "details",
                    "desc": "A list of messages that carry the error details.  There will be a\ncommon set of message types for APIs to use.",
                    "collection": "array",
                    "collectionItem": {
                        "collection": "map",
                        "type": "any"
                    }
                },
                {
                    "name": "code",
                    "desc": "The status code, which should be an enum value of google.rpc.Code.",
                    "type": "int32"
                },
                {
                    "name": "message",
                    "desc": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "AuthorizationInfo",
            "desc": "Authorization information for the operation.",
            "type": "object",
            "fields": [
                {
                    "name": "resource",
                    "desc": "The resource being accessed, as a REST-style string. For example:\n\n    bigquery.googlapis.com/projects/PROJECTID/datasets/DATASETID",
                    "type": "string"
                },
                {
                    "name": "granted",
                    "desc": "Whether or not authorization for `resource` and `permission`\nwas granted.",
                    "type": "bool"
                },
                {
                    "name": "permission",
                    "desc": "The required IAM permission.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "RequestMetadata",
            "desc": "Metadata about the request.",
            "type": "object",
            "fields": [
                {
                    "name": "callerSuppliedUserAgent",
                    "desc": "The user agent of the caller.\nThis information is not authenticated and should be treated accordingly.\nFor example:\n\n+   `google-api-python-client/1.4.0`:\n    The request was made by the Google API client for Python.\n+   `Cloud SDK Command Line Tool apitools-client/1.0 gcloud/0.9.62`:\n    The request was made by the Google Cloud SDK CLI (gcloud).\n+   `AppEngine-Google; (+http://code.google.com/appengine; appid: s~my-project`:\n    The request was made from the `my-project` App Engine app.",
                    "type": "string"
                },
                {
                    "name": "callerIp",
                    "desc": "The IP address of the caller.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "MetricValueSet",
            "desc": "Represents a set of metric values in the same metric.\nEach metric value in the set should have a unique combination of start time,\nend time, and label values.",
            "type": "object",
            "fields": [
                {
                    "name": "metricName",
                    "desc": "The metric name defined in the service configuration.",
                    "type": "string"
                },
                {
                    "name": "metricValues",
                    "desc": "The values in this metric.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "MetricValue"
                }
            ]
        },
        {
            "name": "EndReconciliationRequest",
            "type": "object",
            "fields": [
                {
                    "name": "reconciliationOperation",
                    "desc": "Operation that describes the quota reconciliation.",
                    "type": "ref",
                    "refType": "QuotaOperation"
                },
                {
                    "name": "serviceConfigId",
                    "desc": "Specifies which version of service configuration should be used to process\nthe request. If unspecified or no matching version can be found, the latest\none will be used.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "Operation",
            "desc": "Represents information regarding an operation.",
            "type": "object",
            "fields": [
                {
                    "name": "quotaProperties",
                    "desc": "Represents the properties needed for quota check. Applicable only if this\noperation is for a quota check request.",
                    "type": "ref",
                    "refType": "QuotaProperties"
                },
                {
                    "name": "operationId",
                    "desc": "Identity of the operation. This must be unique within the scope of the\nservice that generated the operation. If the service calls\nCheck() and Report() on the same operation, the two calls should carry\nthe same id.\n\nUUID version 4 is recommended, though not required.\nIn scenarios where an operation is computed from existing information\nand an idempotent id is desirable for deduplication purpose, UUID version 5\nis recommended. See RFC 4122 for details.",
                    "type": "string"
                },
                {
                    "name": "operationName",
                    "desc": "Fully qualified name of the operation. Reserved for future use.",
                    "type": "string"
                },
                {
                    "name": "startTime",
                    "desc": "Required. Start time of the operation.",
                    "type": "datetime"
                },
                {
                    "name": "resourceContainer",
                    "desc": "The resource name of the parent of a resource in the resource hierarchy.\n\nThis can be in one of the following formats:\n    - “projects/\u003cproject-id or project-number\u003e”\n    - “folders/\u003cfolder-id\u003e”\n    - “organizations/\u003corganization-id\u003e”",
                    "type": "string"
                },
                {
                    "name": "logEntries",
                    "desc": "Represents information to be logged.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "LogEntry"
                },
                {
                    "name": "metricValueSets",
                    "desc": "Represents information about this operation. Each MetricValueSet\ncorresponds to a metric defined in the service configuration.\nThe data type used in the MetricValueSet must agree with\nthe data type specified in the metric definition.\n\nWithin a single operation, it is not allowed to have more than one\nMetricValue instances that have the same metric names and identical\nlabel value combinations. If a request has such duplicated MetricValue\ninstances, the entire request is rejected with\nan invalid argument error.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "MetricValueSet"
                },
                {
                    "name": "consumerId",
                    "desc": "Identity of the consumer who is using the service.\nThis field should be filled in for the operations initiated by a\nconsumer, but not for service-initiated operations that are\nnot related to a specific consumer.\n\nThis can be in one of the following formats:\n  project:\u003cproject_id\u003e,\n  project_number:\u003cproject_number\u003e,\n  api_key:\u003capi_key\u003e.",
                    "type": "string"
                },
                {
                    "name": "endTime",
                    "desc": "End time of the operation.\nRequired when the operation is used in ServiceController.Report,\nbut optional when the operation is used in ServiceController.Check.",
                    "type": "datetime"
                },
                {
                    "name": "importance",
                    "desc": "DO NOT USE. This is an experimental field.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "LOW",
                            "desc": "The API implementation may cache and aggregate the data.\nThe data may be lost when rare and unexpected system failures occur."
                        },
                        {
                            "name": "HIGH",
                            "desc": "The API implementation doesn't cache and aggregate the data.\nIf the method returns successfully, it's guaranteed that the data has\nbeen persisted in durable storage."
                        },
                        {
                            "name": "DEBUG",
                            "desc": "In addition to the behavior described in HIGH, DEBUG enables\nadditional validation logic that is only useful during the onboarding\nprocess. This is only available to Google internal services and\nthe service must be whitelisted by chemist-dev@google.com in order\nto use this level."
                        }
                    ]
                },
                {
                    "name": "labels",
                    "desc": "Labels describing the operation. Only the following labels are allowed:\n\n- Labels describing monitored resources as defined in\n  the service configuration.\n- Default labels of metric values. When specified, labels defined in the\n  metric value override these default.\n- The following labels defined by Google Cloud Platform:\n    - `cloud.googleapis.com/location` describing the location where the\n       operation happened,\n    - `servicecontrol.googleapis.com/user_agent` describing the user agent\n       of the API request,\n    - `servicecontrol.googleapis.com/service_agent` describing the service\n       used to handle the API request (e.g. ESP),\n    - `servicecontrol.googleapis.com/platform` describing the platform\n       where the API is served (e.g. GAE, GCE, GKE).",
                    "collection": "map",
                    "type": "string"
                },
                {
                    "name": "userLabels",
                    "desc": "User defined labels for the resource that this operation is associated\nwith.",
                    "collection": "map",
                    "type": "string"
                }
            ]
        },
        {
            "name": "LogEntry",
            "desc": "An individual log entry.",
            "type": "object",
            "fields": [
                {
                    "name": "protoPayload",
                    "desc": "The log entry payload, represented as a protocol buffer that is\nexpressed as a JSON object. You can only pass `protoPayload`\nvalues that belong to a set of approved types.",
                    "collection": "map",
                    "type": "any"
                },
                {
                    "name": "timestamp",
                    "desc": "The time the event described by the log entry occurred. If\nomitted, defaults to operation start time.",
                    "type": "datetime"
                },
                {
                    "name": "labels",
                    "desc": "A set of user-defined (key, value) data that provides additional\ninformation about the log entry.",
                    "collection": "map",
                    "type": "string"
                },
                {
                    "name": "severity",
                    "desc": "The severity of the log entry. The default value is\n`LogSeverity.DEFAULT`.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "DEFAULT",
                            "desc": "(0) The log entry has no assigned severity level."
                        },
                        {
                            "name": "DEBUG",
                            "desc": "(100) Debug or trace information."
                        },
                        {
                            "name": "INFO",
                            "desc": "(200) Routine information, such as ongoing status or performance."
                        },
                        {
                            "name": "NOTICE",
                            "desc": "(300) Normal but significant events, such as start up, shut down, or\na configuration change."
                        },
                        {
                            "name": "WARNING",
                            "desc": "(400) Warning events might cause problems."
                        },
                        {
                            "name": "ERROR",
                            "desc": "(500) Error events are likely to cause problems."
                        },
                        {
                            "name": "CRITICAL",
                            "desc": "(600) Critical events cause more severe problems or outages."
                        },
                        {
                            "name": "ALERT",
                            "desc": "(700) A person must take an action immediately."
                        },
                        {
                            "name": "EMERGENCY",
                            "desc": "(800) One or more systems are unusable."
                        }
                    ]
                },
                {
                    "name": "insertId",
                    "desc": "A unique ID for the log entry used for deduplication. If omitted,\nthe implementation will generate one based on operation_id.",
                    "type": "string"
                },
                {
                    "name": "name",
                    "desc": "Required. The log to which this log entry belongs. Examples: `\"syslog\"`,\n`\"book_log\"`.",
                    "type": "string"
                },
                {
                    "name": "structPayload",
                    "desc": "The log entry payload, represented as a structure that\nis expressed as a JSON object.",
                    "collection": "map",
                    "type": "any"
                },
                {
                    "name": "textPayload",
                    "desc": "The log entry payload, represented as a Unicode string (UTF-8).",
                    "type": "string"
                }
            ]
        },
        {
            "name": "CheckResponse",
            "desc": "Response message for the Check method.",
            "type": "object",
            "fields": [
                {
                    "name": "operationId",
                    "desc": "The same operation_id value used in the CheckRequest.\nUsed for logging and diagnostics purposes.",
                    "type": "string"
                },
                {
                    "name": "checkErrors",
                    "desc": "Indicate the decision of the check.\n\nIf no check errors are present, the service should process the operation.\nOtherwise the service should use the list of errors to determine the\nappropriate action.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "CheckError"
                },
                {
                    "name": "checkInfo",
                    "desc": "Feedback data returned from the server during processing a Check request.",
                    "type": "ref",
                    "refType": "CheckInfo"
                },
                {
                    "name": "quotaInfo",
                    "desc": "Quota information for the check request associated with this response.\n",
                    "type": "ref",
                    "refType": "QuotaInfo"
                },
                {
                    "name": "serviceConfigId",
                    "desc": "The actual config id used to process the request.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "ExplicitBuckets",
            "desc": "Describing buckets with arbitrary user-provided width.",
            "type": "object",
            "fields": [
                {
                    "name": "bounds",
                    "desc": "'bound' is a list of strictly increasing boundaries between\nbuckets. Note that a list of length N-1 defines N buckets because\nof fenceposting. See comments on `bucket_options` for details.\n\nThe i'th finite bucket covers the interval\n  [bound[i-1], bound[i])\nwhere i ranges from 1 to bound_size() - 1. Note that there are no\nfinite buckets at all if 'bound' only contains a single element; in\nthat special case the single bound defines the boundary between the\nunderflow and overflow buckets.\n\nbucket number                   lower bound    upper bound\n i == 0 (underflow)              -inf           bound[i]\n 0 \u003c i \u003c bound_size()            bound[i-1]     bound[i]\n i == bound_size() (overflow)    bound[i-1]     +inf",
                    "collection": "array",
                    "type": "float64"
                }
            ]
        },
        {
            "name": "QuotaInfo",
            "desc": "Contains the quota information for a quota check response.",
            "type": "object",
            "fields": [
                {
                    "name": "limitExceeded",
                    "desc": "Quota Metrics that have exceeded quota limits.\nFor QuotaGroup-based quota, this is QuotaGroup.name\nFor QuotaLimit-based quota, this is QuotaLimit.name\nSee: google.api.Quota\nDeprecated: Use quota_metrics to get per quota group limit exceeded status.",
                    "collection": "array",
                    "type": "string"
                },
                {
                    "name": "quotaConsumed",
                    "desc": "Map of quota group name to the actual number of tokens consumed. If the\nquota check was not successful, then this will not be populated due to no\nquota consumption.\nDeprecated: Use quota_metrics to get per quota group usage.",
                    "collection": "map",
                    "type": "int32"
                },
                {
                    "name": "quotaMetrics",
                    "desc": "Quota metrics to indicate the usage. Depending on the check request, one or\nmore of the following metrics will be included:\n\n1. For rate quota, per quota group or per quota metric incremental usage\nwill be specified using the following delta metric:\n  \"serviceruntime.googleapis.com/api/consumer/quota_used_count\"\n\n2. For allocation quota, per quota metric total usage will be specified\nusing the following gauge metric:\n  \"serviceruntime.googleapis.com/allocation/consumer/quota_used_count\"\n\n3. For both rate quota and allocation quota, the quota limit reached\ncondition will be specified using the following boolean metric:\n  \"serviceruntime.googleapis.com/quota/exceeded\"",
                    "collection": "array",
                    "type": "ref",
                    "refType": "MetricValueSet"
                }
            ]
        },
        {
            "name": "QuotaError",
            "type": "object",
            "fields": [
                {
                    "name": "description",
                    "desc": "Free-form text that provides details on the cause of the error.",
                    "type": "string"
                },
                {
                    "name": "code",
                    "desc": "Error code.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "UNSPECIFIED",
                            "desc": "This is never used."
                        },
                        {
                            "name": "RESOURCE_EXHAUSTED",
                            "desc": "Quota allocation failed.\nSame as google.rpc.Code.RESOURCE_EXHAUSTED."
                        },
                        {
                            "name": "PROJECT_SUSPENDED",
                            "desc": "Consumer project has been suspended."
                        },
                        {
                            "name": "SERVICE_NOT_ENABLED",
                            "desc": "Consumer has not enabled the service."
                        },
                        {
                            "name": "BILLING_NOT_ACTIVE",
                            "desc": "Consumer cannot access the service because billing is disabled."
                        },
                        {
                            "name": "PROJECT_DELETED",
                            "desc": "Consumer's project has been marked as deleted (soft deletion)."
                        },
                        {
                            "name": "PROJECT_INVALID",
                            "desc": "Consumer's project number or ID does not represent a valid project."
                        },
                        {
                            "name": "IP_ADDRESS_BLOCKED",
                            "desc": "IP address of the consumer is invalid for the specific consumer\nproject."
                        },
                        {
                            "name": "REFERER_BLOCKED",
                            "desc": "Referer address of the consumer request is invalid for the specific\nconsumer project."
                        },
                        {
                            "name": "CLIENT_APP_BLOCKED",
                            "desc": "Client application of the consumer request is invalid for the\nspecific consumer project."
                        },
                        {
                            "name": "API_KEY_INVALID",
                            "desc": "Specified API key is invalid."
                        },
                        {
                            "name": "API_KEY_EXPIRED",
                            "desc": "Specified API Key has expired."
                        },
                        {
                            "name": "SPATULA_HEADER_INVALID",
                            "desc": "Consumer's spatula header is invalid."
                        },
                        {
                            "name": "LOAS_ROLE_INVALID",
                            "desc": "The consumer's LOAS role is invalid."
                        },
                        {
                            "name": "NO_LOAS_PROJECT",
                            "desc": "The consumer's LOAS role has no associated project."
                        },
                        {
                            "name": "PROJECT_STATUS_UNVAILABLE",
                            "desc": "The backend server for looking up project id/number is unavailable."
                        },
                        {
                            "name": "SERVICE_STATUS_UNAVAILABLE",
                            "desc": "The backend server for checking service status is unavailable."
                        },
                        {
                            "name": "BILLING_STATUS_UNAVAILABLE",
                            "desc": "The backend server for checking billing status is unavailable."
                        },
                        {
                            "name": "QUOTA_SYSTEM_UNAVAILABLE",
                            "desc": "The backend server for checking quota limits is unavailable."
                        }
                    ]
                },
                {
                    "name": "subject",
                    "desc": "Subject to whom this error applies. See the specific enum for more details\non this field. For example, \"clientip:\u003cip address of client\u003e\" or\n\"project:\u003cGoogle developer project id\u003e\".",
                    "type": "string"
                }
            ]
        },
        {
            "name": "QuotaProperties",
            "desc": "Represents the properties needed for quota operations.\n\nUse the metric_value_sets field in Operation message to provide cost\noverride with metric_name in \u003cservice_name\u003e/quota/\u003cquota_group_name\u003e/cost\nformat. Overrides for unmatched quota groups will be ignored.\nCosts are expected to be \u003e= 0. Cost 0 will cause no quota check,\nbut still traffic restrictions will be enforced.",
            "type": "object",
            "fields": [
                {
                    "name": "quotaMode",
                    "desc": "Quota mode for this operation.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "ACQUIRE",
                            "desc": "Decreases available quota by the cost specified for the operation.\nIf cost is higher than available quota, operation fails and returns\nerror."
                        },
                        {
                            "name": "ACQUIRE_BEST_EFFORT",
                            "desc": "Decreases available quota by the cost specified for the operation.\nIf cost is higher than available quota, operation does not fail and\navailable quota goes down to zero but it returns error."
                        },
                        {
                            "name": "CHECK",
                            "desc": "Does not change any available quota. Only checks if there is enough\nquota.\nNo lock is placed on the checked tokens neither."
                        },
                        {
                            "name": "RELEASE",
                            "desc": "Increases available quota by the operation cost specified for the\noperation."
                        }
                    ]
                },
                {
                    "name": "limitByIds",
                    "desc": "LimitType IDs that should be used for checking quota. Key in this map\nshould be a valid LimitType string, and the value is the ID to be used. For\nexample, an entry \u003cUSER, 123\u003e will cause all user quota limits to use 123\nas the user ID. See google/api/quota.proto for the definition of LimitType.\nCLIENT_PROJECT: Not supported.\nUSER: Value of this entry will be used for enforcing user-level quota\n      limits. If none specified, caller IP passed in the\n      servicecontrol.googleapis.com/caller_ip label will be used instead.\n      If the server cannot resolve a value for this LimitType, an error\n      will be thrown. No validation will be performed on this ID.\nDeprecated: use servicecontrol.googleapis.com/user label to send user ID.",
                    "collection": "map",
                    "type": "string"
                }
            ]
        },
        {
            "name": "LinearBuckets",
            "desc": "Describing buckets with constant width.",
            "type": "object",
            "fields": [
                {
                    "name": "width",
                    "desc": "The i'th linear bucket covers the interval\n  [offset + (i-1) * width, offset + i * width)\nwhere i ranges from 1 to num_finite_buckets, inclusive.\nMust be strictly positive.",
                    "type": "float64"
                },
                {
                    "name": "offset",
                    "desc": "The i'th linear bucket covers the interval\n  [offset + (i-1) * width, offset + i * width)\nwhere i ranges from 1 to num_finite_buckets, inclusive.",
                    "type": "float64"
                },
                {
                    "name": "numFiniteBuckets",
                    "desc": "The number of finite buckets. With the underflow and overflow buckets,\nthe total number of buckets is `num_finite_buckets` + 2.\nSee comments on `bucket_options` for details.",
                    "type": "int32"
                }
            ]
        },
        {
            "name": "AllocateQuotaRequest",
            "desc": "Request message for the AllocateQuota method.",
            "type": "object",
            "fields": [
                {
                    "name": "serviceConfigId",
                    "desc": "Specifies which version of service configuration should be used to process\nthe request. If unspecified or no matching version can be found, the latest\none will be used.",
                    "type": "string"
                },
                {
                    "name": "allocateOperation",
                    "desc": "Operation that describes the quota allocation.",
                    "type": "ref",
                    "refType": "QuotaOperation"
                },
                {
                    "name": "allocationMode",
                    "desc": "Allocation mode for this operation.\nDeprecated: use QuotaMode inside the QuotaOperation.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "UNSPECIFIED"
                        },
                        {
                            "name": "NORMAL",
                            "desc": "Allocates quota for the amount specified in the service configuration or\nspecified using the quota_metrics. If the amount is higher than the\navailable quota, allocation error will be returned and no quota will be\nallocated."
                        },
                        {
                            "name": "BEST_EFFORT",
                            "desc": "Allocates quota for the amount specified in the service configuration or\nspecified using the quota_metrics. If the amount is higher than the\navailable quota, request does not fail but all available quota will be\nallocated."
                        },
                        {
                            "name": "CHECK_ONLY",
                            "desc": "Only checks if there is enough quota available and does not change the\navailable quota. No lock is placed on the available quota either."
                        }
                    ]
                }
            ]
        },
        {
            "name": "StartReconciliationRequest",
            "type": "object",
            "fields": [
                {
                    "name": "reconciliationOperation",
                    "desc": "Operation that describes the quota reconciliation.",
                    "type": "ref",
                    "refType": "QuotaOperation"
                },
                {
                    "name": "serviceConfigId",
                    "desc": "Specifies which version of service configuration should be used to process\nthe request. If unspecified or no matching version can be found, the latest\none will be used.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "QuotaOperation",
            "desc": "Represents information regarding a quota operation.",
            "type": "object",
            "fields": [
                {
                    "name": "consumerId",
                    "desc": "Identity of the consumer for whom this quota operation is being performed.\n\nThis can be in one of the following formats:\n  project:\u003cproject_id\u003e,\n  project_number:\u003cproject_number\u003e,\n  api_key:\u003capi_key\u003e.",
                    "type": "string"
                },
                {
                    "name": "operationId",
                    "desc": "Identity of the operation. This must be unique within the scope of the\nservice that generated the operation. If the service calls AllocateQuota\nand ReleaseQuota on the same operation, the two calls should carry the\nsame ID.\n\nUUID version 4 is recommended, though not required. In scenarios where an\noperation is computed from existing information and an idempotent id is\ndesirable for deduplication purpose, UUID version 5 is recommended. See\nRFC 4122 for details.",
                    "type": "string"
                },
                {
                    "name": "quotaMode",
                    "desc": "Quota mode for this operation.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "UNSPECIFIED"
                        },
                        {
                            "name": "NORMAL",
                            "desc": "For AllocateQuota request, allocates quota for the amount specified in\nthe service configuration or specified using the quota metrics. If the\namount is higher than the available quota, allocation error will be\nreturned and no quota will be allocated.\nFor ReleaseQuota request, this mode is supported only for precise quota\nlimits. In this case, this operation releases quota for the amount\nspecified in the service configuration or specified using the quota\nmetrics. If the release can make available quota negative, release error\nwill be returned and no quota will be released."
                        },
                        {
                            "name": "BEST_EFFORT",
                            "desc": "For AllocateQuota request, this mode is supported only for imprecise\nquota limits. In this case, the operation allocates quota for the amount\nspecified in the service configuration or specified using the quota\nmetrics. If the amount is higher than the available quota, request does\nnot fail but all available quota will be allocated.\nFor ReleaseQuota request, this mode is supported for both precise quota\nlimits and imprecise quota limits. In this case, this operation releases\nquota for the amount specified in the service configuration or specified\nusing the quota metrics. If the release can make available quota\nnegative, request does not fail but only the available quota will be\nreleased. After the ReleaseQuota request completes, the available quota\nwill be 0, and never goes to negative."
                        },
                        {
                            "name": "CHECK_ONLY",
                            "desc": "For AllocateQuota request, only checks if there is enough quota\navailable and does not change the available quota. No lock is placed on\nthe available quota either. Not supported for ReleaseQuota request."
                        }
                    ]
                },
                {
                    "name": "methodName",
                    "desc": "Fully qualified name of the API method for which this quota operation is\nrequested. This name is used for matching quota rules or metric rules and\nbilling status rules defined in service configuration. This field is not\nrequired if the quota operation is performed on non-API resources.\n\nExample of an RPC method name:\n    google.example.library.v1.LibraryService.CreateShelf",
                    "type": "string"
                },
                {
                    "name": "quotaMetrics",
                    "desc": "Represents information about this operation. Each MetricValueSet\ncorresponds to a metric defined in the service configuration.\nThe data type used in the MetricValueSet must agree with\nthe data type specified in the metric definition.\n\nWithin a single operation, it is not allowed to have more than one\nMetricValue instances that have the same metric names and identical\nlabel value combinations. If a request has such duplicated MetricValue\ninstances, the entire request is rejected with\nan invalid argument error.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "MetricValueSet"
                },
                {
                    "name": "labels",
                    "desc": "Labels describing the operation.",
                    "collection": "map",
                    "type": "string"
                }
            ]
        },
        {
            "name": "MetricValue",
            "desc": "Represents a single metric value.",
            "type": "object",
            "fields": [
                {
                    "name": "moneyValue",
                    "desc": "A money value.",
                    "type": "ref",
                    "refType": "Money"
                },
                {
                    "name": "endTime",
                    "desc": "The end of the time period over which this metric value's measurement\napplies.",
                    "type": "datetime"
                },
                {
                    "name": "startTime",
                    "desc": "The start of the time period over which this metric value's measurement\napplies. The time period has different semantics for different metric\ntypes (cumulative, delta, and gauge). See the metric definition\ndocumentation in the service configuration for details.",
                    "type": "datetime"
                },
                {
                    "name": "stringValue",
                    "desc": "A text string value.",
                    "type": "string"
                },
                {
                    "name": "labels",
                    "desc": "The labels describing the metric value.\nSee comments on google.api.servicecontrol.v1.Operation.labels for\nthe overriding relationship.",
                    "collection": "map",
                    "type": "string"
                },
                {
                    "name": "doubleValue",
                    "desc": "A double precision floating point value.",
                    "type": "float64"
                },
                {
                    "name": "int64Value",
                    "desc": "A signed 64-bit integer value.",
                    "type": "int64"
                },
                {
                    "name": "distributionValue",
                    "desc": "A distribution value.",
                    "type": "ref",
                    "refType": "Distribution"
                },
                {
                    "name": "boolValue",
                    "desc": "A boolean value.",
                    "type": "bool"
                }
            ]
        }
    ],
    "resources": [
        {
            "name": "services",
            "methods": [
                {
                    "name": "endReconciliation",
                    "desc": "Signals the quota controller that service ends the ongoing usage\nreconciliation.\n\nThis method requires the `servicemanagement.services.quota`\npermission on the specified service. For more information, see\n[Google Cloud IAM](https://cloud.google.com/iam).",
                    "path": "v1/services/{serviceName}:endReconciliation",
                    "httpMethod": "POST",
                    "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/servicecontrol"
                    ],
                    "pathParams": [
                        {
                            "name": "serviceName",
                            "desc": "Name of the service as specified in the service configuration. For example,\n`\"pubsub.googleapis.com\"`.\n\nSee google.api.Service for the definition of a service name.",
                            "required": true,
                            "type": "string"
                        }
                    ],
                    "request": "EndReconciliationRequest",
                    "response": "EndReconciliationResponse"
                },
                {
                    "name": "report",
                    "desc": "Reports operation results to Google Service Control, such as logs and\nmetrics. It should be called after an operation is completed.\n\nIf feasible, the client should aggregate reporting data for up to 5\nseconds to reduce API traffic. Limiting aggregation to 5 seconds is to\nreduce data loss during client crashes. Clients should carefully choose\nthe aggregation time window to avoid data loss risk more than 0.01%\nfor business and compliance reasons.\n\nNOTE: the `ReportRequest` has the size limit of 1MB.\n\nThis method requires the `servicemanagement.services.report` permission\non the specified service. For more information, see\n[Google Cloud IAM](https://cloud.google.com/iam).",
                    "path": "v1/services/{serviceName}:report",
                    "httpMethod": "POST",
                    "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/servicecontrol"
                    ],
                    "pathParams": [
                        {
                            "name": "serviceName",
                            "desc": "The service name as specified in its service configuration. For example,\n`\"pubsub.googleapis.com\"`.\n\nSee google.api.Service for the definition of a service name.",
                            "required": true,
                            "type": "string"
                        }
                    ],
                    "request": "ReportRequest",
                    "response": "ReportResponse"
                },
                {
                    "name": "allocateQuota",
                    "desc": "Attempts to allocate quota for the specified consumer. It should be called\nbefore the operation is executed.\n\nThis method requires the `servicemanagement.services.quota`\npermission on the specified service. For more information, see\n[Google Cloud IAM](https://cloud.google.com/iam).",
                    "path": "v1/services/{serviceName}:allocateQuota",
                    "httpMethod": "POST",
                    "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/servicecontrol"
                    ],
                    "pathParams": [
                        {
                            "name": "serviceName",
                            "desc": "Name of the service as specified in the service configuration. For example,\n`\"pubsub.googleapis.com\"`.\n\nSee google.api.Service for the definition of a service name.",
                            "required": true,
                            "type": "string"
                        }
                    ],
                    "request": "AllocateQuotaRequest",
                    "response": "AllocateQuotaResponse"
                },
                {
                    "name": "startReconciliation",
                    "desc": "Unlike rate quota, allocation quota does not get refilled periodically.\nSo, it is possible that the quota usage as seen by the service differs from\nwhat the One Platform considers the usage is. This is expected to happen\nonly rarely, but over time this can accumulate. Services can invoke\nStartReconciliation and EndReconciliation to correct this usage drift, as\ndescribed below:\n1. Service sends StartReconciliation with a timestamp in future for each\n   metric that needs to be reconciled. The timestamp being in future allows\n   to account for in-flight AllocateQuota and ReleaseQuota requests for the\n   same metric.\n2. One Platform records this timestamp and starts tracking subsequent\n   AllocateQuota and ReleaseQuota requests until EndReconciliation is\n   called.\n3. At or after the time specified in the StartReconciliation, service\n   sends EndReconciliation with the usage that needs to be reconciled to.\n4. One Platform adjusts its own record of usage for that metric to the\n   value specified in EndReconciliation by taking in to account any\n   allocation or release between StartReconciliation and EndReconciliation.\n\nSignals the quota controller that the service wants to perform a usage\nreconciliation as specified in the request.\n\nThis method requires the `servicemanagement.services.quota`\npermission on the specified service. For more information, see\n[Google Cloud IAM](https://cloud.google.com/iam).",
                    "path": "v1/services/{serviceName}:startReconciliation",
                    "httpMethod": "POST",
                    "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/servicecontrol"
                    ],
                    "pathParams": [
                        {
                            "name": "serviceName",
                            "desc": "Name of the service as specified in the service configuration. For example,\n`\"pubsub.googleapis.com\"`.\n\nSee google.api.Service for the definition of a service name.",
                            "required": true,
                            "type": "string"
                        }
                    ],
                    "request": "StartReconciliationRequest",
                    "response": "StartReconciliationResponse"
                },
                {
                    "name": "check",
                    "desc": "Checks an operation with Google Service Control to decide whether\nthe given operation should proceed. It should be called before the\noperation is executed.\n\nIf feasible, the client should cache the check results and reuse them for\n60 seconds. In case of server errors, the client can rely on the cached\nresults for longer time.\n\nNOTE: the `CheckRequest` has the size limit of 64KB.\n\nThis method requires the `servicemanagement.services.check` permission\non the specified service. For more information, see\n[Google Cloud IAM](https://cloud.google.com/iam).",
                    "path": "v1/services/{serviceName}:check",
                    "httpMethod": "POST",
                    "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/servicecontrol"
                    ],
                    "pathParams": [
                        {
                            "name": "serviceName",
                            "desc": "The service name as specified in its service configuration. For example,\n`\"pubsub.googleapis.com\"`.\n\nSee google.api.Service for the definition of a service name.",
                            "required": true,
                            "type": "string"
                        }
                    ],
                    "request": "CheckRequest",
                    "response": "CheckResponse"
                },
                {
                    "name": "releaseQuota",
                    "desc": "Releases previously allocated quota done through AllocateQuota method.\n\nThis method requires the `servicemanagement.services.quota`\npermission on the specified service. For more information, see\n[Google Cloud IAM](https://cloud.google.com/iam).",
                    "path": "v1/services/{serviceName}:releaseQuota",
                    "httpMethod": "POST",
                    "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/servicecontrol"
                    ],
                    "pathParams": [
                        {
                            "name": "serviceName",
                            "desc": "Name of the service as specified in the service configuration. For example,\n`\"pubsub.googleapis.com\"`.\n\nSee google.api.Service for the definition of a service name.",
                            "required": true,
                            "type": "string"
                        }
                    ],
                    "request": "ReleaseQuotaRequest",
                    "response": "ReleaseQuotaResponse"
                }
            ]
        }
    ]
}