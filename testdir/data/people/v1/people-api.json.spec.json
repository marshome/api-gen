{
    "kind": "discovery#restDescription",
    "etag": "",
    "discoveryVersion": "v1",
    "id": "people:v1",
    "name": "people",
    "version": "v1",
    "title": "Google People API",
    "description": "Provides access to information about profiles and contacts.",
    "documentationLink": "https://developers.google.com/people/",
    "protocol": "rest",
    "rootUrl": "https://people.googleapis.com/",
    "auth": {
        "oauth2": [
            "https://www.googleapis.com/auth/contacts.readonly",
            "https://www.googleapis.com/auth/contacts",
            "https://www.googleapis.com/auth/user.phonenumbers.read",
            "https://www.googleapis.com/auth/userinfo.email",
            "https://www.googleapis.com/auth/userinfo.profile",
            "https://www.googleapis.com/auth/user.emails.read",
            "https://www.googleapis.com/auth/user.addresses.read",
            "https://www.googleapis.com/auth/user.birthday.read",
            "https://www.googleapis.com/auth/plus.login"
        ]
    },
    "parameters": [
        {
            "name": "fields",
            "desc": "Selector specifying which fields to include in a partial response.",
            "type": "string"
        },
        {
            "name": "uploadType",
            "desc": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
            "type": "string"
        },
        {
            "name": "$.xgafv",
            "desc": "V1 error format.",
            "type": "string",
            "enum": [
                {
                    "name": "1",
                    "desc": "v1 error format"
                },
                {
                    "name": "2",
                    "desc": "v2 error format"
                }
            ]
        },
        {
            "name": "access_token",
            "desc": "OAuth access token.",
            "type": "string"
        },
        {
            "name": "key",
            "desc": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
            "type": "string"
        },
        {
            "name": "oauth_token",
            "desc": "OAuth 2.0 token for the current user.",
            "type": "string"
        },
        {
            "name": "upload_protocol",
            "desc": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
            "type": "string"
        },
        {
            "name": "prettyPrint",
            "desc": "Returns response with indentations and line breaks.",
            "type": "bool",
            "default": "true"
        },
        {
            "name": "quotaUser",
            "desc": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
            "type": "string"
        },
        {
            "name": "alt",
            "desc": "Data format for response.",
            "type": "string",
            "default": "json",
            "enum": [
                {
                    "name": "json",
                    "desc": "Responses with Content-Type of application/json"
                },
                {
                    "name": "media",
                    "desc": "Media download with context-dependent Content-Type"
                },
                {
                    "name": "proto",
                    "desc": "Responses with Content-Type of application/x-protobuf"
                }
            ]
        },
        {
            "name": "pp",
            "desc": "Pretty-print response.",
            "type": "bool",
            "default": "true"
        },
        {
            "name": "bearer_token",
            "desc": "OAuth bearer token.",
            "type": "string"
        },
        {
            "name": "callback",
            "desc": "JSONP",
            "type": "string"
        }
    ],
    "schemas": [
        {
            "name": "Address",
            "desc": "A person's physical address. May be a P.O. box or street address. All fields\nare optional.",
            "type": "object",
            "fields": [
                {
                    "name": "formattedValue",
                    "desc": "The unstructured value of the address. If this is not set by the user it\nwill be automatically constructed from structured values.",
                    "type": "string"
                },
                {
                    "name": "extendedAddress",
                    "desc": "The extended address of the address; for example, the apartment number.",
                    "type": "string"
                },
                {
                    "name": "poBox",
                    "desc": "The P.O. box of the address.",
                    "type": "string"
                },
                {
                    "name": "postalCode",
                    "desc": "The postal code of the address.",
                    "type": "string"
                },
                {
                    "name": "streetAddress",
                    "desc": "The street address.",
                    "type": "string"
                },
                {
                    "name": "countryCode",
                    "desc": "The [ISO 3166-1 alpha-2](http://www.iso.org/iso/country_codes.htm) country\ncode of the address.",
                    "type": "string"
                },
                {
                    "name": "formattedType",
                    "desc": "The read-only type of the address translated and formatted in the viewer's\naccount locale or the `Accept-Language` HTTP header locale.",
                    "type": "string"
                },
                {
                    "name": "city",
                    "desc": "The city of the address.",
                    "type": "string"
                },
                {
                    "name": "country",
                    "desc": "The country of the address.",
                    "type": "string"
                },
                {
                    "name": "type",
                    "desc": "The type of the address. The type can be custom or predefined.\nPossible values include, but are not limited to, the following:\n\n* `home`\n* `work`\n* `other`",
                    "type": "string"
                },
                {
                    "name": "region",
                    "desc": "The region of the address; for example, the state or province.",
                    "type": "string"
                },
                {
                    "name": "metadata",
                    "desc": "Metadata about the address.",
                    "type": "ref",
                    "refType": "FieldMetadata"
                }
            ]
        },
        {
            "name": "ProfileMetadata",
            "desc": "The read-only metadata about a profile.",
            "type": "object",
            "fields": [
                {
                    "name": "objectType",
                    "desc": "The profile object type.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "OBJECT_TYPE_UNSPECIFIED",
                            "desc": "Unspecified."
                        },
                        {
                            "name": "PERSON",
                            "desc": "Person."
                        },
                        {
                            "name": "PAGE",
                            "desc": "[Google+ Page.](http://www.google.com/+/brands/)"
                        }
                    ]
                }
            ]
        },
        {
            "name": "Url",
            "desc": "A person's associated URLs.",
            "type": "object",
            "fields": [
                {
                    "name": "value",
                    "desc": "The URL.",
                    "type": "string"
                },
                {
                    "name": "formattedType",
                    "desc": "The read-only type of the URL translated and formatted in the viewer's\naccount locale or the `Accept-Language` HTTP header locale.",
                    "type": "string"
                },
                {
                    "name": "metadata",
                    "desc": "Metadata about the URL.",
                    "type": "ref",
                    "refType": "FieldMetadata"
                },
                {
                    "name": "type",
                    "desc": "The type of the URL. The type can be custom or predefined.\nPossible values include, but are not limited to, the following:\n\n* `home`\n* `work`\n* `blog`\n* `profile`\n* `homePage`\n* `ftp`\n* `reservations`\n* `appInstallPage`: website for a Google+ application.\n* `other`",
                    "type": "string"
                }
            ]
        },
        {
            "name": "EmailAddress",
            "desc": "A person's email address.",
            "type": "object",
            "fields": [
                {
                    "name": "formattedType",
                    "desc": "The read-only type of the email address translated and formatted in the\nviewer's account locale or the `Accept-Language` HTTP header locale.",
                    "type": "string"
                },
                {
                    "name": "displayName",
                    "desc": "The display name of the email.",
                    "type": "string"
                },
                {
                    "name": "metadata",
                    "desc": "Metadata about the email address.",
                    "type": "ref",
                    "refType": "FieldMetadata"
                },
                {
                    "name": "type",
                    "desc": "The type of the email address. The type can be custom or predefined.\nPossible values include, but are not limited to, the following:\n\n* `home`\n* `work`\n* `other`",
                    "type": "string"
                },
                {
                    "name": "value",
                    "desc": "The email address.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "PersonResponse",
            "desc": "The response for a single person",
            "type": "object",
            "fields": [
                {
                    "name": "httpStatusCode",
                    "desc": "[HTTP 1.1 status code](http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html).",
                    "type": "int32"
                },
                {
                    "name": "requestedResourceName",
                    "desc": "The original requested resource name. May be different than the resource\nname on the returned person.\n\nThe resource name can change when adding or removing fields that link a\ncontact and profile such as a verified email, verified phone number, or a\nprofile URL.",
                    "type": "string"
                },
                {
                    "name": "person",
                    "desc": "The person.",
                    "type": "ref",
                    "refType": "Person"
                }
            ]
        },
        {
            "name": "CoverPhoto",
            "desc": "A person's read-only cover photo. A large image shown on the person's\nprofile page that represents who they are or what they care about.",
            "type": "object",
            "fields": [
                {
                    "name": "url",
                    "desc": "The URL of the cover photo.",
                    "type": "string"
                },
                {
                    "name": "metadata",
                    "desc": "Metadata about the cover photo.",
                    "type": "ref",
                    "refType": "FieldMetadata"
                },
                {
                    "name": "default",
                    "desc": "True if the cover photo is the default cover photo;\nfalse if the cover photo is a user-provided cover photo.",
                    "type": "bool"
                }
            ]
        },
        {
            "name": "Skill",
            "desc": "A skill that the person has.",
            "type": "object",
            "fields": [
                {
                    "name": "metadata",
                    "desc": "Metadata about the skill.",
                    "type": "ref",
                    "refType": "FieldMetadata"
                },
                {
                    "name": "value",
                    "desc": "The skill; for example, `underwater basket weaving`.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "Organization",
            "desc": "A person's past or current organization. Overlapping date ranges are\npermitted.",
            "type": "object",
            "fields": [
                {
                    "name": "phoneticName",
                    "desc": "The phonetic name of the organization.",
                    "type": "string"
                },
                {
                    "name": "endDate",
                    "desc": "The end date when the person left the organization.",
                    "type": "ref",
                    "refType": "Date"
                },
                {
                    "name": "title",
                    "desc": "The person's job title at the organization.",
                    "type": "string"
                },
                {
                    "name": "current",
                    "desc": "True if the organization is the person's current organization;\nfalse if the organization is a past organization.",
                    "type": "bool"
                },
                {
                    "name": "startDate",
                    "desc": "The start date when the person joined the organization.",
                    "type": "ref",
                    "refType": "Date"
                },
                {
                    "name": "jobDescription",
                    "desc": "The person's job description at the organization.",
                    "type": "string"
                },
                {
                    "name": "metadata",
                    "desc": "Metadata about the organization.",
                    "type": "ref",
                    "refType": "FieldMetadata"
                },
                {
                    "name": "formattedType",
                    "desc": "The read-only type of the organization translated and formatted in the\nviewer's account locale or the `Accept-Language` HTTP header locale.",
                    "type": "string"
                },
                {
                    "name": "department",
                    "desc": "The person's department at the organization.",
                    "type": "string"
                },
                {
                    "name": "type",
                    "desc": "The type of the organization. The type can be custom or predefined.\nPossible values include, but are not limited to, the following:\n\n* `work`\n* `school`",
                    "type": "string"
                },
                {
                    "name": "symbol",
                    "desc": "The symbol associated with the organization; for example, a stock ticker\nsymbol, abbreviation, or acronym.",
                    "type": "string"
                },
                {
                    "name": "name",
                    "desc": "The name of the organization.",
                    "type": "string"
                },
                {
                    "name": "location",
                    "desc": "The location of the organization office the person works at.",
                    "type": "string"
                },
                {
                    "name": "domain",
                    "desc": "The domain name associated with the organization; for example, `google.com`.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "Person",
            "desc": "Information about a person merged from various data sources such as the\nauthenticated user's contacts and profile data. Fields other than IDs,\nmetadata, and group memberships are user-edited.\n\nMost fields can have multiple items. The items in a field have no guaranteed\norder, but each non-empty field is guaranteed to have exactly one field with\n`metadata.primary` set to true.\nNEXT_ID: 31",
            "type": "object",
            "fields": [
                {
                    "name": "interests",
                    "desc": "The person's interests.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Interest"
                },
                {
                    "name": "skills",
                    "desc": "The person's skills.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Skill"
                },
                {
                    "name": "addresses",
                    "desc": "The person's street addresses.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Address"
                },
                {
                    "name": "phoneNumbers",
                    "desc": "The person's phone numbers.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "PhoneNumber"
                },
                {
                    "name": "relationshipInterests",
                    "desc": "The kind of relationship the person is looking for.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "RelationshipInterest"
                },
                {
                    "name": "nicknames",
                    "desc": "The person's nicknames.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Nickname"
                },
                {
                    "name": "occupations",
                    "desc": "The person's occupations.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Occupation"
                },
                {
                    "name": "genders",
                    "desc": "The person's genders.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Gender"
                },
                {
                    "name": "ageRanges",
                    "desc": "The person's age ranges.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "AgeRangeType"
                },
                {
                    "name": "braggingRights",
                    "desc": "The person's bragging rights.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "BraggingRights"
                },
                {
                    "name": "photos",
                    "desc": "The person's photos.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Photo"
                },
                {
                    "name": "taglines",
                    "desc": "The person's taglines.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Tagline"
                },
                {
                    "name": "memberships",
                    "desc": "The person's group memberships.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Membership"
                },
                {
                    "name": "metadata",
                    "desc": "Metadata about the person.",
                    "type": "ref",
                    "refType": "PersonMetadata"
                },
                {
                    "name": "residences",
                    "desc": "The person's residences.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Residence"
                },
                {
                    "name": "relationshipStatuses",
                    "desc": "The person's relationship statuses.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "RelationshipStatus"
                },
                {
                    "name": "imClients",
                    "desc": "The person's instant messaging clients.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "ImClient"
                },
                {
                    "name": "locales",
                    "desc": "The person's locale preferences.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Locale"
                },
                {
                    "name": "names",
                    "desc": "The person's names.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Name"
                },
                {
                    "name": "emailAddresses",
                    "desc": "The person's email addresses.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "EmailAddress"
                },
                {
                    "name": "ageRange",
                    "desc": "DEPRECATED(Please read person.age_ranges instead). The person's age range.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "AGE_RANGE_UNSPECIFIED",
                            "desc": "Unspecified."
                        },
                        {
                            "name": "LESS_THAN_EIGHTEEN",
                            "desc": "Younger than eighteen."
                        },
                        {
                            "name": "EIGHTEEN_TO_TWENTY",
                            "desc": "Between eighteen and twenty."
                        },
                        {
                            "name": "TWENTY_ONE_OR_OLDER",
                            "desc": "Twenty-one and older."
                        }
                    ]
                },
                {
                    "name": "birthdays",
                    "desc": "The person's birthdays.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Birthday"
                },
                {
                    "name": "relations",
                    "desc": "The person's relations.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Relation"
                },
                {
                    "name": "etag",
                    "desc": "The [HTTP entity tag](https://en.wikipedia.org/wiki/HTTP_ETag) of the\nresource. Used for web cache validation.",
                    "type": "string"
                },
                {
                    "name": "biographies",
                    "desc": "The person's biographies.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Biography"
                },
                {
                    "name": "coverPhotos",
                    "desc": "The person's cover photos.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "CoverPhoto"
                },
                {
                    "name": "organizations",
                    "desc": "The person's past or current organizations.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Organization"
                },
                {
                    "name": "resourceName",
                    "desc": "The resource name for the person, assigned by the server. An ASCII string\nwith a max length of 27 characters. Always starts with `people/`.",
                    "type": "string"
                },
                {
                    "name": "events",
                    "desc": "The person's events.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Event"
                },
                {
                    "name": "urls",
                    "desc": "The person's associated URLs.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Url"
                }
            ]
        },
        {
            "name": "Photo",
            "desc": "A person's read-only photo. A picture shown next to the person's name to\nhelp others recognize the person.",
            "type": "object",
            "fields": [
                {
                    "name": "url",
                    "desc": "The URL of the photo.",
                    "type": "string"
                },
                {
                    "name": "metadata",
                    "desc": "Metadata about the photo.",
                    "type": "ref",
                    "refType": "FieldMetadata"
                }
            ]
        },
        {
            "name": "PhoneNumber",
            "desc": "A person's phone number.",
            "type": "object",
            "fields": [
                {
                    "name": "formattedType",
                    "desc": "The read-only type of the phone number translated and formatted in the\nviewer's account locale or the the `Accept-Language` HTTP header locale.",
                    "type": "string"
                },
                {
                    "name": "canonicalForm",
                    "desc": "The read-only canonicalized [ITU-T E.164](https://law.resource.org/pub/us/cfr/ibr/004/itu-t.E.164.1.2008.pdf)\nform of the phone number.",
                    "type": "string"
                },
                {
                    "name": "metadata",
                    "desc": "Metadata about the phone number.",
                    "type": "ref",
                    "refType": "FieldMetadata"
                },
                {
                    "name": "type",
                    "desc": "The type of the phone number. The type can be custom or predefined.\nPossible values include, but are not limited to, the following:\n\n* `home`\n* `work`\n* `mobile`\n* `homeFax`\n* `workFax`\n* `otherFax`\n* `pager`\n* `workMobile`\n* `workPager`\n* `main`\n* `googleVoice`\n* `other`",
                    "type": "string"
                },
                {
                    "name": "value",
                    "desc": "The phone number.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "Gender",
            "desc": "A person's gender.",
            "type": "object",
            "fields": [
                {
                    "name": "value",
                    "desc": "The gender for the person. The gender can be custom or predefined.\nPossible values include, but are not limited to, the\nfollowing:\n\n* `male`\n* `female`\n* `other`\n* `unknown`",
                    "type": "string"
                },
                {
                    "name": "formattedValue",
                    "desc": "The read-only value of the gender translated and formatted in the viewer's\naccount locale or the `Accept-Language` HTTP header locale.",
                    "type": "string"
                },
                {
                    "name": "metadata",
                    "desc": "Metadata about the gender.",
                    "type": "ref",
                    "refType": "FieldMetadata"
                }
            ]
        },
        {
            "name": "BraggingRights",
            "desc": "A person's bragging rights.",
            "type": "object",
            "fields": [
                {
                    "name": "value",
                    "desc": "The bragging rights; for example, `climbed mount everest`.",
                    "type": "string"
                },
                {
                    "name": "metadata",
                    "desc": "Metadata about the bragging rights.",
                    "type": "ref",
                    "refType": "FieldMetadata"
                }
            ]
        },
        {
            "name": "AgeRangeType",
            "desc": "A person's age range.",
            "type": "object",
            "fields": [
                {
                    "name": "metadata",
                    "desc": "Metadata about the age range.",
                    "type": "ref",
                    "refType": "FieldMetadata"
                },
                {
                    "name": "ageRange",
                    "desc": "The age range.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "AGE_RANGE_UNSPECIFIED",
                            "desc": "Unspecified."
                        },
                        {
                            "name": "LESS_THAN_EIGHTEEN",
                            "desc": "Younger than eighteen."
                        },
                        {
                            "name": "EIGHTEEN_TO_TWENTY",
                            "desc": "Between eighteen and twenty."
                        },
                        {
                            "name": "TWENTY_ONE_OR_OLDER",
                            "desc": "Twenty-one and older."
                        }
                    ]
                }
            ]
        },
        {
            "name": "Occupation",
            "desc": "A person's occupation.",
            "type": "object",
            "fields": [
                {
                    "name": "metadata",
                    "desc": "Metadata about the occupation.",
                    "type": "ref",
                    "refType": "FieldMetadata"
                },
                {
                    "name": "value",
                    "desc": "The occupation; for example, `carpenter`.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "Biography",
            "desc": "A person's short biography.",
            "type": "object",
            "fields": [
                {
                    "name": "contentType",
                    "desc": "The content type of the biography.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "CONTENT_TYPE_UNSPECIFIED",
                            "desc": "Unspecified."
                        },
                        {
                            "name": "TEXT_PLAIN",
                            "desc": "Plain text."
                        },
                        {
                            "name": "TEXT_HTML",
                            "desc": "HTML text."
                        }
                    ]
                },
                {
                    "name": "metadata",
                    "desc": "Metadata about the biography.",
                    "type": "ref",
                    "refType": "FieldMetadata"
                },
                {
                    "name": "value",
                    "desc": "The short biography.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "FieldMetadata",
            "desc": "Metadata about a field.",
            "type": "object",
            "fields": [
                {
                    "name": "verified",
                    "desc": "True if the field is verified; false if the field is unverified. A\nverified field is typically a name, email address, phone number, or\nwebsite that has been confirmed to be owned by the person.",
                    "type": "bool"
                },
                {
                    "name": "primary",
                    "desc": "True if the field is the primary field; false if the field is a secondary\nfield.",
                    "type": "bool"
                },
                {
                    "name": "source",
                    "desc": "The source of the field.",
                    "type": "ref",
                    "refType": "Source"
                }
            ]
        },
        {
            "name": "RelationshipInterest",
            "desc": "A person's read-only relationship interest .",
            "type": "object",
            "fields": [
                {
                    "name": "formattedValue",
                    "desc": "The value of the relationship interest translated and formatted in the\nviewer's account locale or the locale specified in the Accept-Language\nHTTP header.",
                    "type": "string"
                },
                {
                    "name": "metadata",
                    "desc": "Metadata about the relationship interest.",
                    "type": "ref",
                    "refType": "FieldMetadata"
                },
                {
                    "name": "value",
                    "desc": "The kind of relationship the person is looking for. The value can be custom\nor predefined. Possible values include, but are not limited to, the\nfollowing values:\n\n* `friend`\n* `date`\n* `relationship`\n* `networking`",
                    "type": "string"
                }
            ]
        },
        {
            "name": "Birthday",
            "desc": "A person's birthday. At least one of the `date` and `text` fields are\nspecified. The `date` and `text` fields typically represent the same\ndate, but are not guaranteed to.",
            "type": "object",
            "fields": [
                {
                    "name": "metadata",
                    "desc": "Metadata about the birthday.",
                    "type": "ref",
                    "refType": "FieldMetadata"
                },
                {
                    "name": "text",
                    "desc": "A free-form string representing the user's birthday.",
                    "type": "string"
                },
                {
                    "name": "date",
                    "desc": "The date of the birthday.",
                    "type": "ref",
                    "refType": "Date"
                }
            ]
        },
        {
            "name": "Interest",
            "desc": "One of the person's interests.",
            "type": "object",
            "fields": [
                {
                    "name": "value",
                    "desc": "The interest; for example, `stargazing`.",
                    "type": "string"
                },
                {
                    "name": "metadata",
                    "desc": "Metadata about the interest.",
                    "type": "ref",
                    "refType": "FieldMetadata"
                }
            ]
        },
        {
            "name": "Membership",
            "desc": "A person's read-only membership in a group.",
            "type": "object",
            "fields": [
                {
                    "name": "metadata",
                    "desc": "Metadata about the membership.",
                    "type": "ref",
                    "refType": "FieldMetadata"
                },
                {
                    "name": "contactGroupMembership",
                    "desc": "The contact group membership.",
                    "type": "ref",
                    "refType": "ContactGroupMembership"
                },
                {
                    "name": "domainMembership",
                    "desc": "The domain membership.",
                    "type": "ref",
                    "refType": "DomainMembership"
                }
            ]
        },
        {
            "name": "Source",
            "desc": "The source of a field.",
            "type": "object",
            "fields": [
                {
                    "name": "type",
                    "desc": "The source type.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "SOURCE_TYPE_UNSPECIFIED",
                            "desc": "Unspecified."
                        },
                        {
                            "name": "ACCOUNT",
                            "desc": "[Google Account](https://accounts.google.com)."
                        },
                        {
                            "name": "PROFILE",
                            "desc": "[Google profile](https://profiles.google.com). You can view the\nprofile at https://profiles.google.com/\u003cid\u003e where \u003cid\u003e is the source\nid."
                        },
                        {
                            "name": "DOMAIN_PROFILE",
                            "desc": "[Google Apps domain profile](https://admin.google.com)."
                        },
                        {
                            "name": "CONTACT",
                            "desc": "[Google contact](https://contacts.google.com). You can view the\ncontact at https://contact.google.com/\u003cid\u003e where \u003cid\u003e is the source\nid."
                        }
                    ]
                },
                {
                    "name": "etag",
                    "desc": "The [HTTP entity tag](https://en.wikipedia.org/wiki/HTTP_ETag) of the\nsource. Used for web cache validation. Only populated in\nperson.metadata.sources.",
                    "type": "string"
                },
                {
                    "name": "id",
                    "desc": "The unique identifier within the source type generated by the server.",
                    "type": "string"
                },
                {
                    "name": "profileMetadata",
                    "desc": "Metadata about a source of type PROFILE.",
                    "type": "ref",
                    "refType": "ProfileMetadata"
                }
            ]
        },
        {
            "name": "GetPeopleResponse",
            "type": "object",
            "fields": [
                {
                    "name": "responses",
                    "desc": "The response for each requested resource name.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "PersonResponse"
                }
            ]
        },
        {
            "name": "ListConnectionsResponse",
            "type": "object",
            "fields": [
                {
                    "name": "nextPageToken",
                    "desc": "The token that can be used to retrieve the next page of results.",
                    "type": "string"
                },
                {
                    "name": "connections",
                    "desc": "The list of people that the requestor is connected to.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Person"
                },
                {
                    "name": "nextSyncToken",
                    "desc": "The token that can be used to retrieve changes since the last request.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "Residence",
            "desc": "A person's past or current residence.",
            "type": "object",
            "fields": [
                {
                    "name": "metadata",
                    "desc": "Metadata about the residence.",
                    "type": "ref",
                    "refType": "FieldMetadata"
                },
                {
                    "name": "current",
                    "desc": "True if the residence is the person's current residence;\nfalse if the residence is a past residence.",
                    "type": "bool"
                },
                {
                    "name": "value",
                    "desc": "The address of the residence.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "PersonMetadata",
            "desc": "The read-only metadata about a person.",
            "type": "object",
            "fields": [
                {
                    "name": "objectType",
                    "desc": "DEPRECATED(Please read person.metadata.sources.profile_metadata instead).\nThe type of the person object.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "OBJECT_TYPE_UNSPECIFIED",
                            "desc": "Unspecified."
                        },
                        {
                            "name": "PERSON",
                            "desc": "Person."
                        },
                        {
                            "name": "PAGE",
                            "desc": "[Google+ Page.](http://www.google.com/+/brands/)"
                        }
                    ]
                },
                {
                    "name": "linkedPeopleResourceNames",
                    "desc": "Resource names of people linked to this resource.",
                    "collection": "array",
                    "type": "string"
                },
                {
                    "name": "sources",
                    "desc": "The sources of data for the person.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Source"
                },
                {
                    "name": "previousResourceNames",
                    "desc": "Any former resource names this person has had. Populated only for\n[`connections.list`](/people/api/rest/v1/people.connections/list) requests\nthat include a sync token.\n\nThe resource name may change when adding or removing fields that link a\ncontact and profile such as a verified email, verified phone number, or\nprofile URL.",
                    "collection": "array",
                    "type": "string"
                },
                {
                    "name": "deleted",
                    "desc": "True if the person resource has been deleted. Populated only for\n[`connections.list`](/people/api/rest/v1/people.connections/list) requests\nthat include a sync token.",
                    "type": "bool"
                }
            ]
        },
        {
            "name": "RelationshipStatus",
            "desc": "A person's read-only relationship status.",
            "type": "object",
            "fields": [
                {
                    "name": "formattedValue",
                    "desc": "The read-only value of the relationship status translated and formatted in\nthe viewer's account locale or the `Accept-Language` HTTP header locale.",
                    "type": "string"
                },
                {
                    "name": "metadata",
                    "desc": "Metadata about the relationship status.",
                    "type": "ref",
                    "refType": "FieldMetadata"
                },
                {
                    "name": "value",
                    "desc": "The relationship status. The value can be custom or predefined.\nPossible values include, but are not limited to, the following:\n\n* `single`\n* `inARelationship`\n* `engaged`\n* `married`\n* `itsComplicated`\n* `openRelationship`\n* `widowed`\n* `inDomesticPartnership`\n* `inCivilUnion`",
                    "type": "string"
                }
            ]
        },
        {
            "name": "Date",
            "desc": "Represents a whole calendar date, for example a date of birth. The time\nof day and time zone are either specified elsewhere or are not\nsignificant. The date is relative to the\n[Proleptic Gregorian Calendar](https://en.wikipedia.org/wiki/Proleptic_Gregorian_calendar).\nThe day may be 0 to represent a year and month where the day is not\nsignificant. The year may be 0 to represent a month and day independent\nof year; for example, anniversary date.",
            "type": "object",
            "fields": [
                {
                    "name": "day",
                    "desc": "Day of month. Must be from 1 to 31 and valid for the year and month, or 0\nif specifying a year/month where the day is not significant.",
                    "type": "int32"
                },
                {
                    "name": "month",
                    "desc": "Month of year. Must be from 1 to 12.",
                    "type": "int32"
                },
                {
                    "name": "year",
                    "desc": "Year of date. Must be from 1 to 9999, or 0 if specifying a date without\na year.",
                    "type": "int32"
                }
            ]
        },
        {
            "name": "Name",
            "desc": "A person's name. If the name is a mononym, the family name is empty.",
            "type": "object",
            "fields": [
                {
                    "name": "displayNameLastFirst",
                    "desc": "The read-only display name with the last name first formatted according to\nthe locale specified by the viewer's account or the\n\u003ccode\u003eAccept-Language\u003c/code\u003e HTTP header.",
                    "type": "string"
                },
                {
                    "name": "phoneticGivenName",
                    "desc": "The given name spelled as it sounds.",
                    "type": "string"
                },
                {
                    "name": "phoneticFamilyName",
                    "desc": "The family name spelled as it sounds.",
                    "type": "string"
                },
                {
                    "name": "phoneticMiddleName",
                    "desc": "The middle name(s) spelled as they sound.",
                    "type": "string"
                },
                {
                    "name": "metadata",
                    "desc": "Metadata about the name.",
                    "type": "ref",
                    "refType": "FieldMetadata"
                },
                {
                    "name": "phoneticFullName",
                    "desc": "The full name spelled as it sounds.",
                    "type": "string"
                },
                {
                    "name": "honorificSuffix",
                    "desc": "The honorific suffixes, such as `Jr.`",
                    "type": "string"
                },
                {
                    "name": "honorificPrefix",
                    "desc": "The honorific prefixes, such as `Mrs.` or `Dr.`",
                    "type": "string"
                },
                {
                    "name": "phoneticHonorificSuffix",
                    "desc": "The honorific suffixes spelled as they sound.",
                    "type": "string"
                },
                {
                    "name": "middleName",
                    "desc": "The middle name(s).",
                    "type": "string"
                },
                {
                    "name": "phoneticHonorificPrefix",
                    "desc": "The honorific prefixes spelled as they sound.",
                    "type": "string"
                },
                {
                    "name": "givenName",
                    "desc": "The given name.",
                    "type": "string"
                },
                {
                    "name": "familyName",
                    "desc": "The family name.",
                    "type": "string"
                },
                {
                    "name": "displayName",
                    "desc": "The read-only display name formatted according to the locale specified by\nthe viewer's account or the \u003ccode\u003eAccept-Language\u003c/code\u003e HTTP header.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "Relation",
            "desc": "A person's relation to another person.",
            "type": "object",
            "fields": [
                {
                    "name": "person",
                    "desc": "The name of the other person this relation refers to.",
                    "type": "string"
                },
                {
                    "name": "formattedType",
                    "desc": "The type of the relation translated and formatted in the viewer's account\nlocale or the locale specified in the Accept-Language HTTP header.",
                    "type": "string"
                },
                {
                    "name": "metadata",
                    "desc": "Metadata about the relation.",
                    "type": "ref",
                    "refType": "FieldMetadata"
                },
                {
                    "name": "type",
                    "desc": "The person's relation to the other person. The type can be custom or predefined.\nPossible values include, but are not limited to, the following values:\n\n* `spouse`\n* `child`\n* `mother`\n* `father`\n* `parent`\n* `brother`\n* `sister`\n* `friend`\n* `relative`\n* `domesticPartner`\n* `manager`\n* `assistant`\n* `referredBy`\n* `partner`",
                    "type": "string"
                }
            ]
        },
        {
            "name": "DomainMembership",
            "desc": "A Google Apps Domain membership.",
            "type": "object",
            "fields": [
                {
                    "name": "inViewerDomain",
                    "desc": "True if the person is in the viewer's Google Apps domain.",
                    "type": "bool"
                }
            ]
        },
        {
            "name": "Locale",
            "desc": "A person's locale preference.",
            "type": "object",
            "fields": [
                {
                    "name": "metadata",
                    "desc": "Metadata about the locale.",
                    "type": "ref",
                    "refType": "FieldMetadata"
                },
                {
                    "name": "value",
                    "desc": "The well-formed [IETF BCP 47](https://tools.ietf.org/html/bcp47)\nlanguage tag representing the locale.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "ContactGroupMembership",
            "desc": "A Google contact group membership.",
            "type": "object",
            "fields": [
                {
                    "name": "contactGroupId",
                    "desc": "The contact group ID for the contact group membership. The contact group\nID can be custom or predefined. Possible values include, but are not\nlimited to, the following:\n\n*  `myContacts`\n*  `starred`\n*  A numerical ID for user-created groups.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "ImClient",
            "desc": "A person's instant messaging client.",
            "type": "object",
            "fields": [
                {
                    "name": "formattedProtocol",
                    "desc": "The read-only protocol of the IM client formatted in the viewer's account\nlocale or the `Accept-Language` HTTP header locale.",
                    "type": "string"
                },
                {
                    "name": "formattedType",
                    "desc": "The read-only type of the IM client translated and formatted in the\nviewer's account locale or the `Accept-Language` HTTP header locale.",
                    "type": "string"
                },
                {
                    "name": "metadata",
                    "desc": "Metadata about the IM client.",
                    "type": "ref",
                    "refType": "FieldMetadata"
                },
                {
                    "name": "type",
                    "desc": "The type of the IM client. The type can be custom or predefined.\nPossible values include, but are not limited to, the following:\n\n* `home`\n* `work`\n* `other`",
                    "type": "string"
                },
                {
                    "name": "protocol",
                    "desc": "The protocol of the IM client. The protocol can be custom or predefined.\nPossible values include, but are not limited to, the following:\n\n* `aim`\n* `msn`\n* `yahoo`\n* `skype`\n* `qq`\n* `googleTalk`\n* `icq`\n* `jabber`\n* `netMeeting`",
                    "type": "string"
                },
                {
                    "name": "username",
                    "desc": "The user name used in the IM client.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "Nickname",
            "desc": "A person's nickname.",
            "type": "object",
            "fields": [
                {
                    "name": "metadata",
                    "desc": "Metadata about the nickname.",
                    "type": "ref",
                    "refType": "FieldMetadata"
                },
                {
                    "name": "type",
                    "desc": "The type of the nickname.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "DEFAULT",
                            "desc": "Generic nickname."
                        },
                        {
                            "name": "MAIDEN_NAME",
                            "desc": "Maiden name or birth family name. Used when the person's family name has\nchanged as a result of marriage."
                        },
                        {
                            "name": "INITIALS",
                            "desc": "Initials."
                        },
                        {
                            "name": "GPLUS",
                            "desc": "Google+ profile nickname."
                        },
                        {
                            "name": "OTHER_NAME",
                            "desc": "A professional affiliation or other name; for example, `Dr. Smith.`"
                        }
                    ]
                },
                {
                    "name": "value",
                    "desc": "The nickname.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "Tagline",
            "desc": "A read-only brief one-line description of the person.",
            "type": "object",
            "fields": [
                {
                    "name": "metadata",
                    "desc": "Metadata about the tagline.",
                    "type": "ref",
                    "refType": "FieldMetadata"
                },
                {
                    "name": "value",
                    "desc": "The tagline.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "Event",
            "desc": "An event related to the person.",
            "type": "object",
            "fields": [
                {
                    "name": "formattedType",
                    "desc": "The read-only type of the event translated and formatted in the\nviewer's account locale or the `Accept-Language` HTTP header locale.",
                    "type": "string"
                },
                {
                    "name": "metadata",
                    "desc": "Metadata about the event.",
                    "type": "ref",
                    "refType": "FieldMetadata"
                },
                {
                    "name": "type",
                    "desc": "The type of the event. The type can be custom or predefined.\nPossible values include, but are not limited to, the following:\n\n* `anniversary`\n* `other`",
                    "type": "string"
                },
                {
                    "name": "date",
                    "desc": "The date of the event.",
                    "type": "ref",
                    "refType": "Date"
                }
            ]
        }
    ],
    "resources": [
        {
            "name": "people",
            "methods": [
                {
                    "name": "getBatchGet",
                    "desc": "Provides information about a list of specific people by specifying a list\nof requested resource names. Use `people/me` to indicate the authenticated\nuser.",
                    "path": "v1/people:batchGet",
                    "httpMethod": "GET",
                    "scopes": [
                        "https://www.googleapis.com/auth/contacts",
                        "https://www.googleapis.com/auth/contacts.readonly",
                        "https://www.googleapis.com/auth/plus.login",
                        "https://www.googleapis.com/auth/user.addresses.read",
                        "https://www.googleapis.com/auth/user.birthday.read",
                        "https://www.googleapis.com/auth/user.emails.read",
                        "https://www.googleapis.com/auth/user.phonenumbers.read",
                        "https://www.googleapis.com/auth/userinfo.email",
                        "https://www.googleapis.com/auth/userinfo.profile"
                    ],
                    "optinalQueryParams": [
                        {
                            "name": "requestMask.includeField",
                            "desc": "Comma-separated list of fields to be included in the response. Omitting\nthis field will include all fields except for connections.list requests,\nwhich have a default mask that includes common fields like metadata, name,\nphoto, and profile url.\nEach path should start with `person.`: for example, `person.names` or\n`person.photos`.",
                            "type": "string"
                        },
                        {
                            "name": "resourceNames",
                            "desc": "The resource name, such as one returned by\n[`people.connections.list`](/people/api/rest/v1/people.connections/list),\nof one of the people to provide information about. You can include this\nparameter up to 50 times in one request.",
                            "type": "string"
                        }
                    ],
                    "response": "GetPeopleResponse"
                },
                {
                    "name": "get",
                    "desc": "Provides information about a person resource for a resource name. Use\n`people/me` to indicate the authenticated user.",
                    "path": "v1/{+resourceName}",
                    "httpMethod": "GET",
                    "scopes": [
                        "https://www.googleapis.com/auth/contacts",
                        "https://www.googleapis.com/auth/contacts.readonly",
                        "https://www.googleapis.com/auth/plus.login",
                        "https://www.googleapis.com/auth/user.addresses.read",
                        "https://www.googleapis.com/auth/user.birthday.read",
                        "https://www.googleapis.com/auth/user.emails.read",
                        "https://www.googleapis.com/auth/user.phonenumbers.read",
                        "https://www.googleapis.com/auth/userinfo.email",
                        "https://www.googleapis.com/auth/userinfo.profile"
                    ],
                    "pathParams": [
                        {
                            "name": "resourceName",
                            "desc": "The resource name of the person to provide information about.\n\n- To get information about the authenticated user, specify `people/me`.\n- To get information about any user, specify the resource name that\n  identifies the user, such as the resource names returned by\n  [`people.connections.list`](/people/api/rest/v1/people.connections/list).",
                            "required": true,
                            "type": "string",
                            "pattern": "^people/[^/]+$"
                        }
                    ],
                    "optinalQueryParams": [
                        {
                            "name": "requestMask.includeField",
                            "desc": "Comma-separated list of fields to be included in the response. Omitting\nthis field will include all fields except for connections.list requests,\nwhich have a default mask that includes common fields like metadata, name,\nphoto, and profile url.\nEach path should start with `person.`: for example, `person.names` or\n`person.photos`.",
                            "type": "string"
                        }
                    ],
                    "response": "Person"
                }
            ],
            "resources": [
                {
                    "name": "connections",
                    "methods": [
                        {
                            "name": "list",
                            "desc": "Provides a list of the authenticated user's contacts merged with any\nlinked profiles.",
                            "path": "v1/{+resourceName}/connections",
                            "httpMethod": "GET",
                            "scopes": [
                                "https://www.googleapis.com/auth/contacts",
                                "https://www.googleapis.com/auth/contacts.readonly"
                            ],
                            "pathParams": [
                                {
                                    "name": "resourceName",
                                    "desc": "The resource name to return connections for. Only `people/me` is valid.",
                                    "required": true,
                                    "type": "string",
                                    "pattern": "^people/[^/]+$"
                                }
                            ],
                            "optinalQueryParams": [
                                {
                                    "name": "sortOrder",
                                    "desc": "The order in which the connections should be sorted. Defaults to\n`LAST_MODIFIED_ASCENDING`.",
                                    "type": "string",
                                    "enum": [
                                        {
                                            "name": "LAST_MODIFIED_ASCENDING"
                                        },
                                        {
                                            "name": "FIRST_NAME_ASCENDING"
                                        },
                                        {
                                            "name": "LAST_NAME_ASCENDING"
                                        }
                                    ]
                                },
                                {
                                    "name": "requestSyncToken",
                                    "desc": "Whether the response should include a sync token, which can be used to get\nall changes since the last request.",
                                    "type": "bool"
                                },
                                {
                                    "name": "pageToken",
                                    "desc": "The token of the page to be returned.",
                                    "type": "string"
                                },
                                {
                                    "name": "pageSize",
                                    "desc": "The number of connections to include in the response. Valid values are\nbetween 1 and 500, inclusive. Defaults to 100.",
                                    "type": "int32"
                                },
                                {
                                    "name": "requestMask.includeField",
                                    "desc": "Comma-separated list of fields to be included in the response. Omitting\nthis field will include all fields except for connections.list requests,\nwhich have a default mask that includes common fields like metadata, name,\nphoto, and profile url.\nEach path should start with `person.`: for example, `person.names` or\n`person.photos`.",
                                    "type": "string"
                                },
                                {
                                    "name": "syncToken",
                                    "desc": "A sync token, returned by a previous call to `people.connections.list`.\nOnly resources changed since the sync token was created will be returned.",
                                    "type": "string"
                                }
                            ],
                            "response": "ListConnectionsResponse"
                        }
                    ]
                }
            ]
        }
    ]
}