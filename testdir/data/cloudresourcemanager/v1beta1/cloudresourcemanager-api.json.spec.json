{
    "kind": "discovery#restDescription",
    "etag": "",
    "discoveryVersion": "v1",
    "id": "cloudresourcemanager:v1beta1",
    "name": "cloudresourcemanager",
    "version": "v1beta1",
    "title": "Google Cloud Resource Manager API",
    "description": "The Google Cloud Resource Manager API provides methods for creating, reading, and updating project metadata.",
    "documentationLink": "https://cloud.google.com/resource-manager",
    "protocol": "rest",
    "rootUrl": "https://cloudresourcemanager.googleapis.com/",
    "auth": {
        "oauth2": [
            "https://www.googleapis.com/auth/cloud-platform.read-only",
            "https://www.googleapis.com/auth/cloud-platform"
        ]
    },
    "parameters": [
        {
            "name": "callback",
            "desc": "JSONP",
            "type": "string"
        },
        {
            "name": "access_token",
            "desc": "OAuth access token.",
            "type": "string"
        },
        {
            "name": "oauth_token",
            "desc": "OAuth 2.0 token for the current user.",
            "type": "string"
        },
        {
            "name": "bearer_token",
            "desc": "OAuth bearer token.",
            "type": "string"
        },
        {
            "name": "upload_protocol",
            "desc": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
            "type": "string"
        },
        {
            "name": "$.xgafv",
            "desc": "V1 error format.",
            "type": "string",
            "enum": [
                {
                    "name": "1",
                    "desc": "v1 error format"
                },
                {
                    "name": "2",
                    "desc": "v2 error format"
                }
            ]
        },
        {
            "name": "uploadType",
            "desc": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
            "type": "string"
        },
        {
            "name": "alt",
            "desc": "Data format for response.",
            "type": "string",
            "default": "json",
            "enum": [
                {
                    "name": "json",
                    "desc": "Responses with Content-Type of application/json"
                },
                {
                    "name": "media",
                    "desc": "Media download with context-dependent Content-Type"
                },
                {
                    "name": "proto",
                    "desc": "Responses with Content-Type of application/x-protobuf"
                }
            ]
        },
        {
            "name": "key",
            "desc": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
            "type": "string"
        },
        {
            "name": "quotaUser",
            "desc": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
            "type": "string"
        },
        {
            "name": "pp",
            "desc": "Pretty-print response.",
            "type": "bool",
            "default": "true"
        },
        {
            "name": "prettyPrint",
            "desc": "Returns response with indentations and line breaks.",
            "type": "bool",
            "default": "true"
        },
        {
            "name": "fields",
            "desc": "Selector specifying which fields to include in a partial response.",
            "type": "string"
        }
    ],
    "schemas": [
        {
            "name": "Policy",
            "desc": "Defines an Identity and Access Management (IAM) policy. It is used to\nspecify access control policies for Cloud Platform resources.\n\n\nA `Policy` consists of a list of `bindings`. A `Binding` binds a list of\n`members` to a `role`, where the members can be user accounts, Google groups,\nGoogle domains, and service accounts. A `role` is a named list of permissions\ndefined by IAM.\n\n**Example**\n\n    {\n      \"bindings\": [\n        {\n          \"role\": \"roles/owner\",\n          \"members\": [\n            \"user:mike@example.com\",\n            \"group:admins@example.com\",\n            \"domain:google.com\",\n            \"serviceAccount:my-other-app@appspot.gserviceaccount.com\",\n          ]\n        },\n        {\n          \"role\": \"roles/viewer\",\n          \"members\": [\"user:sean@example.com\"]\n        }\n      ]\n    }\n\nFor a description of IAM and its features, see the\n[IAM developer's guide](https://cloud.google.com/iam).",
            "type": "object",
            "fields": [
                {
                    "name": "auditConfigs",
                    "desc": "Specifies cloud audit logging configuration for this policy.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "AuditConfig"
                },
                {
                    "name": "bindings",
                    "desc": "Associates a list of `members` to a `role`.\nMultiple `bindings` must not be specified for the same `role`.\n`bindings` with no members will result in an error.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Binding"
                },
                {
                    "name": "etag",
                    "desc": "`etag` is used for optimistic concurrency control as a way to help\nprevent simultaneous updates of a policy from overwriting each other.\nIt is strongly suggested that systems make use of the `etag` in the\nread-modify-write cycle to perform policy updates in order to avoid race\nconditions: An `etag` is returned in the response to `getIamPolicy`, and\nsystems are expected to put that etag in the request to `setIamPolicy` to\nensure that their change will be applied to the same version of the policy.\n\nIf no `etag` is provided in the call to `setIamPolicy`, then the existing\npolicy is overwritten blindly.",
                    "type": "byte"
                },
                {
                    "name": "version",
                    "desc": "Version of the `Policy`. The default version is 0.",
                    "type": "int32"
                }
            ]
        },
        {
            "name": "FolderOperationError",
            "desc": "A classification of the Folder Operation error.",
            "type": "object",
            "fields": [
                {
                    "name": "errorMessageId",
                    "desc": "The type of operation error experienced.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "ERROR_TYPE_UNSPECIFIED",
                            "desc": "The error type was unrecognized or unspecified."
                        },
                        {
                            "name": "FOLDER_HEIGHT_VIOLATION",
                            "desc": "The attempted action would violate the max folder depth constraint."
                        },
                        {
                            "name": "MAX_CHILD_FOLDERS_VIOLATION",
                            "desc": "The attempted action would violate the max child folders constraint."
                        },
                        {
                            "name": "FOLDER_NAME_UNIQUENESS_VIOLATION",
                            "desc": "The attempted action would violate the locally-unique folder\ndisplay_name constraint."
                        },
                        {
                            "name": "RESOURCE_DELETED",
                            "desc": "The resource being moved has been deleted."
                        },
                        {
                            "name": "PARENT_DELETED",
                            "desc": "The resource a folder was being added to has been deleted."
                        },
                        {
                            "name": "CYCLE_INTRODUCED_ERROR",
                            "desc": "The attempted action would introduce cycle in resource path."
                        },
                        {
                            "name": "FOLDER_ALREADY_BEING_MOVED",
                            "desc": "The attempted action would move a folder that is already being moved."
                        },
                        {
                            "name": "FOLDER_TO_DELETE_NON_EMPTY",
                            "desc": "The folder the caller is trying to delete contains active resources."
                        }
                    ]
                }
            ]
        },
        {
            "name": "Ancestor",
            "desc": "Identifying information for a single ancestor of a project.",
            "type": "object",
            "fields": [
                {
                    "name": "resourceId",
                    "desc": "Resource id of the ancestor.",
                    "type": "ref",
                    "refType": "ResourceId"
                }
            ]
        },
        {
            "name": "SetIamPolicyRequest",
            "desc": "Request message for `SetIamPolicy` method.",
            "type": "object",
            "fields": [
                {
                    "name": "updateMask",
                    "desc": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only\nthe fields in the mask will be modified. If no mask is provided, a default\nmask is used:\npaths: \"bindings, etag\"\nThis field is only used by Cloud IAM.",
                    "type": "string"
                },
                {
                    "name": "policy",
                    "desc": "REQUIRED: The complete policy to be applied to the `resource`. The size of\nthe policy is limited to a few 10s of KB. An empty policy is a\nvalid policy but certain Cloud Platform services (such as Projects)\nmight reject them.",
                    "type": "ref",
                    "refType": "Policy"
                }
            ]
        },
        {
            "name": "Binding",
            "desc": "Associates `members` with a `role`.",
            "type": "object",
            "fields": [
                {
                    "name": "role",
                    "desc": "Role that is assigned to `members`.\nFor example, `roles/viewer`, `roles/editor`, or `roles/owner`.\nRequired",
                    "type": "string"
                },
                {
                    "name": "members",
                    "desc": "Specifies the identities requesting access for a Cloud Platform resource.\n`members` can have the following values:\n\n* `allUsers`: A special identifier that represents anyone who is\n   on the internet; with or without a Google account.\n\n* `allAuthenticatedUsers`: A special identifier that represents anyone\n   who is authenticated with a Google account or a service account.\n\n* `user:{emailid}`: An email address that represents a specific Google\n   account. For example, `alice@gmail.com` or `joe@example.com`.\n\n\n* `serviceAccount:{emailid}`: An email address that represents a service\n   account. For example, `my-other-app@appspot.gserviceaccount.com`.\n\n* `group:{emailid}`: An email address that represents a Google group.\n   For example, `admins@example.com`.\n\n* `domain:{domain}`: A Google Apps domain name that represents all the\n   users of that domain. For example, `google.com` or `example.com`.\n\n",
                    "collection": "array",
                    "type": "string"
                }
            ]
        },
        {
            "name": "UndeleteProjectRequest",
            "desc": "The request sent to the UndeleteProject\nmethod.",
            "type": "object"
        },
        {
            "name": "ProjectCreationStatus",
            "desc": "A status object which is used as the `metadata` field for the Operation\nreturned by CreateProject. It provides insight for when significant phases of\nProject creation have completed.",
            "type": "object",
            "fields": [
                {
                    "name": "gettable",
                    "desc": "True if the project can be retrieved using GetProject. No other operations\non the project are guaranteed to work until the project creation is\ncomplete.",
                    "type": "bool"
                },
                {
                    "name": "ready",
                    "desc": "True if the project creation process is complete.",
                    "type": "bool"
                },
                {
                    "name": "createTime",
                    "desc": "Creation time of the project creation workflow.",
                    "type": "datetime"
                }
            ]
        },
        {
            "name": "TestIamPermissionsRequest",
            "desc": "Request message for `TestIamPermissions` method.",
            "type": "object",
            "fields": [
                {
                    "name": "permissions",
                    "desc": "The set of permissions to check for the `resource`. Permissions with\nwildcards (such as '*' or 'storage.*') are not allowed. For more\ninformation see\n[IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
                    "collection": "array",
                    "type": "string"
                }
            ]
        },
        {
            "name": "TestIamPermissionsResponse",
            "desc": "Response message for `TestIamPermissions` method.",
            "type": "object",
            "fields": [
                {
                    "name": "permissions",
                    "desc": "A subset of `TestPermissionsRequest.permissions` that the caller is\nallowed.",
                    "collection": "array",
                    "type": "string"
                }
            ]
        },
        {
            "name": "AuditLogConfig",
            "desc": "Provides the configuration for logging a type of permissions.\nExample:\n\n    {\n      \"audit_log_configs\": [\n        {\n          \"log_type\": \"DATA_READ\",\n          \"exempted_members\": [\n            \"user:foo@gmail.com\"\n          ]\n        },\n        {\n          \"log_type\": \"DATA_WRITE\",\n        }\n      ]\n    }\n\nThis enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting\nfoo@gmail.com from DATA_READ logging.",
            "type": "object",
            "fields": [
                {
                    "name": "exemptedMembers",
                    "desc": "Specifies the identities that do not cause logging for this type of\npermission.\nFollows the same format of Binding.members.",
                    "collection": "array",
                    "type": "string"
                },
                {
                    "name": "logType",
                    "desc": "The log type that this config enables.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "LOG_TYPE_UNSPECIFIED",
                            "desc": "Default case. Should never be this."
                        },
                        {
                            "name": "ADMIN_READ",
                            "desc": "Admin reads. Example: CloudIAM getIamPolicy"
                        },
                        {
                            "name": "DATA_WRITE",
                            "desc": "Data writes. Example: CloudSQL Users create"
                        },
                        {
                            "name": "DATA_READ",
                            "desc": "Data reads. Example: CloudSQL Users list"
                        }
                    ]
                }
            ]
        },
        {
            "name": "GetAncestryRequest",
            "desc": "The request sent to the\nGetAncestry\nmethod.",
            "type": "object"
        },
        {
            "name": "FolderOperation",
            "desc": "Metadata describing a long running folder operation",
            "type": "object",
            "fields": [
                {
                    "name": "operationType",
                    "desc": "The type of this operation.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "OPERATION_TYPE_UNSPECIFIED",
                            "desc": "Operation type not specified."
                        },
                        {
                            "name": "CREATE",
                            "desc": "A create folder operation."
                        },
                        {
                            "name": "MOVE",
                            "desc": "A move folder operation."
                        }
                    ]
                },
                {
                    "name": "displayName",
                    "desc": "The display name of the folder.",
                    "type": "string"
                },
                {
                    "name": "sourceParent",
                    "desc": "The resource name of the folder's parent.\nOnly applicable when the operation_type is MOVE.",
                    "type": "string"
                },
                {
                    "name": "destinationParent",
                    "desc": "The resource name of the folder or organization we are either creating\nthe folder under or moving the folder to.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "ResourceId",
            "desc": "A container to reference an id for any resource type. A `resource` in Google\nCloud Platform is a generic term for something you (a developer) may want to\ninteract with through one of our API's. Some examples are an App Engine app,\na Compute Engine instance, a Cloud SQL database, and so on.",
            "type": "object",
            "fields": [
                {
                    "name": "type",
                    "desc": "Required field representing the resource type this id is for.\nAt present, the valid types are \"project\" and \"organization\".",
                    "type": "string"
                },
                {
                    "name": "id",
                    "desc": "Required field for the type-specific id. This should correspond to the id\nused in the type-specific API's.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "ListOrganizationsResponse",
            "desc": "The response returned from the `ListOrganizations` method.",
            "type": "object",
            "fields": [
                {
                    "name": "nextPageToken",
                    "desc": "A pagination token to be used to retrieve the next page of results. If the\nresult is too large to fit within the page size specified in the request,\nthis field will be set with a token that can be used to fetch the next page\nof results. If this field is empty, it indicates that this response\ncontains the last page of results.",
                    "type": "string"
                },
                {
                    "name": "organizations",
                    "desc": "The list of Organizations that matched the list query, possibly paginated.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Organization"
                }
            ]
        },
        {
            "name": "Empty",
            "desc": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
            "type": "object"
        },
        {
            "name": "Organization",
            "desc": "The root node in the resource hierarchy to which a particular entity's\n(e.g., company) resources belong.",
            "type": "object",
            "fields": [
                {
                    "name": "organizationId",
                    "desc": "An immutable id for the Organization that is assigned on creation. This\nshould be omitted when creating a new Organization.\nThis field is read-only.\nThis field is deprecated and will be removed in v1. Use name instead.",
                    "type": "string"
                },
                {
                    "name": "lifecycleState",
                    "desc": "The organization's current lifecycle state. Assigned by the server.\n@OutputOnly",
                    "type": "string",
                    "enum": [
                        {
                            "name": "LIFECYCLE_STATE_UNSPECIFIED",
                            "desc": "Unspecified state.  This is only useful for distinguishing unset values."
                        },
                        {
                            "name": "ACTIVE",
                            "desc": "The normal and active state."
                        },
                        {
                            "name": "DELETE_REQUESTED",
                            "desc": "The organization has been marked for deletion by the user."
                        }
                    ]
                },
                {
                    "name": "displayName",
                    "desc": "A friendly string to be used to refer to the Organization in the UI.\nAssigned by the server, set to the primary domain of the G Suite\ncustomer that owns the organization.\n@OutputOnly",
                    "type": "string"
                },
                {
                    "name": "creationTime",
                    "desc": "Timestamp when the Organization was created. Assigned by the server.\n@OutputOnly",
                    "type": "datetime"
                },
                {
                    "name": "owner",
                    "desc": "The owner of this Organization. The owner should be specified on\ncreation. Once set, it cannot be changed.\nThis field is required.",
                    "type": "ref",
                    "refType": "OrganizationOwner"
                },
                {
                    "name": "name",
                    "desc": "Output Only. The resource name of the organization. This is the\norganization's relative path in the API. Its format is\n\"organizations/[organization_id]\". For example, \"organizations/1234\".",
                    "type": "string"
                }
            ]
        },
        {
            "name": "GetAncestryResponse",
            "desc": "Response from the GetAncestry method.",
            "type": "object",
            "fields": [
                {
                    "name": "ancestor",
                    "desc": "Ancestors are ordered from bottom to top of the resource hierarchy. The\nfirst ancestor is the project itself, followed by the project's parent,\netc.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Ancestor"
                }
            ]
        },
        {
            "name": "OrganizationOwner",
            "desc": "The entity that owns an Organization. The lifetime of the Organization and\nall of its descendants are bound to the `OrganizationOwner`. If the\n`OrganizationOwner` is deleted, the Organization and all its descendants will\nbe deleted.",
            "type": "object",
            "fields": [
                {
                    "name": "directoryCustomerId",
                    "desc": "The Google for Work customer id used in the Directory API.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "Project",
            "desc": "A Project is a high-level Google Cloud Platform entity.  It is a\ncontainer for ACLs, APIs, App Engine Apps, VMs, and other\nGoogle Cloud Platform resources.",
            "type": "object",
            "fields": [
                {
                    "name": "projectId",
                    "desc": "The unique, user-assigned ID of the Project.\nIt must be 6 to 30 lowercase letters, digits, or hyphens.\nIt must start with a letter.\nTrailing hyphens are prohibited.\n\nExample: \u003ccode\u003etokyo-rain-123\u003c/code\u003e\nRead-only after creation.",
                    "type": "string"
                },
                {
                    "name": "lifecycleState",
                    "desc": "The Project lifecycle state.\n\nRead-only.",
                    "type": "string",
                    "enum": [
                        {
                            "name": "LIFECYCLE_STATE_UNSPECIFIED",
                            "desc": "Unspecified state.  This is only used/useful for distinguishing\nunset values."
                        },
                        {
                            "name": "ACTIVE",
                            "desc": "The normal and active state."
                        },
                        {
                            "name": "DELETE_REQUESTED",
                            "desc": "The project has been marked for deletion by the user\n(by invoking DeleteProject)\nor by the system (Google Cloud Platform).\nThis can generally be reversed by invoking UndeleteProject."
                        },
                        {
                            "name": "DELETE_IN_PROGRESS",
                            "desc": "This lifecycle state is no longer used and is not returned by the API."
                        }
                    ]
                },
                {
                    "name": "projectNumber",
                    "desc": "The number uniquely identifying the project.\n\nExample: \u003ccode\u003e415104041262\u003c/code\u003e\nRead-only.",
                    "type": "int64"
                },
                {
                    "name": "parent",
                    "desc": "An optional reference to a parent Resource.\n\nThe only supported parent type is \"organization\". Once set, the parent\ncannot be modified. The `parent` can be set on creation or using the\n`UpdateProject` method; the end user must have the\n`resourcemanager.projects.create` permission on the parent.\n\nRead-write.",
                    "type": "ref",
                    "refType": "ResourceId"
                },
                {
                    "name": "labels",
                    "desc": "The labels associated with this Project.\n\nLabel keys must be between 1 and 63 characters long and must conform\nto the following regular expression: \\[a-z\\](\\[-a-z0-9\\]*\\[a-z0-9\\])?.\n\nLabel values must be between 0 and 63 characters long and must conform\nto the regular expression (\\[a-z\\](\\[-a-z0-9\\]*\\[a-z0-9\\])?)?.\n\nNo more than 256 labels can be associated with a given resource.\n\nClients should store labels in a representation such as JSON that does not\ndepend on specific characters being disallowed.\n\nExample: \u003ccode\u003e\"environment\" : \"dev\"\u003c/code\u003e\nRead-write.",
                    "collection": "map",
                    "type": "string"
                },
                {
                    "name": "createTime",
                    "desc": "Creation time.\n\nRead-only.",
                    "type": "datetime"
                },
                {
                    "name": "name",
                    "desc": "The user-assigned display name of the Project.\nIt must be 4 to 30 characters.\nAllowed characters are: lowercase and uppercase letters, numbers,\nhyphen, single-quote, double-quote, space, and exclamation point.\n\nExample: \u003ccode\u003eMy Project\u003c/code\u003e\nRead-write.",
                    "type": "string"
                }
            ]
        },
        {
            "name": "AuditConfig",
            "desc": "Specifies the audit configuration for a service.\nIt consists of which permission types are logged, and what identities, if\nany, are exempted from logging.\nAn AuditConifg must have one or more AuditLogConfigs.\n\nIf there are AuditConfigs for both `allServices` and a specific service,\nthe union of the two AuditConfigs is used for that service: the log_types\nspecified in each AuditConfig are enabled, and the exempted_members in each\nAuditConfig are exempted.\nExample Policy with multiple AuditConfigs:\n{\n  \"audit_configs\": [\n    {\n      \"service\": \"allServices\"\n      \"audit_log_configs\": [\n        {\n          \"log_type\": \"DATA_READ\",\n          \"exempted_members\": [\n            \"user:foo@gmail.com\"\n          ]\n        },\n        {\n          \"log_type\": \"DATA_WRITE\",\n        },\n        {\n          \"log_type\": \"ADMIN_READ\",\n        }\n      ]\n    },\n    {\n      \"service\": \"fooservice@googleapis.com\"\n      \"audit_log_configs\": [\n        {\n          \"log_type\": \"DATA_READ\",\n        },\n        {\n          \"log_type\": \"DATA_WRITE\",\n          \"exempted_members\": [\n            \"user:bar@gmail.com\"\n          ]\n        }\n      ]\n    }\n  ]\n}\nFor fooservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ\nlogging. It also exempts foo@gmail.com from DATA_READ logging, and\nbar@gmail.com from DATA_WRITE logging.",
            "type": "object",
            "fields": [
                {
                    "name": "service",
                    "desc": "Specifies a service that will be enabled for audit logging.\nFor example, `resourcemanager`, `storage`, `compute`.\n`allServices` is a special value that covers all services.",
                    "type": "string"
                },
                {
                    "name": "auditLogConfigs",
                    "desc": "The configuration for logging of each type of permission.\nNext ID: 4",
                    "collection": "array",
                    "type": "ref",
                    "refType": "AuditLogConfig"
                }
            ]
        },
        {
            "name": "GetIamPolicyRequest",
            "desc": "Request message for `GetIamPolicy` method.",
            "type": "object"
        },
        {
            "name": "ListProjectsResponse",
            "desc": "A page of the response received from the\nListProjects\nmethod.\n\nA paginated response where more pages are available has\n`next_page_token` set. This token can be used in a subsequent request to\nretrieve the next request page.",
            "type": "object",
            "fields": [
                {
                    "name": "projects",
                    "desc": "The list of Projects that matched the list filter. This list can\nbe paginated.",
                    "collection": "array",
                    "type": "ref",
                    "refType": "Project"
                },
                {
                    "name": "nextPageToken",
                    "desc": "Pagination token.\n\nIf the result set is too large to fit in a single response, this token\nis returned. It encodes the position of the current result cursor.\nFeeding this value into a new list request with the `page_token` parameter\ngives the next page of the results.\n\nWhen `next_page_token` is not filled in, there is no next page and\nthe list returned is the last page in the result set.\n\nPagination tokens have a limited lifetime.",
                    "type": "string"
                }
            ]
        }
    ],
    "resources": [
        {
            "name": "projects",
            "methods": [
                {
                    "name": "testIamPermissions",
                    "desc": "Returns permissions that a caller has on the specified Project.",
                    "path": "v1beta1/projects/{resource}:testIamPermissions",
                    "httpMethod": "POST",
                    "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloud-platform.read-only"
                    ],
                    "pathParams": [
                        {
                            "name": "resource",
                            "desc": "REQUIRED: The resource for which the policy detail is being requested.\nSee the operation documentation for the appropriate value for this field.",
                            "required": true,
                            "type": "string"
                        }
                    ],
                    "request": "TestIamPermissionsRequest",
                    "response": "TestIamPermissionsResponse"
                },
                {
                    "name": "delete",
                    "desc": "Marks the Project identified by the specified\n`project_id` (for example, `my-project-123`) for deletion.\nThis method will only affect the Project if the following criteria are met:\n\n+ The Project does not have a billing account associated with it.\n+ The Project has a lifecycle state of\nACTIVE.\n\nThis method changes the Project's lifecycle state from\nACTIVE\nto DELETE_REQUESTED.\nThe deletion starts at an unspecified time, at which point the project is\nno longer accessible.\n\nUntil the deletion completes, you can check the lifecycle state\nchecked by retrieving the Project with GetProject,\nand the Project remains visible to ListProjects.\nHowever, you cannot update the project.\n\nAfter the deletion completes, the Project is not retrievable by\nthe  GetProject and\nListProjects methods.\n\nThe caller must have modify permissions for this Project.",
                    "path": "v1beta1/projects/{projectId}",
                    "httpMethod": "DELETE",
                    "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                    ],
                    "pathParams": [
                        {
                            "name": "projectId",
                            "desc": "The Project ID (for example, `foo-bar-123`).\n\nRequired.",
                            "required": true,
                            "type": "string"
                        }
                    ],
                    "response": "Empty"
                },
                {
                    "name": "get",
                    "desc": "Retrieves the Project identified by the specified\n`project_id` (for example, `my-project-123`).\n\nThe caller must have read permissions for this Project.",
                    "path": "v1beta1/projects/{projectId}",
                    "httpMethod": "GET",
                    "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloud-platform.read-only"
                    ],
                    "pathParams": [
                        {
                            "name": "projectId",
                            "desc": "The Project ID (for example, `my-project-123`).\n\nRequired.",
                            "required": true,
                            "type": "string"
                        }
                    ],
                    "response": "Project"
                },
                {
                    "name": "undelete",
                    "desc": "Restores the Project identified by the specified\n`project_id` (for example, `my-project-123`).\nYou can only use this method for a Project that has a lifecycle state of\nDELETE_REQUESTED.\nAfter deletion starts, the Project cannot be restored.\n\nThe caller must have modify permissions for this Project.",
                    "path": "v1beta1/projects/{projectId}:undelete",
                    "httpMethod": "POST",
                    "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                    ],
                    "pathParams": [
                        {
                            "name": "projectId",
                            "desc": "The project ID (for example, `foo-bar-123`).\n\nRequired.",
                            "required": true,
                            "type": "string"
                        }
                    ],
                    "request": "UndeleteProjectRequest",
                    "response": "Empty"
                },
                {
                    "name": "getAncestry",
                    "desc": "Gets a list of ancestors in the resource hierarchy for the Project\nidentified by the specified `project_id` (for example, `my-project-123`).\n\nThe caller must have read permissions for this Project.",
                    "path": "v1beta1/projects/{projectId}:getAncestry",
                    "httpMethod": "POST",
                    "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloud-platform.read-only"
                    ],
                    "pathParams": [
                        {
                            "name": "projectId",
                            "desc": "The Project ID (for example, `my-project-123`).\n\nRequired.",
                            "required": true,
                            "type": "string"
                        }
                    ],
                    "request": "GetAncestryRequest",
                    "response": "GetAncestryResponse"
                },
                {
                    "name": "update",
                    "desc": "Updates the attributes of the Project identified by the specified\n`project_id` (for example, `my-project-123`).\n\nThe caller must have modify permissions for this Project.",
                    "path": "v1beta1/projects/{projectId}",
                    "httpMethod": "PUT",
                    "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                    ],
                    "pathParams": [
                        {
                            "name": "projectId",
                            "desc": "The project ID (for example, `my-project-123`).\n\nRequired.",
                            "required": true,
                            "type": "string"
                        }
                    ],
                    "request": "Project",
                    "response": "Project"
                },
                {
                    "name": "list",
                    "desc": "Lists Projects that are visible to the user and satisfy the\nspecified filter. This method returns Projects in an unspecified order.\nNew Projects do not necessarily appear at the end of the list.",
                    "path": "v1beta1/projects",
                    "httpMethod": "GET",
                    "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloud-platform.read-only"
                    ],
                    "optinalQueryParams": [
                        {
                            "name": "pageSize",
                            "desc": "The maximum number of Projects to return in the response.\nThe server can return fewer Projects than requested.\nIf unspecified, server picks an appropriate default.\n\nOptional.",
                            "type": "int32"
                        },
                        {
                            "name": "filter",
                            "desc": "An expression for filtering the results of the request.  Filter rules are\ncase insensitive. The fields eligible for filtering are:\n\n+ `name`\n+ `id`\n+ \u003ccode\u003elabels.\u003cem\u003ekey\u003c/em\u003e\u003c/code\u003e where *key* is the name of a label\n\nSome examples of using labels as filters:\n\n|Filter|Description|\n|------|-----------|\n|name:*|The project has a name.|\n|name:Howl|The project's name is `Howl` or `howl`.|\n|name:HOWL|Equivalent to above.|\n|NAME:howl|Equivalent to above.|\n|labels.color:*|The project has the label `color`.|\n|labels.color:red|The project's label `color` has the value `red`.|\n|labels.color:red\u0026nbsp;label.size:big|The project's label `color` has the value `red` and its label `size` has the value `big`.\n\nOptional.",
                            "type": "string"
                        },
                        {
                            "name": "pageToken",
                            "desc": "A pagination token returned from a previous call to ListProjects\nthat indicates from where listing should continue.\n\nOptional.",
                            "type": "string"
                        }
                    ],
                    "response": "ListProjectsResponse"
                },
                {
                    "name": "create",
                    "desc": "Creates a Project resource.\n\nInitially, the Project resource is owned by its creator exclusively.\nThe creator can later grant permission to others to read or update the\nProject.\n\nSeveral APIs are activated automatically for the Project, including\nGoogle Cloud Storage.",
                    "path": "v1beta1/projects",
                    "httpMethod": "POST",
                    "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                    ],
                    "optinalQueryParams": [
                        {
                            "name": "useLegacyStack",
                            "desc": "A safety hatch to opt out of the new reliable project creation process.",
                            "type": "bool"
                        }
                    ],
                    "request": "Project",
                    "response": "Project"
                },
                {
                    "name": "setIamPolicy",
                    "desc": "Sets the IAM access control policy for the specified Project. Replaces\nany existing policy.\n\nThe following constraints apply when using `setIamPolicy()`:\n\n+ Project does not support `allUsers` and `allAuthenticatedUsers` as\n`members` in a `Binding` of a `Policy`.\n\n+ The owner role can be granted only to `user` and `serviceAccount`.\n\n+ Service accounts can be made owners of a project directly\nwithout any restrictions. However, to be added as an owner, a user must be\ninvited via Cloud Platform console and must accept the invitation.\n\n+ A user cannot be granted the owner role using `setIamPolicy()`. The user\nmust be granted the owner role using the Cloud Platform Console and must\nexplicitly accept the invitation.\n\n+ Invitations to grant the owner role cannot be sent using `setIamPolicy()`;\nthey must be sent only using the Cloud Platform Console.\n\n+ Membership changes that leave the project without any owners that have\naccepted the Terms of Service (ToS) will be rejected.\n\n+ There must be at least one owner who has accepted the Terms of\nService (ToS) agreement in the policy. Calling `setIamPolicy()` to\nto remove the last ToS-accepted owner from the policy will fail. This\nrestriction also applies to legacy projects that no longer have owners\nwho have accepted the ToS. Edits to IAM policies will be rejected until\nthe lack of a ToS-accepting owner is rectified.\n\n+ Calling this method requires enabling the App Engine Admin API.\n\nNote: Removing service accounts from policies or changing their roles\ncan render services completely inoperable. It is important to understand\nhow the service account is being used before removing or updating its roles.",
                    "path": "v1beta1/projects/{resource}:setIamPolicy",
                    "httpMethod": "POST",
                    "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                    ],
                    "pathParams": [
                        {
                            "name": "resource",
                            "desc": "REQUIRED: The resource for which the policy is being specified.\nSee the operation documentation for the appropriate value for this field.",
                            "required": true,
                            "type": "string"
                        }
                    ],
                    "request": "SetIamPolicyRequest",
                    "response": "Policy"
                },
                {
                    "name": "getIamPolicy",
                    "desc": "Returns the IAM access control policy for the specified Project.\nPermission is denied if the policy or the resource does not exist.",
                    "path": "v1beta1/projects/{resource}:getIamPolicy",
                    "httpMethod": "POST",
                    "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloud-platform.read-only"
                    ],
                    "pathParams": [
                        {
                            "name": "resource",
                            "desc": "REQUIRED: The resource for which the policy is being requested.\nSee the operation documentation for the appropriate value for this field.",
                            "required": true,
                            "type": "string"
                        }
                    ],
                    "request": "GetIamPolicyRequest",
                    "response": "Policy"
                }
            ]
        },
        {
            "name": "organizations",
            "methods": [
                {
                    "name": "get",
                    "desc": "Fetches an Organization resource identified by the specified resource name.",
                    "path": "v1beta1/{+name}",
                    "httpMethod": "GET",
                    "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloud-platform.read-only"
                    ],
                    "pathParams": [
                        {
                            "name": "name",
                            "desc": "The resource name of the Organization to fetch, e.g. \"organizations/1234\".",
                            "required": true,
                            "type": "string",
                            "pattern": "^organizations/[^/]+$"
                        }
                    ],
                    "optinalQueryParams": [
                        {
                            "name": "organizationId",
                            "desc": "The id of the Organization resource to fetch.\nThis field is deprecated and will be removed in v1. Use name instead.",
                            "type": "string"
                        }
                    ],
                    "response": "Organization"
                },
                {
                    "name": "update",
                    "desc": "Updates an Organization resource identified by the specified resource name.",
                    "path": "v1beta1/{+name}",
                    "httpMethod": "PUT",
                    "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                    ],
                    "pathParams": [
                        {
                            "name": "name",
                            "desc": "Output Only. The resource name of the organization. This is the\norganization's relative path in the API. Its format is\n\"organizations/[organization_id]\". For example, \"organizations/1234\".",
                            "required": true,
                            "type": "string",
                            "pattern": "^organizations/[^/]+$"
                        }
                    ],
                    "request": "Organization",
                    "response": "Organization"
                },
                {
                    "name": "testIamPermissions",
                    "desc": "Returns permissions that a caller has on the specified Organization.\nThe `resource` field should be the organization's resource name,\ne.g. \"organizations/123\".",
                    "path": "v1beta1/{+resource}:testIamPermissions",
                    "httpMethod": "POST",
                    "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloud-platform.read-only"
                    ],
                    "pathParams": [
                        {
                            "name": "resource",
                            "desc": "REQUIRED: The resource for which the policy detail is being requested.\nSee the operation documentation for the appropriate value for this field.",
                            "required": true,
                            "type": "string",
                            "pattern": "^organizations/[^/]+$"
                        }
                    ],
                    "request": "TestIamPermissionsRequest",
                    "response": "TestIamPermissionsResponse"
                },
                {
                    "name": "list",
                    "desc": "Lists Organization resources that are visible to the user and satisfy\nthe specified filter. This method returns Organizations in an unspecified\norder. New Organizations do not necessarily appear at the end of the list.",
                    "path": "v1beta1/organizations",
                    "httpMethod": "GET",
                    "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloud-platform.read-only"
                    ],
                    "optinalQueryParams": [
                        {
                            "name": "pageSize",
                            "desc": "The maximum number of Organizations to return in the response.\nThis field is optional.",
                            "type": "int32"
                        },
                        {
                            "name": "filter",
                            "desc": "An optional query string used to filter the Organizations to return in\nthe response. Filter rules are case-insensitive.\n\n\nOrganizations may be filtered by `owner.directoryCustomerId` or by\n`domain`, where the domain is a Google for Work domain, for example:\n\n|Filter|Description|\n|------|-----------|\n|owner.directorycustomerid:123456789|Organizations with `owner.directory_customer_id` equal to `123456789`.|\n|domain:google.com|Organizations corresponding to the domain `google.com`.|\n\nThis field is optional.",
                            "type": "string"
                        },
                        {
                            "name": "pageToken",
                            "desc": "A pagination token returned from a previous call to `ListOrganizations`\nthat indicates from where listing should continue.\nThis field is optional.",
                            "type": "string"
                        }
                    ],
                    "response": "ListOrganizationsResponse"
                },
                {
                    "name": "setIamPolicy",
                    "desc": "Sets the access control policy on an Organization resource. Replaces any\nexisting policy. The `resource` field should be the organization's resource\nname, e.g. \"organizations/123\".",
                    "path": "v1beta1/{+resource}:setIamPolicy",
                    "httpMethod": "POST",
                    "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                    ],
                    "pathParams": [
                        {
                            "name": "resource",
                            "desc": "REQUIRED: The resource for which the policy is being specified.\nSee the operation documentation for the appropriate value for this field.",
                            "required": true,
                            "type": "string",
                            "pattern": "^organizations/[^/]+$"
                        }
                    ],
                    "request": "SetIamPolicyRequest",
                    "response": "Policy"
                },
                {
                    "name": "getIamPolicy",
                    "desc": "Gets the access control policy for an Organization resource. May be empty\nif no such policy or resource exists. The `resource` field should be the\norganization's resource name, e.g. \"organizations/123\".",
                    "path": "v1beta1/{+resource}:getIamPolicy",
                    "httpMethod": "POST",
                    "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloud-platform.read-only"
                    ],
                    "pathParams": [
                        {
                            "name": "resource",
                            "desc": "REQUIRED: The resource for which the policy is being requested.\nSee the operation documentation for the appropriate value for this field.",
                            "required": true,
                            "type": "string",
                            "pattern": "^organizations/[^/]+$"
                        }
                    ],
                    "request": "GetIamPolicyRequest",
                    "response": "Policy"
                }
            ]
        }
    ]
}